"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for feeprofile
 * @enhanceable
 * @public
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceClient = void 0;
// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.0
// source: instrument/feeprofile/service.proto
/* eslint-disable */
// @ts-nocheck
var grpcWeb = require("grpc-web");
var instrument_feeprofile_service_pb = require("../../instrument/feeprofile/service_pb"); // proto import: "instrument/feeprofile/service.proto"
var instrument_feeprofile_feeProfile_pb = require("../../instrument/feeprofile/feeProfile_pb"); // proto import: "instrument/feeprofile/feeProfile.proto"
var ServiceClient = /** @class */ (function () {
    function ServiceClient(hostname, credentials, options) {
        this.methodDescriptorCreate = new grpcWeb.MethodDescriptor('/feeprofile.Service/Create', grpcWeb.MethodType.UNARY, instrument_feeprofile_service_pb.CreateRequest, instrument_feeprofile_feeProfile_pb.FeeProfile, function (request) {
            return request.serializeBinary();
        }, instrument_feeprofile_feeProfile_pb.FeeProfile.deserializeBinary);
        this.methodDescriptorGet = new grpcWeb.MethodDescriptor('/feeprofile.Service/Get', grpcWeb.MethodType.UNARY, instrument_feeprofile_service_pb.GetRequest, instrument_feeprofile_feeProfile_pb.FeeProfile, function (request) {
            return request.serializeBinary();
        }, instrument_feeprofile_feeProfile_pb.FeeProfile.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname.replace(/\/+$/, '');
        this.credentials_ = credentials;
        this.options_ = options;
    }
    ServiceClient.prototype.create = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/feeprofile.Service/Create', request, metadata || {}, this.methodDescriptorCreate, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/feeprofile.Service/Create', request, metadata || {}, this.methodDescriptorCreate);
    };
    ServiceClient.prototype.get = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/feeprofile.Service/Get', request, metadata || {}, this.methodDescriptorGet, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/feeprofile.Service/Get', request, metadata || {}, this.methodDescriptorGet);
    };
    return ServiceClient;
}());
exports.ServiceClient = ServiceClient;
