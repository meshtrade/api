// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file instrument/fee/service.proto (package api.instrument.fee, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Fee } from "./fee_pb";
import { file_instrument_fee_fee } from "./fee_pb";
import type { Amount } from "../../ledger/amount_pb";
import { file_ledger_amount } from "../../ledger/amount_pb";
import type { Criterion } from "../../search/criterion_pb";
import { file_search_criterion } from "../../search/criterion_pb";
import type { Query } from "../../search/query_pb";
import { file_search_query } from "../../search/query_pb";
import type { LifecycleEventCategory } from "../feeprofile/lifecycleEventCategory_pb";
import { file_instrument_feeprofile_lifecycleEventCategory } from "../feeprofile/lifecycleEventCategory_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file instrument/fee/service.proto.
 */
export const file_instrument_fee_service: GenFile = /*@__PURE__*/
  fileDesc("ChxpbnN0cnVtZW50L2ZlZS9zZXJ2aWNlLnByb3RvEhJhcGkuaW5zdHJ1bWVudC5mZWUiNQoKR2V0UmVxdWVzdBInCghjcml0ZXJpYRgBIAMoCzIVLmFwaS5zZWFyY2guQ3JpdGVyaW9uIjMKC0dldFJlc3BvbnNlEiQKA2ZlZRgBIAEoCzIXLmFwaS5pbnN0cnVtZW50LmZlZS5GZWUiWAoLTGlzdFJlcXVlc3QSJwoIY3JpdGVyaWEYASADKAsyFS5hcGkuc2VhcmNoLkNyaXRlcmlvbhIgCgVxdWVyeRgCIAEoCzIRLmFwaS5zZWFyY2guUXVlcnkiRAoMTGlzdFJlc3BvbnNlEiUKBGZlZXMYASADKAsyFy5hcGkuaW5zdHJ1bWVudC5mZWUuRmVlEg0KBXRvdGFsGAIgASgDIkEKG0NhbGN1bGF0ZU1pbnRpbmdGZWVzUmVxdWVzdBIiCgZBbW91bnQYASABKAsyEi5hcGkubGVkZ2VyLkFtb3VudCJFChxDYWxjdWxhdGVNaW50aW5nRmVlc1Jlc3BvbnNlEiUKBEZlZXMYASADKAsyFy5hcGkuaW5zdHJ1bWVudC5mZWUuRmVlIkEKG0NhbGN1bGF0ZUJ1cm5pbmdGZWVzUmVxdWVzdBIiCgZBbW91bnQYASABKAsyEi5hcGkubGVkZ2VyLkFtb3VudCJFChxDYWxjdWxhdGVCdXJuaW5nRmVlc1Jlc3BvbnNlEiUKBEZlZXMYASADKAsyFy5hcGkuaW5zdHJ1bWVudC5mZWUuRmVlIogBCh1DYWxjdWxhdGVMaWZlY3ljbGVGZWVzUmVxdWVzdBIUCgxpbnN0cnVtZW50SUQYASABKAkSUQoWbGlmZWN5Y2xlRXZlbnRDYXRlZ29yeRgCIAEoDjIxLmFwaS5pbnN0cnVtZW50LmZlZXByb2ZpbGUuTGlmZWN5Y2xlRXZlbnRDYXRlZ29yeSJHCh5DYWxjdWxhdGVMaWZlY3ljbGVGZWVzUmVzcG9uc2USJQoERmVlcxgBIAMoCzIXLmFwaS5pbnN0cnVtZW50LmZlZS5GZWUiEwoRRnVsbFVwZGF0ZVJlcXVlc3QiFAoSRnVsbFVwZGF0ZVJlc3BvbnNlMvAECgdTZXJ2aWNlEkYKA0dldBIeLmFwaS5pbnN0cnVtZW50LmZlZS5HZXRSZXF1ZXN0Gh8uYXBpLmluc3RydW1lbnQuZmVlLkdldFJlc3BvbnNlEkkKBExpc3QSHy5hcGkuaW5zdHJ1bWVudC5mZWUuTGlzdFJlcXVlc3QaIC5hcGkuaW5zdHJ1bWVudC5mZWUuTGlzdFJlc3BvbnNlEnkKFENhbGN1bGF0ZU1pbnRpbmdGZWVzEi8uYXBpLmluc3RydW1lbnQuZmVlLkNhbGN1bGF0ZU1pbnRpbmdGZWVzUmVxdWVzdBowLmFwaS5pbnN0cnVtZW50LmZlZS5DYWxjdWxhdGVNaW50aW5nRmVlc1Jlc3BvbnNlEnkKFENhbGN1bGF0ZUJ1cm5pbmdGZWVzEi8uYXBpLmluc3RydW1lbnQuZmVlLkNhbGN1bGF0ZUJ1cm5pbmdGZWVzUmVxdWVzdBowLmFwaS5pbnN0cnVtZW50LmZlZS5DYWxjdWxhdGVCdXJuaW5nRmVlc1Jlc3BvbnNlEn8KFkNhbGN1bGF0ZUxpZmVjeWNsZUZlZXMSMS5hcGkuaW5zdHJ1bWVudC5mZWUuQ2FsY3VsYXRlTGlmZWN5Y2xlRmVlc1JlcXVlc3QaMi5hcGkuaW5zdHJ1bWVudC5mZWUuQ2FsY3VsYXRlTGlmZWN5Y2xlRmVlc1Jlc3BvbnNlElsKCkZ1bGxVcGRhdGUSJS5hcGkuaW5zdHJ1bWVudC5mZWUuRnVsbFVwZGF0ZVJlcXVlc3QaJi5hcGkuaW5zdHJ1bWVudC5mZWUuRnVsbFVwZGF0ZVJlc3BvbnNlQixaKmdpdGh1Yi5jb20vbWVzaHRyYWRlL2FwaS9nby9pbnN0cnVtZW50L2ZlZWIGcHJvdG8z", [file_instrument_fee_fee, file_ledger_amount, file_search_criterion, file_search_query, file_instrument_feeprofile_lifecycleEventCategory]);

/**
 *
 * GetRequest is the Get method request on the Fee Service.
 *
 * @generated from message api.instrument.fee.GetRequest
 */
export type GetRequest = Message<"api.instrument.fee.GetRequest"> & {
  /**
   *
   * Criteria is the search criteria that specifies which Fee to retrieve.
   *
   * @generated from field: repeated api.search.Criterion criteria = 1;
   */
  criteria: Criterion[];
};

/**
 * Describes the message api.instrument.fee.GetRequest.
 * Use `create(GetRequestSchema)` to create a new message.
 */
export const GetRequestSchema: GenMessage<GetRequest> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 0);

/**
 *
 * GetResponse is the Get method response on the Fee Service.
 *
 * @generated from message api.instrument.fee.GetResponse
 */
export type GetResponse = Message<"api.instrument.fee.GetResponse"> & {
  /**
   *
   * Fee is the Fee that was retrieved.
   *
   * @generated from field: api.instrument.fee.Fee fee = 1;
   */
  fee?: Fee;
};

/**
 * Describes the message api.instrument.fee.GetResponse.
 * Use `create(GetResponseSchema)` to create a new message.
 */
export const GetResponseSchema: GenMessage<GetResponse> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 1);

/**
 *
 * ListRequest is the List method request on the Fee Service.
 *
 * @generated from message api.instrument.fee.ListRequest
 */
export type ListRequest = Message<"api.instrument.fee.ListRequest"> & {
  /**
   *
   * Criteria is the search criteria that specifies which fees to retrieve.
   *
   * @generated from field: repeated api.search.Criterion criteria = 1;
   */
  criteria: Criterion[];

  /**
   *
   * Query controls pagination of the fees.
   *
   * @generated from field: api.search.Query query = 2;
   */
  query?: Query;
};

/**
 * Describes the message api.instrument.fee.ListRequest.
 * Use `create(ListRequestSchema)` to create a new message.
 */
export const ListRequestSchema: GenMessage<ListRequest> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 2);

/**
 *
 * ListResponse is the List method response on the Fee Service.
 *
 * @generated from message api.instrument.fee.ListResponse
 */
export type ListResponse = Message<"api.instrument.fee.ListResponse"> & {
  /**
   *
   * Fees are the list of fees that were retrieved.
   *
   * @generated from field: repeated api.instrument.fee.Fee fees = 1;
   */
  fees: Fee[];

  /**
   *
   * Total is the total number of fees that match the given criteria.
   *
   * @generated from field: int64 total = 2;
   */
  total: bigint;
};

/**
 * Describes the message api.instrument.fee.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export const ListResponseSchema: GenMessage<ListResponse> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 3);

/**
 *
 * CalculateMintingFeesRequest is the CalculateMintingFees method request on the Fee Service.
 *
 * @generated from message api.instrument.fee.CalculateMintingFeesRequest
 */
export type CalculateMintingFeesRequest = Message<"api.instrument.fee.CalculateMintingFeesRequest"> & {
  /**
   *
   * Amount is the mint Amount for which fees are calculated.
   *
   * @generated from field: api.ledger.Amount Amount = 1;
   */
  Amount?: Amount;
};

/**
 * Describes the message api.instrument.fee.CalculateMintingFeesRequest.
 * Use `create(CalculateMintingFeesRequestSchema)` to create a new message.
 */
export const CalculateMintingFeesRequestSchema: GenMessage<CalculateMintingFeesRequest> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 4);

/**
 *
 * CalculateMintingFeesResponse is the CalculateMintingFees method response on the Fee Service.
 *
 * @generated from message api.instrument.fee.CalculateMintingFeesResponse
 */
export type CalculateMintingFeesResponse = Message<"api.instrument.fee.CalculateMintingFeesResponse"> & {
  /**
   *
   * Fees are the fees calculated for the requested mint amount.
   *
   * @generated from field: repeated api.instrument.fee.Fee Fees = 1;
   */
  Fees: Fee[];
};

/**
 * Describes the message api.instrument.fee.CalculateMintingFeesResponse.
 * Use `create(CalculateMintingFeesResponseSchema)` to create a new message.
 */
export const CalculateMintingFeesResponseSchema: GenMessage<CalculateMintingFeesResponse> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 5);

/**
 *
 * CalculateBurningFeesRequest is the CalculateBurningFees method request on the Fee Service.
 *
 * @generated from message api.instrument.fee.CalculateBurningFeesRequest
 */
export type CalculateBurningFeesRequest = Message<"api.instrument.fee.CalculateBurningFeesRequest"> & {
  /**
   *
   * Amount is the burn Amount for which fees are calculated.
   *
   * @generated from field: api.ledger.Amount Amount = 1;
   */
  Amount?: Amount;
};

/**
 * Describes the message api.instrument.fee.CalculateBurningFeesRequest.
 * Use `create(CalculateBurningFeesRequestSchema)` to create a new message.
 */
export const CalculateBurningFeesRequestSchema: GenMessage<CalculateBurningFeesRequest> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 6);

/**
 *
 * CalculateBurningFeesResponse is the CalculateBurningFees method response on the Fee Service.
 *
 * @generated from message api.instrument.fee.CalculateBurningFeesResponse
 */
export type CalculateBurningFeesResponse = Message<"api.instrument.fee.CalculateBurningFeesResponse"> & {
  /**
   *
   * Fees are the fees calculated for the requested burn amount.
   *
   * @generated from field: repeated api.instrument.fee.Fee Fees = 1;
   */
  Fees: Fee[];
};

/**
 * Describes the message api.instrument.fee.CalculateBurningFeesResponse.
 * Use `create(CalculateBurningFeesResponseSchema)` to create a new message.
 */
export const CalculateBurningFeesResponseSchema: GenMessage<CalculateBurningFeesResponse> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 7);

/**
 *
 * CalculateLifecycleFeesRequest is the CalculateLifecycleFees method request on the Fee Service.
 *
 * @generated from message api.instrument.fee.CalculateLifecycleFeesRequest
 */
export type CalculateLifecycleFeesRequest = Message<"api.instrument.fee.CalculateLifecycleFeesRequest"> & {
  /**
   *
   * InstrumentID is the id of the instrument for which lifecycle fees are calculated.
   *
   * @generated from field: string instrumentID = 1;
   */
  instrumentID: string;

  /**
   *
   * LifecycleEventCategory is the category of lifecycle events for which
   * lifecycle fees are calculated
   *
   * @generated from field: api.instrument.feeprofile.LifecycleEventCategory lifecycleEventCategory = 2;
   */
  lifecycleEventCategory: LifecycleEventCategory;
};

/**
 * Describes the message api.instrument.fee.CalculateLifecycleFeesRequest.
 * Use `create(CalculateLifecycleFeesRequestSchema)` to create a new message.
 */
export const CalculateLifecycleFeesRequestSchema: GenMessage<CalculateLifecycleFeesRequest> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 8);

/**
 *
 * CalculateLifecycleFeesResponse is the CalculateLifecycleFees method response on the Fee Service.
 *
 * @generated from message api.instrument.fee.CalculateLifecycleFeesResponse
 */
export type CalculateLifecycleFeesResponse = Message<"api.instrument.fee.CalculateLifecycleFeesResponse"> & {
  /**
   *
   * Fees are the fees calculated for the requested instrument.
   *
   * @generated from field: repeated api.instrument.fee.Fee Fees = 1;
   */
  Fees: Fee[];
};

/**
 * Describes the message api.instrument.fee.CalculateLifecycleFeesResponse.
 * Use `create(CalculateLifecycleFeesResponseSchema)` to create a new message.
 */
export const CalculateLifecycleFeesResponseSchema: GenMessage<CalculateLifecycleFeesResponse> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 9);

/**
 *
 * FullUpdateRequest is the empty FullUpdate method request on the Fee Service.
 *
 * @generated from message api.instrument.fee.FullUpdateRequest
 */
export type FullUpdateRequest = Message<"api.instrument.fee.FullUpdateRequest"> & {
};

/**
 * Describes the message api.instrument.fee.FullUpdateRequest.
 * Use `create(FullUpdateRequestSchema)` to create a new message.
 */
export const FullUpdateRequestSchema: GenMessage<FullUpdateRequest> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 10);

/**
 *
 * FullUpdateResponse is the empty FullUpdate method response on the Fee Service.
 *
 * @generated from message api.instrument.fee.FullUpdateResponse
 */
export type FullUpdateResponse = Message<"api.instrument.fee.FullUpdateResponse"> & {
};

/**
 * Describes the message api.instrument.fee.FullUpdateResponse.
 * Use `create(FullUpdateResponseSchema)` to create a new message.
 */
export const FullUpdateResponseSchema: GenMessage<FullUpdateResponse> = /*@__PURE__*/
  messageDesc(file_instrument_fee_service, 11);

/**
 *
 * Service is the Fee Service.
 *
 * @generated from service api.instrument.fee.Service
 */
export const Service: GenService<{
  /**
   * @generated from rpc api.instrument.fee.Service.Get
   */
  get: {
    methodKind: "unary";
    input: typeof GetRequestSchema;
    output: typeof GetResponseSchema;
  },
  /**
   * @generated from rpc api.instrument.fee.Service.List
   */
  list: {
    methodKind: "unary";
    input: typeof ListRequestSchema;
    output: typeof ListResponseSchema;
  },
  /**
   * @generated from rpc api.instrument.fee.Service.CalculateMintingFees
   */
  calculateMintingFees: {
    methodKind: "unary";
    input: typeof CalculateMintingFeesRequestSchema;
    output: typeof CalculateMintingFeesResponseSchema;
  },
  /**
   * @generated from rpc api.instrument.fee.Service.CalculateBurningFees
   */
  calculateBurningFees: {
    methodKind: "unary";
    input: typeof CalculateBurningFeesRequestSchema;
    output: typeof CalculateBurningFeesResponseSchema;
  },
  /**
   * @generated from rpc api.instrument.fee.Service.CalculateLifecycleFees
   */
  calculateLifecycleFees: {
    methodKind: "unary";
    input: typeof CalculateLifecycleFeesRequestSchema;
    output: typeof CalculateLifecycleFeesResponseSchema;
  },
  /**
   * @generated from rpc api.instrument.fee.Service.FullUpdate
   */
  fullUpdate: {
    methodKind: "unary";
    input: typeof FullUpdateRequestSchema;
    output: typeof FullUpdateResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_instrument_fee_service, 0);

