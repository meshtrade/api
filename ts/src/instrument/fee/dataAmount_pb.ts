// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file instrument/fee/dataAmount.proto (package api.instrument.fee, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Amount } from "../../ledger/amount_pb";
import { file_ledger_amount } from "../../ledger/amount_pb";
import type { Decimal } from "../../num/decimal_pb";
import { file_num_decimal } from "../../num/decimal_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file instrument/fee/dataAmount.proto.
 */
export const file_instrument_fee_dataAmount: GenFile = /*@__PURE__*/
  fileDesc("Ch9pbnN0cnVtZW50L2ZlZS9kYXRhQW1vdW50LnByb3RvEhJhcGkuaW5zdHJ1bWVudC5mZWUiWgoKQW1vdW50RGF0YRIpCg1hbW91bnRFeGNsVkFUGAEgASgLMhIuYXBpLmxlZGdlci5BbW91bnQSIQoHdmF0UmF0ZRgCIAEoCzIQLmFwaS5udW0uRGVjaW1hbEIsWipnaXRodWIuY29tL21lc2h0cmFkZS9hcGkvZ28vaW5zdHJ1bWVudC9mZWViBnByb3RvMw", [file_ledger_amount, file_num_decimal]);

/**
 *
 * AmountData is the additional calculation data for a Fee
 * of a fixed amount.
 * This is used for flat fees that do not depend on a variable
 * base amount and percentage for calculation.
 *
 * @bson-marshalled
 *
 * @generated from message api.instrument.fee.AmountData
 */
export type AmountData = Message<"api.instrument.fee.AmountData"> & {
  /**
   *
   * AmountExclVAT is the VAT exclusive amount used to calculate
   * Fee.VatAmount and the resulting Fee.AmountInclVAT.
   *
   * @generated from field: api.ledger.Amount amountExclVAT = 1;
   */
  amountExclVAT?: Amount;

  /**
   *
   * VATRate is the rate used to calculate Fee.VatAmount.
   *
   * @generated from field: api.num.Decimal vatRate = 2;
   */
  vatRate?: Decimal;
};

/**
 * Describes the message api.instrument.fee.AmountData.
 * Use `create(AmountDataSchema)` to create a new message.
 */
export const AmountDataSchema: GenMessage<AmountData> = /*@__PURE__*/
  messageDesc(file_instrument_fee_dataAmount, 0);

