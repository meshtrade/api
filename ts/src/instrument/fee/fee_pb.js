// source: instrument/fee/fee.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var instrument_fee_state_pb = require('../../instrument/fee/state_pb.js');
goog.object.extend(proto, instrument_fee_state_pb);
var instrument_fee_category_pb = require('../../instrument/fee/category_pb.js');
goog.object.extend(proto, instrument_fee_category_pb);
var instrument_fee_data_pb = require('../../instrument/fee/data_pb.js');
goog.object.extend(proto, instrument_fee_data_pb);
var ledger_amount_pb = require('../../ledger/amount_pb.js');
goog.object.extend(proto, ledger_amount_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.fee.Fee', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fee.Fee = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fee.Fee, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fee.Fee.displayName = 'proto.fee.Fee';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fee.Fee.prototype.toObject = function(opt_includeInstance) {
  return proto.fee.Fee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fee.Fee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fee.Fee.toObject = function(includeInstance, msg) {
  var f, obj = {
instrumentname: jspb.Message.getFieldWithDefault(msg, 1, ""),
description: jspb.Message.getFieldWithDefault(msg, 2, ""),
state: jspb.Message.getFieldWithDefault(msg, 3, 0),
amountinclvat: (f = msg.getAmountinclvat()) && ledger_amount_pb.Amount.toObject(includeInstance, f),
vatamount: jspb.Message.getFieldWithDefault(msg, 5, ""),
category: jspb.Message.getFieldWithDefault(msg, 6, 0),
paymentdate: (f = msg.getPaymentdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
data: (f = msg.getData()) && instrument_fee_data_pb.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fee.Fee}
 */
proto.fee.Fee.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fee.Fee;
  return proto.fee.Fee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fee.Fee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fee.Fee}
 */
proto.fee.Fee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstrumentname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.fee.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = new ledger_amount_pb.Amount;
      reader.readMessage(value,ledger_amount_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountinclvat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVatamount(value);
      break;
    case 6:
      var value = /** @type {!proto.fee.Category} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPaymentdate(value);
      break;
    case 9:
      var value = new instrument_fee_data_pb.Data;
      reader.readMessage(value,instrument_fee_data_pb.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fee.Fee.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fee.Fee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fee.Fee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fee.Fee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstrumentname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAmountinclvat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      ledger_amount_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getVatamount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPaymentdate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      instrument_fee_data_pb.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional string instrumentName = 1;
 * @return {string}
 */
proto.fee.Fee.prototype.getInstrumentname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.setInstrumentname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.fee.Fee.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional State state = 3;
 * @return {!proto.fee.State}
 */
proto.fee.Fee.prototype.getState = function() {
  return /** @type {!proto.fee.State} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.fee.State} value
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional ledger.Amount amountInclVat = 4;
 * @return {?proto.ledger.Amount}
 */
proto.fee.Fee.prototype.getAmountinclvat = function() {
  return /** @type{?proto.ledger.Amount} */ (
    jspb.Message.getWrapperField(this, ledger_amount_pb.Amount, 4));
};


/**
 * @param {?proto.ledger.Amount|undefined} value
 * @return {!proto.fee.Fee} returns this
*/
proto.fee.Fee.prototype.setAmountinclvat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.clearAmountinclvat = function() {
  return this.setAmountinclvat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fee.Fee.prototype.hasAmountinclvat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string vatAmount = 5;
 * @return {string}
 */
proto.fee.Fee.prototype.getVatamount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.setVatamount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Category category = 6;
 * @return {!proto.fee.Category}
 */
proto.fee.Fee.prototype.getCategory = function() {
  return /** @type {!proto.fee.Category} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.fee.Category} value
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.setCategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp paymentDate = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.fee.Fee.prototype.getPaymentdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.fee.Fee} returns this
*/
proto.fee.Fee.prototype.setPaymentdate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.clearPaymentdate = function() {
  return this.setPaymentdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fee.Fee.prototype.hasPaymentdate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Data data = 9;
 * @return {?proto.fee.Data}
 */
proto.fee.Fee.prototype.getData = function() {
  return /** @type{?proto.fee.Data} */ (
    jspb.Message.getWrapperField(this, instrument_fee_data_pb.Data, 9));
};


/**
 * @param {?proto.fee.Data|undefined} value
 * @return {!proto.fee.Fee} returns this
*/
proto.fee.Fee.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fee.Fee} returns this
 */
proto.fee.Fee.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fee.Fee.prototype.hasData = function() {
  return jspb.Message.getField(this, 9) != null;
};


goog.object.extend(exports, proto.fee);
