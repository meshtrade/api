// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file legal/company/company.proto (package api.legal.company, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Address } from "../../location/address_pb";
import { file_location_address } from "../../location/address_pb";
import type { CompanyPublicContactInfo } from "../companyPublicContactInfo_pb";
import { file_legal_companyPublicContactInfo } from "../companyPublicContactInfo_pb";
import type { CompanyRepresentative } from "../companyRepresentative_pb";
import { file_legal_companyRepresentative } from "../companyRepresentative_pb";
import type { ConnectedCompany } from "../connectedCompany_pb";
import { file_legal_connectedCompany } from "../connectedCompany_pb";
import type { ConnectedIndividual } from "../connectedIndividual_pb";
import { file_legal_connectedIndividual } from "../connectedIndividual_pb";
import type { IndustryClassification } from "./industryClassification_pb";
import { file_legal_company_industryClassification } from "./industryClassification_pb";
import type { LegalForm } from "../legalform_pb";
import { file_legal_legalform } from "../legalform_pb";
import type { ClientType } from "../../client/clientType_pb";
import { file_client_clientType } from "../../client/clientType_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file legal/company/company.proto.
 */
export const file_legal_company_company: GenFile = /*@__PURE__*/
  fileDesc("ChtsZWdhbC9jb21wYW55L2NvbXBhbnkucHJvdG8SEWFwaS5sZWdhbC5jb21wYW55IoQGCgdDb21wYW55EhYKDnJlZ2lzdGVyZWROYW1lGAEgASgJEhoKEnRheFJlZmVyZW5jZU51bWJlchgCIAEoCRIaChJyZWdpc3RyYXRpb25OdW1iZXIYAyABKAkSHQoVdmF0UmVnaXN0cmF0aW9uTnVtYmVyGAQgASgJEkAKE3B1YmxpY19jb250YWN0X2luZm8YBSABKAsyIy5hcGkubGVnYWwuQ29tcGFueVB1YmxpY0NvbnRhY3RJbmZvEj8KFWNvbXBhbnlSZXByZXNlbnRhdGl2ZRgGIAEoCzIgLmFwaS5sZWdhbC5Db21wYW55UmVwcmVzZW50YXRpdmUSSQoWaW5kdXN0cnlDbGFzc2lmaWNhdGlvbhgHIAEoCzIpLmFwaS5sZWdhbC5jb21wYW55LkluZHVzdHJ5Q2xhc3NpZmljYXRpb24SFwoPbGlzdGVkX2V4Y2hhbmdlGAggASgJEhkKEWxpc3RpbmdfcmVmZXJlbmNlGAkgASgJEh4KFmNvdW50cnlPZkluY29ycG9yYXRpb24YCiABKAkSMQoTZm9ybU9mSW5jb3Jwb3JhdGlvbhgLIAEoDjIULmFwaS5sZWdhbC5MZWdhbEZvcm0SMAoRcmVnaXN0ZXJlZEFkZHJlc3MYDCABKAsyFS5hcGkubG9jYXRpb24uQWRkcmVzcxIuCg9idXNpbmVzc0FkZHJlc3MYDSABKAsyFS5hcGkubG9jYXRpb24uQWRkcmVzcxIwChFoZWFkT2ZmaWNlQWRkcmVzcxgOIAEoCzIVLmFwaS5sb2NhdGlvbi5BZGRyZXNzEjwKFGNvbm5lY3RlZEluZGl2aWR1YWxzGA8gAygLMh4uYXBpLmxlZ2FsLkNvbm5lY3RlZEluZGl2aWR1YWwSNwoSY29ubmVjdGVkQ29tcGFuaWVzGBAgAygLMhsuYXBpLmxlZ2FsLkNvbm5lY3RlZENvbXBhbnkSKgoKY2xpZW50VHlwZRgRIAMoDjIWLmFwaS5jbGllbnQuQ2xpZW50VHlwZUIrWilnaXRodWIuY29tL21lc2h0cmFkZS9hcGkvZ28vbGVnYWwvY29tcGFueWIGcHJvdG8z", [file_google_protobuf_timestamp, file_location_address, file_legal_companyPublicContactInfo, file_legal_companyRepresentative, file_legal_connectedCompany, file_legal_connectedIndividual, file_legal_company_industryClassification, file_legal_legalform, file_client_clientType]);

/**
 * @generated from message api.legal.company.Company
 */
export type Company = Message<"api.legal.company.Company"> & {
  /**
   * Registered name of the company (required field)
   *
   * @generated from field: string registeredName = 1;
   */
  registeredName: string;

  /**
   * Tax reference number of the company
   *
   * @generated from field: string taxReferenceNumber = 2;
   */
  taxReferenceNumber: string;

  /**
   * Registration number of the company
   *
   * @generated from field: string registrationNumber = 3;
   */
  registrationNumber: string;

  /**
   * VAT (Value-Added Tax) registration number of the company
   *
   * @generated from field: string vatRegistrationNumber = 4;
   */
  vatRegistrationNumber: string;

  /**
   * Public contact information of the company
   *
   * @generated from field: api.legal.CompanyPublicContactInfo public_contact_info = 5;
   */
  publicContactInfo?: CompanyPublicContactInfo;

  /**
   * Details of the company representative
   *
   * @generated from field: api.legal.CompanyRepresentative companyRepresentative = 6;
   */
  companyRepresentative?: CompanyRepresentative;

  /**
   * Industry classification of the company
   *
   * @generated from field: api.legal.company.IndustryClassification industryClassification = 7;
   */
  industryClassification?: IndustryClassification;

  /**
   * Stock exchange where the company is listed
   *
   * @generated from field: string listed_exchange = 8;
   */
  listedExchange: string;

  /**
   * Listing reference number for the stock exchange
   *
   * @generated from field: string listing_reference = 9;
   */
  listingReference: string;

  /**
   * Country code representing the country of incorporation
   *
   * @generated from field: string countryOfIncorporation = 10;
   */
  countryOfIncorporation: string;

  /**
   * Legal form of the company (e.g., Proprietorship, Corporation)
   *
   * @generated from field: api.legal.LegalForm formOfIncorporation = 11;
   */
  formOfIncorporation: LegalForm;

  /**
   * The company's registered address
   *
   * @generated from field: api.location.Address registeredAddress = 12;
   */
  registeredAddress?: Address;

  /**
   * The company's business address
   *
   * @generated from field: api.location.Address businessAddress = 13;
   */
  businessAddress?: Address;

  /**
   * The company's head office address
   *
   * @generated from field: api.location.Address headOfficeAddress = 14;
   */
  headOfficeAddress?: Address;

  /**
   * List of individuals connected to the company, such as directors or stakeholders
   *
   * @generated from field: repeated api.legal.ConnectedIndividual connectedIndividuals = 15;
   */
  connectedIndividuals: ConnectedIndividual[];

  /**
   * List of companies connected to the company
   *
   * @generated from field: repeated api.legal.ConnectedCompany connectedCompanies = 16;
   */
  connectedCompanies: ConnectedCompany[];

  /**
   * @generated from field: repeated api.client.ClientType clientType = 17;
   */
  clientType: ClientType[];
};

/**
 * Describes the message api.legal.company.Company.
 * Use `create(CompanySchema)` to create a new message.
 */
export const CompanySchema: GenMessage<Company> = /*@__PURE__*/
  messageDesc(file_legal_company_company, 0);

