// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file ledger/token.proto (package api.ledger, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Network } from "./network_pb";
import { file_ledger_network } from "./network_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file ledger/token.proto.
 */
export const file_ledger_token: GenFile = /*@__PURE__*/
  fileDesc("ChJsZWRnZXIvdG9rZW4ucHJvdG8SCmFwaS5sZWRnZXIiSwoFVG9rZW4SDAoEY29kZRgBIAEoCRIOCgZpc3N1ZXIYAiABKAkSJAoHbmV0d29yaxgDIAEoDjITLmFwaS5sZWRnZXIuTmV0d29ya0IkWiJnaXRodWIuY29tL21lc2h0cmFkZS9hcGkvZ28vbGVkZ2VyYgZwcm90bzM", [file_ledger_network]);

/**
 *
 * Token is the unit of account for a particular asset on a specific blockchain network.
 *
 * @generated from message api.ledger.Token
 */
export type Token = Message<"api.ledger.Token"> & {
  /**
   *
   * Code is the code of the token.
   * Examples: "mZAR", "USDC" or "BTC"
   *
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   *
   * Issuer is the issuing entity of the token.
   *
   * @generated from field: string issuer = 2;
   */
  issuer: string;

  /**
   *
   * Network is the he blockchain network on which the token exists.
   *
   * @generated from field: api.ledger.Network network = 3;
   */
  network: Network;
};

/**
 * Describes the message api.ledger.Token.
 * Use `create(TokenSchema)` to create a new message.
 */
export const TokenSchema: GenMessage<Token> = /*@__PURE__*/
  messageDesc(file_ledger_token, 0);

