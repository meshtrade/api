# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: meshtrade/fee/instrument_fee/v1/instrument_fee.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'meshtrade/fee/instrument_fee/v1/instrument_fee.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from meshtrade.fee.instrument_fee.v1 import data_amount_pb2 as meshtrade_dot_fee_dot_instrument__fee_dot_v1_dot_data__amount__pb2
from meshtrade.fee.instrument_fee.v1 import data_per_unit_pb2 as meshtrade_dot_fee_dot_instrument__fee_dot_v1_dot_data__per__unit__pb2
from meshtrade.fee.instrument_fee.v1 import data_rate_pb2 as meshtrade_dot_fee_dot_instrument__fee_dot_v1_dot_data__rate__pb2
from meshtrade.type.v1 import amount_pb2 as meshtrade_dot_type_dot_v1_dot_amount__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n4meshtrade/fee/instrument_fee/v1/instrument_fee.proto\x12\x1fmeshtrade.fee.instrument_fee.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x31meshtrade/fee/instrument_fee/v1/data_amount.proto\x1a\x33meshtrade/fee/instrument_fee/v1/data_per_unit.proto\x1a/meshtrade/fee/instrument_fee/v1/data_rate.proto\x1a\x1emeshtrade/type/v1/amount.proto\"\xa1\x05\n\rInstrumentFee\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12\'\n\x0finstrument_name\x18\x02 \x01(\tR\x0einstrumentName\x12<\n\x05state\x18\x03 \x01(\x0e\x32&.meshtrade.fee.instrument_fee.v1.StateR\x05state\x12 \n\x0b\x64\x65scription\x18\x04 \x01(\tR\x0b\x64\x65scription\x12\x41\n\x0f\x61mount_incl_vat\x18\x05 \x01(\x0b\x32\x19.meshtrade.type.v1.AmountR\ramountInclVat\x12\x38\n\nvat_amount\x18\x06 \x01(\x0b\x32\x19.meshtrade.type.v1.AmountR\tvatAmount\x12\x45\n\x08\x63\x61tegory\x18\x07 \x01(\x0e\x32).meshtrade.fee.instrument_fee.v1.CategoryR\x08\x63\x61tegory\x12=\n\x0cpayment_date\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0bpaymentDate\x12N\n\x0b\x61mount_data\x18\t \x01(\x0b\x32+.meshtrade.fee.instrument_fee.v1.AmountDataH\x00R\namountData\x12H\n\trate_data\x18\n \x01(\x0b\x32).meshtrade.fee.instrument_fee.v1.RateDataH\x00R\x08rateData\x12R\n\rper_unit_data\x18\x0b \x01(\x0b\x32,.meshtrade.fee.instrument_fee.v1.PerUnitDataH\x00R\x0bperUnitDataB\x06\n\x04\x64\x61ta*\x97\x01\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x12\n\x0eSTATE_UPCOMING\x10\x01\x12\r\n\tSTATE_DUE\x10\x02\x12\x1d\n\x19STATE_PAYMENT_IN_PROGRESS\x10\x03\x12\x10\n\x0cSTATE_FAILED\x10\x04\x12\x13\n\x0fSTATE_CANCELLED\x10\x05\x12\x0e\n\nSTATE_PAID\x10\x06*\x8f\x01\n\x08\x43\x61tegory\x12\x18\n\x14\x43\x41TEGORY_UNSPECIFIED\x10\x00\x12\x19\n\x15\x43\x41TEGORY_TOKENISATION\x10\x01\x12\x14\n\x10\x43\x41TEGORY_LISTING\x10\x02\x12&\n\"CATEGORY_PRIMARY_MARKET_SETTLEMENT\x10\x03\x12\x10\n\x0c\x43\x41TEGORY_AUM\x10\x04\x42\x44ZBgithub.com/meshtrade/api/go/fee/instrument_fee/v1;instrument_feev1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'meshtrade.fee.instrument_fee.v1.instrument_fee_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZBgithub.com/meshtrade/api/go/fee/instrument_fee/v1;instrument_feev1'
  _globals['_STATE']._serialized_start=984
  _globals['_STATE']._serialized_end=1135
  _globals['_CATEGORY']._serialized_start=1138
  _globals['_CATEGORY']._serialized_end=1281
  _globals['_INSTRUMENTFEE']._serialized_start=308
  _globals['_INSTRUMENTFEE']._serialized_end=981
# @@protoc_insertion_point(module_scope)
