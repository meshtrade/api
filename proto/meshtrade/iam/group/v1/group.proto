syntax = "proto3";

package meshtrade.iam.group.v1;

import "buf/validate/validate.proto";

option go_package = "github.com/meshtrade/api/go/iam/group/v1;groupv1";
option java_package = "co.meshtrade.api.iam.group.v1";

/*
   Organizational group resource representing a multi-tenancy boundary.

   Groups form hierarchical ownership structures within Mesh, enabling resource
   isolation, permission inheritance, and organizational modeling. Each group
   can own sub-groups, users, API users, accounts, and trading resources,
   providing a complete tenant separation model.
*/
message Group {
  /*
     Unique resource identifier in format groups/{ULIDv2}.
     Immutable and system-generated on creation.
  */
  string name = 1;

  /*
     Parent group resource name establishing direct ownership.
     Defines the immediate hierarchical relationship.
  */
  string owner = 2 [(buf.validate.field) = {
    string: {
      min_len: 1
      pattern: "^groups/[0-9A-Z]{26}$"
    }
    cel: {
      id: "owner.required"
      message: "owner is required and must be in format groups/{ULIDv2}"
      expression: "size(this) > 0"
    }
    cel: {
      id: "owner.format"
      message: "owner must be in format groups/{ULIDv2} where ULIDv2 is exactly 26 uppercase alphanumeric characters"
      expression: "this.matches('^groups/[0-9A-Z]{26}$')"
    }
  }];

  /*
     Complete ownership path from root to this group for efficient access control.
     System-maintained array enabling hierarchical permission inheritance.
  */
  repeated string owners = 3 [(buf.validate.field) = {
    repeated: {
      items: {
        string: {
          min_len: 1
          pattern: "^groups/[0-9A-Z]{26}$"
        }
        cel: {
          id: "owners.format"
          message: "each owner must be in format groups/{ULIDv2} where ULIDv2 is exactly 26 uppercase alphanumeric characters"
          expression: "this.matches('^groups/[0-9A-Z]{26}$')"
        }
      }
    }
  }];

  /*
     Human-readable name for organizational identification and display.
     User-configurable and non-unique across the system.
  */
  string display_name = 4 [(buf.validate.field) = {
    string: {
      min_len: 1
      max_len: 255
    }
    cel: {
      id: "display_name.required"
      message: "display name is required and must be between 1 and 255 characters"
      expression: "size(this) > 0 && size(this) <= 255"
    }
  }];

  /*
     Optional contextual information describing the group's organizational purpose.
  */
  string description = 5 [(buf.validate.field) = {
    string: {max_len: 1000}
    cel: {
      id: "description.max_length"
      message: "description must not exceed 1000 characters"
      expression: "size(this) <= 1000"
    }
  }];
}
