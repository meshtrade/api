syntax = "proto3";

package meshtrade.iam.role.v1;

import "google/protobuf/descriptor.proto";

option go_package = "github.com/meshtrade/api/go/iam/role/v1;rolev1";
option java_package = "co.meshtrade.api.iam.role.v1";

/*
   Role defines a named collection of permissions.
   This allows for the creation of business-level roles (e.g., "AccountReader", "AccountAdmin")
   that group a set of granular, string-based permissions. Roles are
   defined at the file level in a service's `.proto` file.
*/
enum Role {
  /*
     The default value, indicating the role is unknown or not specified.
     This should be treated as an error and not be used explicitly.
  */
  ROLE_UNSPECIFIED = 0;

  ROLE_WALLET_ADMIN = 1000000;
  ROLE_WALLET_VIEWER = 1000001;

  ROLE_COMPLIANCE_ADMIN = 2000000;
  ROLE_COMPLIANCE_VIEWER = 2000001;

  ROLE_IAM_ADMIN = 3000000;
  ROLE_IAM_VIEWER = 3000001;
  ROLE_IAM_GROUP_ADMIN = 3000002;
  ROLE_IAM_GROUP_VIEWER = 3000003;

  ROLE_ISSUANCE_HUB_ADMIN = 4000000;
  ROLE_ISSUANCE_HUB_VIEWER = 4000001;

  ROLE_TRADING_ADMIN = 5000000;
  ROLE_TRADING_VIEWER = 5000001;

  ROLE_REPORT_ADMIN = 6000000;
  ROLE_REPORT_VIEWER = 6000001;
}

/*
   A file-level option to define a list of roles for a service domain.

   This is used at the top of a `service.proto` file to declare all the
   business roles relevant to that service, making the authorization
   model for the service self-contained and easy to discover.
*/
extend google.protobuf.FileOptions {
  RoleList standard_roles = 50003;
}

extend google.protobuf.MethodOptions {
  RoleList roles = 50005;
}

message RoleList {
  repeated Role roles = 1;
}
