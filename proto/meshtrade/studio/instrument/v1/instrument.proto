syntax = "proto3";

package meshtrade.studio.instrument.v1;

import "buf/validate/validate.proto";
import "meshtrade/type/v1/token.proto";

option go_package = "github.com/meshtrade/api/go/studio/instrument/v1;instrument_v1";
option java_package = "co.meshtrade.api.studio.instrument.v1";

/*
   An instrument structured in Mesh Studio.
*/
message Instrument {
  /*
     Unique resource identifier in format groups/{ULIDv2}.
     Immutable and system-generated on creation.
     Ignored if provided on creation.
  */
  string name = 1 [(buf.validate.field) = {
    cel: {
      id: "name.format.optional",
      message: "name must be empty or in the format groups/{ULIDv2}",
      expression: "size(this) == 0 || this.matches('^groups/[0-9A-Z]{26}$')"
    }
  }];

  /*
     Parent group resource name establishing direct ownership.
     Defines the immediate hierarchical relationship.
     Required on creation.
  */
  string owner = 2 [(buf.validate.field) = {
    string: {
      len: 33,
      pattern: "^groups/[0-9A-Z]{26}$"
    }
  }];

  /*
     Complete ownership path from root to this entity's owner group for efficient access control.
     System-maintained array enabling hierarchical permission inheritance.
     Immutable and system-generated on creation.
     Ignored if provided on creation.
  */
  repeated string owners = 3 [(buf.validate.field) = {
    repeated: {
      min_items: 0,
      max_items: 100,
      items: {
        string: {
          len: 33,
          pattern: "^groups/[0-9A-Z]{26}$"
        }
      }
    }
  }];

  /*
     Human-readable name for organizational identification and display.
     User-configurable and non-unique across the system.
  */
  string display_name = 4 [(buf.validate.field) = {
    string: {
      min_len: 1,
      max_len: 255
    }
  }];

  /*
  The token in which this instrument is denominated.
  */
  meshtrade.type.v1.Token token = 5;
}