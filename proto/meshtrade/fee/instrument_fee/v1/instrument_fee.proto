syntax = "proto3";

package meshtrade.fee.instrument_fee.v1;

import "google/protobuf/timestamp.proto";
import "meshtrade/fee/instrument_fee/v1/data_amount.proto";
import "meshtrade/fee/instrument_fee/v1/data_per_unit.proto";
import "meshtrade/fee/instrument_fee/v1/data_rate.proto";
import "meshtrade/type/v1/amount.proto";

option go_package = "github.com/meshtrade/api/go/fee/instrument_fee/v1;instrument_feev1";

/*
   InstrumentFee represents a financial charge associated with an Instrument,
   imposed on the Instrument Issuer.
   A Fee is generated using a FeeProfile, which determines its amount
   and other related fields.
*/
message InstrumentFee {
  /*
     ID is a universally unique identifier set in the application layer.
  */
  string id = 1;

  /*
     InstrumentName refers to the instrument against which this Fee applied.
  */
  string instrument_name = 2;

  /*
     State is the fee status.
  */
  meshtrade.fee.instrument_fee.v1.State state = 3;

  /*
     Description is the description of this Fee.
     It explains the purpose and context behind the charge.
  */
  string description = 4;

  /*
     AmountInclVAT is the total amount charged, inclusive of VAT.
     This field captures the gross charge that the instrument issuer must pay.
  */
  meshtrade.type.v1.Amount amount_incl_vat = 5;

  /*
     VATAmount is the portion of the AmountInclVAT that constitutes VAT.
  */
  meshtrade.type.v1.Amount vat_amount = 6;

  /*
     Category is the type of Fee being applied. It categorises fees based on
     their purpose and the services they correspond to. Supported categories
     include:
       - Tokenisation: Fee for tokenizing assets.
       - Listing: Fee for listing the instrument on a platform.
       - PrimaryMarketSettlement: Fee related to primary market transaction
       settlements.
       - AUM: Assets Under Management fee.
  */
  meshtrade.fee.instrument_fee.v1.Category category = 7;

  /*
     PaymentDate is the date on which the Fee was paid.
  */
  google.protobuf.Timestamp payment_date = 8;

  /*
     Data is the additional contextual information related to calculation,
     taxation and billing of the Fee.
  */
  oneof data {
    meshtrade.fee.instrument_fee.v1.AmountData amount_data = 9;
    meshtrade.fee.instrument_fee.v1.RateData rate_data = 10;
    meshtrade.fee.instrument_fee.v1.PerUnitData per_unit_data = 11;
  }
}

/*
   State is the state of an instrument Fee in its state diagram.
*/
enum State {
  /*
     Unknown or not specified.
     This is a a default value to prevent accidental assignment and should not be used.
  */
  STATE_UNSPECIFIED = 0;
  STATE_UPCOMING = 1;
  STATE_DUE = 2;
  STATE_PAYMENT_IN_PROGRESS = 3;
  STATE_FAILED = 4;
  STATE_CANCELLED = 5;
  STATE_PAID = 6;
}

/*
   Category defines the different types of Fees that can be applied to an instrument.
*/
enum Category {
  /*
     Unknown or not specified.
     This is a a default value to prevent accidental assignment and should not be used.
  */
  CATEGORY_UNSPECIFIED = 0;
  CATEGORY_TOKENISATION = 1;
  CATEGORY_LISTING = 2;
  CATEGORY_PRIMARY_MARKET_SETTLEMENT = 3;
  CATEGORY_AUM = 4;
}
