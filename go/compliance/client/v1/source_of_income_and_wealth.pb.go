// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/compliance/client/v1/source_of_income_and_wealth.proto

package clientv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SourceOfIncomeAndWealth specifies the origin of a client's funds or assets.
// This is used for compliance and due diligence purposes.
type SourceOfIncomeAndWealth int32

const (
	// Unknown or not specified.
	// This is a default value to prevent accidental assignment and should not be used.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_UNSPECIFIED SourceOfIncomeAndWealth = 0
	// Funds from allowances.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_ALLOWANCES SourceOfIncomeAndWealth = 1
	// Funds from a bursary or scholarship.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_BURSARY SourceOfIncomeAndWealth = 2
	// Funds received as part of a court order.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_COURT_ORDER SourceOfIncomeAndWealth = 3
	// Funds from a loan provided by a financial institution.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_LOAN_FINANCIAL_INSTITUTION SourceOfIncomeAndWealth = 4
	// Funds from a loan provided by another entity or individual.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_LOAN_OTHER SourceOfIncomeAndWealth = 5
	// Funds from maintenance payments.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_MAINTENANCE SourceOfIncomeAndWealth = 6
	// Funds from investments that have reached maturity.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_MATURING_INVESTMENTS SourceOfIncomeAndWealth = 7
	// Funds from a pension.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_PENSION SourceOfIncomeAndWealth = 8
	// Income generated from rental properties.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_RENTAL_INCOME SourceOfIncomeAndWealth = 9
	// Profits generated from a company.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_COMPANY_PROFITS SourceOfIncomeAndWealth = 10
	// Proceeds from the sale of a company.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_COMPANY_SALE SourceOfIncomeAndWealth = 11
	// Funds from a deceased estate.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_DECEASED_ESTATE SourceOfIncomeAndWealth = 12
	// Funds received as part of a divorce settlement.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_DIVORCE_SETTLEMENT SourceOfIncomeAndWealth = 13
	// Funds received as a gift or donation.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_GIFT_OR_DONATION SourceOfIncomeAndWealth = 14
	// Salary or wages from current employment.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_EMPLOYMENT SourceOfIncomeAndWealth = 15
	// Income from a previous employer, such as severance.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_PREVIOUS_EMPLOYMENT SourceOfIncomeAndWealth = 16
	// Funds received as an inheritance.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_INHERITANCE SourceOfIncomeAndWealth = 17
	// Winnings from a lottery, gambling, or other prizes.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_LOTTERY_WINNINGS_OR_GAMBLING SourceOfIncomeAndWealth = 18
	// Proceeds from the sale of a physical or digital asset.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_ASSET SourceOfIncomeAndWealth = 19
	// Proceeds from the sale of stocks or shares.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_SHARES SourceOfIncomeAndWealth = 20
	// Income from savings, investments, or dividends.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_SAVINGS_INVESTMENT_OR_DIVIDEND SourceOfIncomeAndWealth = 21
	// Funds distributed from a trust.
	SourceOfIncomeAndWealth_SOURCE_OF_INCOME_AND_WEALTH_TRUST_DISTRIBUTIONS SourceOfIncomeAndWealth = 22
)

// Enum value maps for SourceOfIncomeAndWealth.
var (
	SourceOfIncomeAndWealth_name = map[int32]string{
		0:  "SOURCE_OF_INCOME_AND_WEALTH_UNSPECIFIED",
		1:  "SOURCE_OF_INCOME_AND_WEALTH_ALLOWANCES",
		2:  "SOURCE_OF_INCOME_AND_WEALTH_BURSARY",
		3:  "SOURCE_OF_INCOME_AND_WEALTH_COURT_ORDER",
		4:  "SOURCE_OF_INCOME_AND_WEALTH_LOAN_FINANCIAL_INSTITUTION",
		5:  "SOURCE_OF_INCOME_AND_WEALTH_LOAN_OTHER",
		6:  "SOURCE_OF_INCOME_AND_WEALTH_MAINTENANCE",
		7:  "SOURCE_OF_INCOME_AND_WEALTH_MATURING_INVESTMENTS",
		8:  "SOURCE_OF_INCOME_AND_WEALTH_PENSION",
		9:  "SOURCE_OF_INCOME_AND_WEALTH_RENTAL_INCOME",
		10: "SOURCE_OF_INCOME_AND_WEALTH_COMPANY_PROFITS",
		11: "SOURCE_OF_INCOME_AND_WEALTH_COMPANY_SALE",
		12: "SOURCE_OF_INCOME_AND_WEALTH_DECEASED_ESTATE",
		13: "SOURCE_OF_INCOME_AND_WEALTH_DIVORCE_SETTLEMENT",
		14: "SOURCE_OF_INCOME_AND_WEALTH_GIFT_OR_DONATION",
		15: "SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_EMPLOYMENT",
		16: "SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_PREVIOUS_EMPLOYMENT",
		17: "SOURCE_OF_INCOME_AND_WEALTH_INHERITANCE",
		18: "SOURCE_OF_INCOME_AND_WEALTH_LOTTERY_WINNINGS_OR_GAMBLING",
		19: "SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_ASSET",
		20: "SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_SHARES",
		21: "SOURCE_OF_INCOME_AND_WEALTH_SAVINGS_INVESTMENT_OR_DIVIDEND",
		22: "SOURCE_OF_INCOME_AND_WEALTH_TRUST_DISTRIBUTIONS",
	}
	SourceOfIncomeAndWealth_value = map[string]int32{
		"SOURCE_OF_INCOME_AND_WEALTH_UNSPECIFIED":                     0,
		"SOURCE_OF_INCOME_AND_WEALTH_ALLOWANCES":                      1,
		"SOURCE_OF_INCOME_AND_WEALTH_BURSARY":                         2,
		"SOURCE_OF_INCOME_AND_WEALTH_COURT_ORDER":                     3,
		"SOURCE_OF_INCOME_AND_WEALTH_LOAN_FINANCIAL_INSTITUTION":      4,
		"SOURCE_OF_INCOME_AND_WEALTH_LOAN_OTHER":                      5,
		"SOURCE_OF_INCOME_AND_WEALTH_MAINTENANCE":                     6,
		"SOURCE_OF_INCOME_AND_WEALTH_MATURING_INVESTMENTS":            7,
		"SOURCE_OF_INCOME_AND_WEALTH_PENSION":                         8,
		"SOURCE_OF_INCOME_AND_WEALTH_RENTAL_INCOME":                   9,
		"SOURCE_OF_INCOME_AND_WEALTH_COMPANY_PROFITS":                 10,
		"SOURCE_OF_INCOME_AND_WEALTH_COMPANY_SALE":                    11,
		"SOURCE_OF_INCOME_AND_WEALTH_DECEASED_ESTATE":                 12,
		"SOURCE_OF_INCOME_AND_WEALTH_DIVORCE_SETTLEMENT":              13,
		"SOURCE_OF_INCOME_AND_WEALTH_GIFT_OR_DONATION":                14,
		"SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_EMPLOYMENT":          15,
		"SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_PREVIOUS_EMPLOYMENT": 16,
		"SOURCE_OF_INCOME_AND_WEALTH_INHERITANCE":                     17,
		"SOURCE_OF_INCOME_AND_WEALTH_LOTTERY_WINNINGS_OR_GAMBLING":    18,
		"SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_ASSET":                   19,
		"SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_SHARES":                  20,
		"SOURCE_OF_INCOME_AND_WEALTH_SAVINGS_INVESTMENT_OR_DIVIDEND":  21,
		"SOURCE_OF_INCOME_AND_WEALTH_TRUST_DISTRIBUTIONS":             22,
	}
)

func (x SourceOfIncomeAndWealth) Enum() *SourceOfIncomeAndWealth {
	p := new(SourceOfIncomeAndWealth)
	*p = x
	return p
}

func (x SourceOfIncomeAndWealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceOfIncomeAndWealth) Descriptor() protoreflect.EnumDescriptor {
	return file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_enumTypes[0].Descriptor()
}

func (SourceOfIncomeAndWealth) Type() protoreflect.EnumType {
	return &file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_enumTypes[0]
}

func (x SourceOfIncomeAndWealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceOfIncomeAndWealth.Descriptor instead.
func (SourceOfIncomeAndWealth) EnumDescriptor() ([]byte, []int) {
	return file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDescGZIP(), []int{0}
}

var File_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto protoreflect.FileDescriptor

const file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDesc = "" +
	"\n" +
	"@meshtrade/compliance/client/v1/source_of_income_and_wealth.proto\x12\x1emeshtrade.compliance.client.v1*\x99\t\n" +
	"\x17SourceOfIncomeAndWealth\x12+\n" +
	"'SOURCE_OF_INCOME_AND_WEALTH_UNSPECIFIED\x10\x00\x12*\n" +
	"&SOURCE_OF_INCOME_AND_WEALTH_ALLOWANCES\x10\x01\x12'\n" +
	"#SOURCE_OF_INCOME_AND_WEALTH_BURSARY\x10\x02\x12+\n" +
	"'SOURCE_OF_INCOME_AND_WEALTH_COURT_ORDER\x10\x03\x12:\n" +
	"6SOURCE_OF_INCOME_AND_WEALTH_LOAN_FINANCIAL_INSTITUTION\x10\x04\x12*\n" +
	"&SOURCE_OF_INCOME_AND_WEALTH_LOAN_OTHER\x10\x05\x12+\n" +
	"'SOURCE_OF_INCOME_AND_WEALTH_MAINTENANCE\x10\x06\x124\n" +
	"0SOURCE_OF_INCOME_AND_WEALTH_MATURING_INVESTMENTS\x10\a\x12'\n" +
	"#SOURCE_OF_INCOME_AND_WEALTH_PENSION\x10\b\x12-\n" +
	")SOURCE_OF_INCOME_AND_WEALTH_RENTAL_INCOME\x10\t\x12/\n" +
	"+SOURCE_OF_INCOME_AND_WEALTH_COMPANY_PROFITS\x10\n" +
	"\x12,\n" +
	"(SOURCE_OF_INCOME_AND_WEALTH_COMPANY_SALE\x10\v\x12/\n" +
	"+SOURCE_OF_INCOME_AND_WEALTH_DECEASED_ESTATE\x10\f\x122\n" +
	".SOURCE_OF_INCOME_AND_WEALTH_DIVORCE_SETTLEMENT\x10\r\x120\n" +
	",SOURCE_OF_INCOME_AND_WEALTH_GIFT_OR_DONATION\x10\x0e\x126\n" +
	"2SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_EMPLOYMENT\x10\x0f\x12?\n" +
	";SOURCE_OF_INCOME_AND_WEALTH_INCOME_FROM_PREVIOUS_EMPLOYMENT\x10\x10\x12+\n" +
	"'SOURCE_OF_INCOME_AND_WEALTH_INHERITANCE\x10\x11\x12<\n" +
	"8SOURCE_OF_INCOME_AND_WEALTH_LOTTERY_WINNINGS_OR_GAMBLING\x10\x12\x12-\n" +
	")SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_ASSET\x10\x13\x12.\n" +
	"*SOURCE_OF_INCOME_AND_WEALTH_SALE_OF_SHARES\x10\x14\x12>\n" +
	":SOURCE_OF_INCOME_AND_WEALTH_SAVINGS_INVESTMENT_OR_DIVIDEND\x10\x15\x123\n" +
	"/SOURCE_OF_INCOME_AND_WEALTH_TRUST_DISTRIBUTIONS\x10\x16B;Z9github.com/meshtrade/api/go/compliance/client/v1;clientv1b\x06proto3"

var (
	file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDescOnce sync.Once
	file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDescData []byte
)

func file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDescGZIP() []byte {
	file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDescOnce.Do(func() {
		file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDesc), len(file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDesc)))
	})
	return file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDescData
}

var file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_goTypes = []any{
	(SourceOfIncomeAndWealth)(0), // 0: meshtrade.compliance.client.v1.SourceOfIncomeAndWealth
}
var file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_init() }
func file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_init() {
	if File_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDesc), len(file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_goTypes,
		DependencyIndexes: file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_depIdxs,
		EnumInfos:         file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_enumTypes,
	}.Build()
	File_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto = out.File
	file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_goTypes = nil
	file_meshtrade_compliance_client_v1_source_of_income_and_wealth_proto_depIdxs = nil
}
