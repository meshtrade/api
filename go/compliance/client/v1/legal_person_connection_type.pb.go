// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/compliance/client/v1/legal_person_connection_type.proto

package clientv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LegalPersonConnectionType describes how a legal person is connected to a business,
// which is essential for understanding corporate ownership and control structures in KYB.
type LegalPersonConnectionType int32

const (
	// Unknown or not specified.
	// This is a default value to prevent accidental assignment and should not be used.
	LegalPersonConnectionType_LEGAL_PERSON_CONNECTION_TYPE_UNSPECIFIED LegalPersonConnectionType = 0
	// The legal person is a direct shareholder in the company, but may not have
	// a controlling stake. This is a general ownership connection.
	LegalPersonConnectionType_LEGAL_PERSON_CONNECTION_TYPE_SHAREHOLDER LegalPersonConnectionType = 1
	// The legal person has a controlling ownership stake in the company, making
	// the company its subsidiary.
	LegalPersonConnectionType_LEGAL_PERSON_CONNECTION_TYPE_PARENT_COMPANY LegalPersonConnectionType = 2
	// The legal person (often a trust or specialized firm) acts as a director
	// on the board of the company. This represents a connection of control.
	LegalPersonConnectionType_LEGAL_PERSON_CONNECTION_TYPE_CORPORATE_DIRECTOR LegalPersonConnectionType = 3
	// The legal person is a trust that holds shares or has a controlling interest
	// in the company on behalf of its beneficiaries.
	LegalPersonConnectionType_LEGAL_PERSON_CONNECTION_TYPE_TRUST LegalPersonConnectionType = 4
	// The legal person is a general partner in a partnership structure (e.g., LP/LLP),
	// typically implying management control and unlimited liability.
	LegalPersonConnectionType_LEGAL_PERSON_CONNECTION_TYPE_GENERAL_PARTNER LegalPersonConnectionType = 5
	// The legal person guarantees the financial obligations or performance of the company,
	// indicating a significant financial connection.
	LegalPersonConnectionType_LEGAL_PERSON_CONNECTION_TYPE_GUARANTOR LegalPersonConnectionType = 6
)

// Enum value maps for LegalPersonConnectionType.
var (
	LegalPersonConnectionType_name = map[int32]string{
		0: "LEGAL_PERSON_CONNECTION_TYPE_UNSPECIFIED",
		1: "LEGAL_PERSON_CONNECTION_TYPE_SHAREHOLDER",
		2: "LEGAL_PERSON_CONNECTION_TYPE_PARENT_COMPANY",
		3: "LEGAL_PERSON_CONNECTION_TYPE_CORPORATE_DIRECTOR",
		4: "LEGAL_PERSON_CONNECTION_TYPE_TRUST",
		5: "LEGAL_PERSON_CONNECTION_TYPE_GENERAL_PARTNER",
		6: "LEGAL_PERSON_CONNECTION_TYPE_GUARANTOR",
	}
	LegalPersonConnectionType_value = map[string]int32{
		"LEGAL_PERSON_CONNECTION_TYPE_UNSPECIFIED":        0,
		"LEGAL_PERSON_CONNECTION_TYPE_SHAREHOLDER":        1,
		"LEGAL_PERSON_CONNECTION_TYPE_PARENT_COMPANY":     2,
		"LEGAL_PERSON_CONNECTION_TYPE_CORPORATE_DIRECTOR": 3,
		"LEGAL_PERSON_CONNECTION_TYPE_TRUST":              4,
		"LEGAL_PERSON_CONNECTION_TYPE_GENERAL_PARTNER":    5,
		"LEGAL_PERSON_CONNECTION_TYPE_GUARANTOR":          6,
	}
)

func (x LegalPersonConnectionType) Enum() *LegalPersonConnectionType {
	p := new(LegalPersonConnectionType)
	*p = x
	return p
}

func (x LegalPersonConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LegalPersonConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_enumTypes[0].Descriptor()
}

func (LegalPersonConnectionType) Type() protoreflect.EnumType {
	return &file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_enumTypes[0]
}

func (x LegalPersonConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LegalPersonConnectionType.Descriptor instead.
func (LegalPersonConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDescGZIP(), []int{0}
}

var File_meshtrade_compliance_client_v1_legal_person_connection_type_proto protoreflect.FileDescriptor

const file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDesc = "" +
	"\n" +
	"Ameshtrade/compliance/client/v1/legal_person_connection_type.proto\x12\x1emeshtrade.compliance.client.v1*\xe3\x02\n" +
	"\x19LegalPersonConnectionType\x12,\n" +
	"(LEGAL_PERSON_CONNECTION_TYPE_UNSPECIFIED\x10\x00\x12,\n" +
	"(LEGAL_PERSON_CONNECTION_TYPE_SHAREHOLDER\x10\x01\x12/\n" +
	"+LEGAL_PERSON_CONNECTION_TYPE_PARENT_COMPANY\x10\x02\x123\n" +
	"/LEGAL_PERSON_CONNECTION_TYPE_CORPORATE_DIRECTOR\x10\x03\x12&\n" +
	"\"LEGAL_PERSON_CONNECTION_TYPE_TRUST\x10\x04\x120\n" +
	",LEGAL_PERSON_CONNECTION_TYPE_GENERAL_PARTNER\x10\x05\x12*\n" +
	"&LEGAL_PERSON_CONNECTION_TYPE_GUARANTOR\x10\x06B;Z9github.com/meshtrade/api/go/compliance/client/v1;clientv1b\x06proto3"

var (
	file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDescOnce sync.Once
	file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDescData []byte
)

func file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDescGZIP() []byte {
	file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDescOnce.Do(func() {
		file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDesc), len(file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDesc)))
	})
	return file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDescData
}

var file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_goTypes = []any{
	(LegalPersonConnectionType)(0), // 0: meshtrade.compliance.client.v1.LegalPersonConnectionType
}
var file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_init() }
func file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_init() {
	if File_meshtrade_compliance_client_v1_legal_person_connection_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDesc), len(file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_goTypes,
		DependencyIndexes: file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_depIdxs,
		EnumInfos:         file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_enumTypes,
	}.Build()
	File_meshtrade_compliance_client_v1_legal_person_connection_type_proto = out.File
	file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_goTypes = nil
	file_meshtrade_compliance_client_v1_legal_person_connection_type_proto_depIdxs = nil
}
