// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/compliance/client/v1/natural_person_connection_type.proto

package clientv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NaturalPersonConnectionType describes how a natural person is connected to a business
// or to another key individual (like a PEP). It covers primary roles for KYB (ownership, control)
// as well as secondary relationships for screening (familial, professional).
type NaturalPersonConnectionType int32

const (
	// Unknown or not specified.
	// This is a a default value to prevent accidental assignment and should not be used.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_UNSPECIFIED NaturalPersonConnectionType = 0
	// The person is an Ultimate Beneficial Owner as defined by AML regulations (e.g., >25% ownership/voting rights).
	// This is the most critical connection type for KYB.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_ULTIMATE_BENEFICIAL_OWNER NaturalPersonConnectionType = 1
	// The person owns shares but may be below the UBO threshold.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_SHAREHOLDER NaturalPersonConnectionType = 2
	// The person is a formal Director on the company's board.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_DIRECTOR NaturalPersonConnectionType = 3
	// The person holds a senior management position with significant operational control (e.g., CEO, CFO, COO).
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_SENIOR_MANAGEMENT NaturalPersonConnectionType = 4
	// The person is formally authorized to sign documents and act on the company's behalf.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_AUTHORIZED_SIGNATORY NaturalPersonConnectionType = 5
	// The person is the founder of the company.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_FOUNDER NaturalPersonConnectionType = 6
	// The person is a legally married partner.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_SPOUSE NaturalPersonConnectionType = 20
	// The person is a partner in a long-term relationship, equivalent to a spouse.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_DOMESTIC_PARTNER NaturalPersonConnectionType = 21
	// The person is a mother or father.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_PARENT NaturalPersonConnectionType = 22
	// The person is a son or daughter.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_CHILD NaturalPersonConnectionType = 23
	// The person is a brother or sister.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_SIBLING NaturalPersonConnectionType = 24
	// The person is a business partner.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_BUSINESS_PARTNER NaturalPersonConnectionType = 30
	// A generic term for a known professional or personal associate, as defined by FATF guidelines for PEPs.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_CLOSE_ASSOCIATE NaturalPersonConnectionType = 31
	// The person is a guarantor for the company's financial obligations.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_GUARANTOR NaturalPersonConnectionType = 32
	// The person is a beneficiary of a trust that owns or controls the company.
	NaturalPersonConnectionType_NATURAL_PERSON_CONNECTION_TYPE_BENEFICIARY_OF_TRUST NaturalPersonConnectionType = 33
)

// Enum value maps for NaturalPersonConnectionType.
var (
	NaturalPersonConnectionType_name = map[int32]string{
		0:  "NATURAL_PERSON_CONNECTION_TYPE_UNSPECIFIED",
		1:  "NATURAL_PERSON_CONNECTION_TYPE_ULTIMATE_BENEFICIAL_OWNER",
		2:  "NATURAL_PERSON_CONNECTION_TYPE_SHAREHOLDER",
		3:  "NATURAL_PERSON_CONNECTION_TYPE_DIRECTOR",
		4:  "NATURAL_PERSON_CONNECTION_TYPE_SENIOR_MANAGEMENT",
		5:  "NATURAL_PERSON_CONNECTION_TYPE_AUTHORIZED_SIGNATORY",
		6:  "NATURAL_PERSON_CONNECTION_TYPE_FOUNDER",
		20: "NATURAL_PERSON_CONNECTION_TYPE_SPOUSE",
		21: "NATURAL_PERSON_CONNECTION_TYPE_DOMESTIC_PARTNER",
		22: "NATURAL_PERSON_CONNECTION_TYPE_PARENT",
		23: "NATURAL_PERSON_CONNECTION_TYPE_CHILD",
		24: "NATURAL_PERSON_CONNECTION_TYPE_SIBLING",
		30: "NATURAL_PERSON_CONNECTION_TYPE_BUSINESS_PARTNER",
		31: "NATURAL_PERSON_CONNECTION_TYPE_CLOSE_ASSOCIATE",
		32: "NATURAL_PERSON_CONNECTION_TYPE_GUARANTOR",
		33: "NATURAL_PERSON_CONNECTION_TYPE_BENEFICIARY_OF_TRUST",
	}
	NaturalPersonConnectionType_value = map[string]int32{
		"NATURAL_PERSON_CONNECTION_TYPE_UNSPECIFIED":               0,
		"NATURAL_PERSON_CONNECTION_TYPE_ULTIMATE_BENEFICIAL_OWNER": 1,
		"NATURAL_PERSON_CONNECTION_TYPE_SHAREHOLDER":               2,
		"NATURAL_PERSON_CONNECTION_TYPE_DIRECTOR":                  3,
		"NATURAL_PERSON_CONNECTION_TYPE_SENIOR_MANAGEMENT":         4,
		"NATURAL_PERSON_CONNECTION_TYPE_AUTHORIZED_SIGNATORY":      5,
		"NATURAL_PERSON_CONNECTION_TYPE_FOUNDER":                   6,
		"NATURAL_PERSON_CONNECTION_TYPE_SPOUSE":                    20,
		"NATURAL_PERSON_CONNECTION_TYPE_DOMESTIC_PARTNER":          21,
		"NATURAL_PERSON_CONNECTION_TYPE_PARENT":                    22,
		"NATURAL_PERSON_CONNECTION_TYPE_CHILD":                     23,
		"NATURAL_PERSON_CONNECTION_TYPE_SIBLING":                   24,
		"NATURAL_PERSON_CONNECTION_TYPE_BUSINESS_PARTNER":          30,
		"NATURAL_PERSON_CONNECTION_TYPE_CLOSE_ASSOCIATE":           31,
		"NATURAL_PERSON_CONNECTION_TYPE_GUARANTOR":                 32,
		"NATURAL_PERSON_CONNECTION_TYPE_BENEFICIARY_OF_TRUST":      33,
	}
)

func (x NaturalPersonConnectionType) Enum() *NaturalPersonConnectionType {
	p := new(NaturalPersonConnectionType)
	*p = x
	return p
}

func (x NaturalPersonConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NaturalPersonConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_enumTypes[0].Descriptor()
}

func (NaturalPersonConnectionType) Type() protoreflect.EnumType {
	return &file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_enumTypes[0]
}

func (x NaturalPersonConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NaturalPersonConnectionType.Descriptor instead.
func (NaturalPersonConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDescGZIP(), []int{0}
}

var File_meshtrade_compliance_client_v1_natural_person_connection_type_proto protoreflect.FileDescriptor

const file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDesc = "" +
	"\n" +
	"Cmeshtrade/compliance/client/v1/natural_person_connection_type.proto\x12\x1emeshtrade.compliance.client.v1*\xb4\x06\n" +
	"\x1bNaturalPersonConnectionType\x12.\n" +
	"*NATURAL_PERSON_CONNECTION_TYPE_UNSPECIFIED\x10\x00\x12<\n" +
	"8NATURAL_PERSON_CONNECTION_TYPE_ULTIMATE_BENEFICIAL_OWNER\x10\x01\x12.\n" +
	"*NATURAL_PERSON_CONNECTION_TYPE_SHAREHOLDER\x10\x02\x12+\n" +
	"'NATURAL_PERSON_CONNECTION_TYPE_DIRECTOR\x10\x03\x124\n" +
	"0NATURAL_PERSON_CONNECTION_TYPE_SENIOR_MANAGEMENT\x10\x04\x127\n" +
	"3NATURAL_PERSON_CONNECTION_TYPE_AUTHORIZED_SIGNATORY\x10\x05\x12*\n" +
	"&NATURAL_PERSON_CONNECTION_TYPE_FOUNDER\x10\x06\x12)\n" +
	"%NATURAL_PERSON_CONNECTION_TYPE_SPOUSE\x10\x14\x123\n" +
	"/NATURAL_PERSON_CONNECTION_TYPE_DOMESTIC_PARTNER\x10\x15\x12)\n" +
	"%NATURAL_PERSON_CONNECTION_TYPE_PARENT\x10\x16\x12(\n" +
	"$NATURAL_PERSON_CONNECTION_TYPE_CHILD\x10\x17\x12*\n" +
	"&NATURAL_PERSON_CONNECTION_TYPE_SIBLING\x10\x18\x123\n" +
	"/NATURAL_PERSON_CONNECTION_TYPE_BUSINESS_PARTNER\x10\x1e\x122\n" +
	".NATURAL_PERSON_CONNECTION_TYPE_CLOSE_ASSOCIATE\x10\x1f\x12,\n" +
	"(NATURAL_PERSON_CONNECTION_TYPE_GUARANTOR\x10 \x127\n" +
	"3NATURAL_PERSON_CONNECTION_TYPE_BENEFICIARY_OF_TRUST\x10!B;Z9github.com/meshtrade/api/go/compliance/client/v1;clientv1b\x06proto3"

var (
	file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDescOnce sync.Once
	file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDescData []byte
)

func file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDescGZIP() []byte {
	file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDescOnce.Do(func() {
		file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDesc), len(file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDesc)))
	})
	return file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDescData
}

var file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_goTypes = []any{
	(NaturalPersonConnectionType)(0), // 0: meshtrade.compliance.client.v1.NaturalPersonConnectionType
}
var file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_init() }
func file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_init() {
	if File_meshtrade_compliance_client_v1_natural_person_connection_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDesc), len(file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_goTypes,
		DependencyIndexes: file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_depIdxs,
		EnumInfos:         file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_enumTypes,
	}.Build()
	File_meshtrade_compliance_client_v1_natural_person_connection_type_proto = out.File
	file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_goTypes = nil
	file_meshtrade_compliance_client_v1_natural_person_connection_type_proto_depIdxs = nil
}
