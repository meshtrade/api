// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/reporting/income_report/v1/summary.proto

package income_reportv1

import (
	v1 "github.com/meshtrade/api/go/type/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Summary represents the aggregated financial outcome for a given currency.
//
// It includes the total reported value and the net debit or credit amount
// associated with the currency for the given report period.
type Summary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The token representing the currency for this summary.
	Currency *v1.Token `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	// The total value in the reporting currency, converted from original amounts.
	ReportedCurrencyValue *v1.Amount `protobuf:"bytes,2,opt,name=reported_currency_value,json=reportedCurrencyValue,proto3" json:"reported_currency_value,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Summary) Reset() {
	*x = Summary{}
	mi := &file_meshtrade_reporting_income_report_v1_summary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summary) ProtoMessage() {}

func (x *Summary) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_income_report_v1_summary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summary.ProtoReflect.Descriptor instead.
func (*Summary) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_income_report_v1_summary_proto_rawDescGZIP(), []int{0}
}

func (x *Summary) GetCurrency() *v1.Token {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *Summary) GetReportedCurrencyValue() *v1.Amount {
	if x != nil {
		return x.ReportedCurrencyValue
	}
	return nil
}

var File_meshtrade_reporting_income_report_v1_summary_proto protoreflect.FileDescriptor

const file_meshtrade_reporting_income_report_v1_summary_proto_rawDesc = "" +
	"\n" +
	"2meshtrade/reporting/income_report/v1/summary.proto\x12$meshtrade.reporting.income_report.v1\x1a\x1dmeshtrade/type/v1/token.proto\x1a\x1emeshtrade/type/v1/amount.proto\"\x92\x01\n" +
	"\aSummary\x124\n" +
	"\bcurrency\x18\x01 \x01(\v2\x18.meshtrade.type.v1.TokenR\bcurrency\x12Q\n" +
	"\x17reported_currency_value\x18\x02 \x01(\v2\x19.meshtrade.type.v1.AmountR\x15reportedCurrencyValueBHZFgithub.com/meshtrade/api/go/reporting/income_report/v1;income_reportv1b\x06proto3"

var (
	file_meshtrade_reporting_income_report_v1_summary_proto_rawDescOnce sync.Once
	file_meshtrade_reporting_income_report_v1_summary_proto_rawDescData []byte
)

func file_meshtrade_reporting_income_report_v1_summary_proto_rawDescGZIP() []byte {
	file_meshtrade_reporting_income_report_v1_summary_proto_rawDescOnce.Do(func() {
		file_meshtrade_reporting_income_report_v1_summary_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_income_report_v1_summary_proto_rawDesc), len(file_meshtrade_reporting_income_report_v1_summary_proto_rawDesc)))
	})
	return file_meshtrade_reporting_income_report_v1_summary_proto_rawDescData
}

var file_meshtrade_reporting_income_report_v1_summary_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meshtrade_reporting_income_report_v1_summary_proto_goTypes = []any{
	(*Summary)(nil),   // 0: meshtrade.reporting.income_report.v1.Summary
	(*v1.Token)(nil),  // 1: meshtrade.type.v1.Token
	(*v1.Amount)(nil), // 2: meshtrade.type.v1.Amount
}
var file_meshtrade_reporting_income_report_v1_summary_proto_depIdxs = []int32{
	1, // 0: meshtrade.reporting.income_report.v1.Summary.currency:type_name -> meshtrade.type.v1.Token
	2, // 1: meshtrade.reporting.income_report.v1.Summary.reported_currency_value:type_name -> meshtrade.type.v1.Amount
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_meshtrade_reporting_income_report_v1_summary_proto_init() }
func file_meshtrade_reporting_income_report_v1_summary_proto_init() {
	if File_meshtrade_reporting_income_report_v1_summary_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_income_report_v1_summary_proto_rawDesc), len(file_meshtrade_reporting_income_report_v1_summary_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_reporting_income_report_v1_summary_proto_goTypes,
		DependencyIndexes: file_meshtrade_reporting_income_report_v1_summary_proto_depIdxs,
		MessageInfos:      file_meshtrade_reporting_income_report_v1_summary_proto_msgTypes,
	}.Build()
	File_meshtrade_reporting_income_report_v1_summary_proto = out.File
	file_meshtrade_reporting_income_report_v1_summary_proto_goTypes = nil
	file_meshtrade_reporting_income_report_v1_summary_proto_depIdxs = nil
}
