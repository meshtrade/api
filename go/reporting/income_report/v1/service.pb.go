// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/reporting/income_report/v1/service.proto

package income_reportv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/meshtrade/api/go/iam/role/v1"
	_ "github.com/meshtrade/api/go/option/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetIncomeReportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique account number for which the income report is requested.
	AccountNum string `protobuf:"bytes,1,opt,name=account_num,json=accountNum,proto3" json:"account_num,omitempty"`
	// Start of the reporting period (inclusive).
	From *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// End of the reporting period (inclusive).
	To            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncomeReportRequest) Reset() {
	*x = GetIncomeReportRequest{}
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncomeReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeReportRequest) ProtoMessage() {}

func (x *GetIncomeReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeReportRequest.ProtoReflect.Descriptor instead.
func (*GetIncomeReportRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_income_report_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetIncomeReportRequest) GetAccountNum() string {
	if x != nil {
		return x.AccountNum
	}
	return ""
}

func (x *GetIncomeReportRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetIncomeReportRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

// TODO return the resource here, check the docs at service-structure.mdx
type GetIncomeReportResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Structured income report with detailed earnings information.
	IncomeReport  *IncomeReport `protobuf:"bytes,1,opt,name=income_report,json=incomeReport,proto3" json:"income_report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIncomeReportResponse) Reset() {
	*x = GetIncomeReportResponse{}
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIncomeReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIncomeReportResponse) ProtoMessage() {}

func (x *GetIncomeReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIncomeReportResponse.ProtoReflect.Descriptor instead.
func (*GetIncomeReportResponse) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_income_report_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetIncomeReportResponse) GetIncomeReport() *IncomeReport {
	if x != nil {
		return x.IncomeReport
	}
	return nil
}

type GetExcelIncomeReportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique account number for which the Excel export is requested.
	AccountNum string `protobuf:"bytes,1,opt,name=account_num,json=accountNum,proto3" json:"account_num,omitempty"`
	// Start of the reporting period (inclusive).
	From *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// End of the reporting period (inclusive).
	To            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExcelIncomeReportRequest) Reset() {
	*x = GetExcelIncomeReportRequest{}
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExcelIncomeReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExcelIncomeReportRequest) ProtoMessage() {}

func (x *GetExcelIncomeReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExcelIncomeReportRequest.ProtoReflect.Descriptor instead.
func (*GetExcelIncomeReportRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_income_report_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetExcelIncomeReportRequest) GetAccountNum() string {
	if x != nil {
		return x.AccountNum
	}
	return ""
}

func (x *GetExcelIncomeReportRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetExcelIncomeReportRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetExcelIncomeReportResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Base64-encoded binary content of the Excel report file.
	ExcelBase64   string `protobuf:"bytes,1,opt,name=excel_base64,json=excelBase64,proto3" json:"excel_base64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExcelIncomeReportResponse) Reset() {
	*x = GetExcelIncomeReportResponse{}
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExcelIncomeReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExcelIncomeReportResponse) ProtoMessage() {}

func (x *GetExcelIncomeReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_income_report_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExcelIncomeReportResponse.ProtoReflect.Descriptor instead.
func (*GetExcelIncomeReportResponse) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_income_report_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetExcelIncomeReportResponse) GetExcelBase64() string {
	if x != nil {
		return x.ExcelBase64
	}
	return ""
}

var File_meshtrade_reporting_income_report_v1_service_proto protoreflect.FileDescriptor

const file_meshtrade_reporting_income_report_v1_service_proto_rawDesc = "" +
	"\n" +
	"2meshtrade/reporting/income_report/v1/service.proto\x12$meshtrade.reporting.income_report.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a8meshtrade/reporting/income_report/v1/income_report.proto\x1a meshtrade/iam/role/v1/role.proto\x1a%meshtrade/option/v1/method_type.proto\"\x95\x01\n" +
	"\x16GetIncomeReportRequest\x12\x1f\n" +
	"\vaccount_num\x18\x01 \x01(\tR\n" +
	"accountNum\x12.\n" +
	"\x04from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\"r\n" +
	"\x17GetIncomeReportResponse\x12W\n" +
	"\rincome_report\x18\x01 \x01(\v22.meshtrade.reporting.income_report.v1.IncomeReportR\fincomeReport\"\x82\x03\n" +
	"\x1bGetExcelIncomeReportRequest\x12\x84\x01\n" +
	"\vaccount_num\x18\x01 \x01(\tBc\xbaH`\xba\x01L\n" +
	"\x14account_num.required\x12\x17account_num is required\x1a\x1bthis.matches('^[0-9]{1,}$')r\x0f\x10\x012\v^[0-9]{1,}$R\n" +
	"accountNum\x12q\n" +
	"\x04from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBA\xbaH>\xba\x01;\n" +
	"\rfrom.required\x12\x1c'from' timestamp is required\x1a\fthis != nullR\x04from\x12i\n" +
	"\x02to\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB=\xbaH:\xba\x017\n" +
	"\vto.required\x12\x1a'to' timestamp is required\x1a\fthis != nullR\x02to\"A\n" +
	"\x1cGetExcelIncomeReportResponse\x12!\n" +
	"\fexcel_base64\x18\x01 \x01(\tR\vexcelBase642\xe0\x02\n" +
	"\x13IncomeReportService\x12\x9b\x01\n" +
	"\x0fGetIncomeReport\x12<.meshtrade.reporting.income_report.v1.GetIncomeReportRequest\x1a=.meshtrade.reporting.income_report.v1.GetIncomeReportResponse\"\v\xa0\xb5\x18\x01\xaa\xb5\x18\x03\n" +
	"\x01\v\x12\xaa\x01\n" +
	"\x14GetExcelIncomeReport\x12A.meshtrade.reporting.income_report.v1.GetExcelIncomeReportRequest\x1aB.meshtrade.reporting.income_report.v1.GetExcelIncomeReportResponse\"\v\xa0\xb5\x18\x01\xaa\xb5\x18\x03\n" +
	"\x01\vBHZFgithub.com/meshtrade/api/go/reporting/income_report/v1;income_reportv1b\x06proto3"

var (
	file_meshtrade_reporting_income_report_v1_service_proto_rawDescOnce sync.Once
	file_meshtrade_reporting_income_report_v1_service_proto_rawDescData []byte
)

func file_meshtrade_reporting_income_report_v1_service_proto_rawDescGZIP() []byte {
	file_meshtrade_reporting_income_report_v1_service_proto_rawDescOnce.Do(func() {
		file_meshtrade_reporting_income_report_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_income_report_v1_service_proto_rawDesc), len(file_meshtrade_reporting_income_report_v1_service_proto_rawDesc)))
	})
	return file_meshtrade_reporting_income_report_v1_service_proto_rawDescData
}

var file_meshtrade_reporting_income_report_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_meshtrade_reporting_income_report_v1_service_proto_goTypes = []any{
	(*GetIncomeReportRequest)(nil),       // 0: meshtrade.reporting.income_report.v1.GetIncomeReportRequest
	(*GetIncomeReportResponse)(nil),      // 1: meshtrade.reporting.income_report.v1.GetIncomeReportResponse
	(*GetExcelIncomeReportRequest)(nil),  // 2: meshtrade.reporting.income_report.v1.GetExcelIncomeReportRequest
	(*GetExcelIncomeReportResponse)(nil), // 3: meshtrade.reporting.income_report.v1.GetExcelIncomeReportResponse
	(*timestamppb.Timestamp)(nil),        // 4: google.protobuf.Timestamp
	(*IncomeReport)(nil),                 // 5: meshtrade.reporting.income_report.v1.IncomeReport
}
var file_meshtrade_reporting_income_report_v1_service_proto_depIdxs = []int32{
	4, // 0: meshtrade.reporting.income_report.v1.GetIncomeReportRequest.from:type_name -> google.protobuf.Timestamp
	4, // 1: meshtrade.reporting.income_report.v1.GetIncomeReportRequest.to:type_name -> google.protobuf.Timestamp
	5, // 2: meshtrade.reporting.income_report.v1.GetIncomeReportResponse.income_report:type_name -> meshtrade.reporting.income_report.v1.IncomeReport
	4, // 3: meshtrade.reporting.income_report.v1.GetExcelIncomeReportRequest.from:type_name -> google.protobuf.Timestamp
	4, // 4: meshtrade.reporting.income_report.v1.GetExcelIncomeReportRequest.to:type_name -> google.protobuf.Timestamp
	0, // 5: meshtrade.reporting.income_report.v1.IncomeReportService.GetIncomeReport:input_type -> meshtrade.reporting.income_report.v1.GetIncomeReportRequest
	2, // 6: meshtrade.reporting.income_report.v1.IncomeReportService.GetExcelIncomeReport:input_type -> meshtrade.reporting.income_report.v1.GetExcelIncomeReportRequest
	1, // 7: meshtrade.reporting.income_report.v1.IncomeReportService.GetIncomeReport:output_type -> meshtrade.reporting.income_report.v1.GetIncomeReportResponse
	3, // 8: meshtrade.reporting.income_report.v1.IncomeReportService.GetExcelIncomeReport:output_type -> meshtrade.reporting.income_report.v1.GetExcelIncomeReportResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_meshtrade_reporting_income_report_v1_service_proto_init() }
func file_meshtrade_reporting_income_report_v1_service_proto_init() {
	if File_meshtrade_reporting_income_report_v1_service_proto != nil {
		return
	}
	file_meshtrade_reporting_income_report_v1_income_report_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_income_report_v1_service_proto_rawDesc), len(file_meshtrade_reporting_income_report_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meshtrade_reporting_income_report_v1_service_proto_goTypes,
		DependencyIndexes: file_meshtrade_reporting_income_report_v1_service_proto_depIdxs,
		MessageInfos:      file_meshtrade_reporting_income_report_v1_service_proto_msgTypes,
	}.Build()
	File_meshtrade_reporting_income_report_v1_service_proto = out.File
	file_meshtrade_reporting_income_report_v1_service_proto_goTypes = nil
	file_meshtrade_reporting_income_report_v1_service_proto_depIdxs = nil
}
