// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/reporting/income_report/v1/disclaimer.proto

package income_reportv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Disclaimer represents supplementary information included in an income report.
//
// Disclaimers provide legal, financial, or interpretive context related to
// the contents of the report. They may explain assumptions, limitations, or
// external factors relevant to the presented data.
type Disclaimer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Short heading summarizing the nature of the disclaimer.
	// Example: "Preliminary Data" or "Currency Conversion Note".
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Detailed explanation or qualification text describing the disclaimer.
	// Can include notes about data accuracy, external dependencies, or reporting assumptions.
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disclaimer) Reset() {
	*x = Disclaimer{}
	mi := &file_meshtrade_reporting_income_report_v1_disclaimer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disclaimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disclaimer) ProtoMessage() {}

func (x *Disclaimer) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_income_report_v1_disclaimer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disclaimer.ProtoReflect.Descriptor instead.
func (*Disclaimer) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDescGZIP(), []int{0}
}

func (x *Disclaimer) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Disclaimer) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_meshtrade_reporting_income_report_v1_disclaimer_proto protoreflect.FileDescriptor

const file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDesc = "" +
	"\n" +
	"5meshtrade/reporting/income_report/v1/disclaimer.proto\x12$meshtrade.reporting.income_report.v1\"D\n" +
	"\n" +
	"Disclaimer\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescriptionBu\n" +
	"+co.meshtrade.api.reporting.income_report.v1ZFgithub.com/meshtrade/api/go/reporting/income_report/v1;income_reportv1b\x06proto3"

var (
	file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDescOnce sync.Once
	file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDescData []byte
)

func file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDescGZIP() []byte {
	file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDescOnce.Do(func() {
		file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDesc), len(file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDesc)))
	})
	return file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDescData
}

var file_meshtrade_reporting_income_report_v1_disclaimer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meshtrade_reporting_income_report_v1_disclaimer_proto_goTypes = []any{
	(*Disclaimer)(nil), // 0: meshtrade.reporting.income_report.v1.Disclaimer
}
var file_meshtrade_reporting_income_report_v1_disclaimer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshtrade_reporting_income_report_v1_disclaimer_proto_init() }
func file_meshtrade_reporting_income_report_v1_disclaimer_proto_init() {
	if File_meshtrade_reporting_income_report_v1_disclaimer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDesc), len(file_meshtrade_reporting_income_report_v1_disclaimer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_reporting_income_report_v1_disclaimer_proto_goTypes,
		DependencyIndexes: file_meshtrade_reporting_income_report_v1_disclaimer_proto_depIdxs,
		MessageInfos:      file_meshtrade_reporting_income_report_v1_disclaimer_proto_msgTypes,
	}.Build()
	File_meshtrade_reporting_income_report_v1_disclaimer_proto = out.File
	file_meshtrade_reporting_income_report_v1_disclaimer_proto_goTypes = nil
	file_meshtrade_reporting_income_report_v1_disclaimer_proto_depIdxs = nil
}
