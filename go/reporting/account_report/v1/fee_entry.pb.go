// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/reporting/account_report/v1/fee_entry.proto

package account_reportv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FeeEntry defines the structure for a single fee entry, corresponding to one
// row in the Excel sheet.
type FeeEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The date and time of the transaction.
	// Using google.protobuf.Timestamp is the standard way to handle timestamps.
	TransactionDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	// The unique identifier for the transaction.
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// A description of the transaction type.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The transaction amount.
	// Using 'double' for simplicity. For financial calculations, it's often better
	// to use an integer type (e.g., int64) representing the smallest currency unit
	// (like cents) to avoid floating-point inaccuracies.
	Amount float64 `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// The value of the transaction in the reported currency.
	ReportedCurrencyValue float64 `protobuf:"fixed64,5,opt,name=reported_currency_value,json=reportedCurrencyValue,proto3" json:"reported_currency_value,omitempty"`
	// The currency of the token (e.g., "mZAR").
	TokenCurrency string `protobuf:"bytes,6,opt,name=token_currency,json=tokenCurrency,proto3" json:"token_currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeeEntry) Reset() {
	*x = FeeEntry{}
	mi := &file_meshtrade_reporting_account_report_v1_fee_entry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeEntry) ProtoMessage() {}

func (x *FeeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_account_report_v1_fee_entry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeEntry.ProtoReflect.Descriptor instead.
func (*FeeEntry) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDescGZIP(), []int{0}
}

func (x *FeeEntry) GetTransactionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionDate
	}
	return nil
}

func (x *FeeEntry) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *FeeEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FeeEntry) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FeeEntry) GetReportedCurrencyValue() float64 {
	if x != nil {
		return x.ReportedCurrencyValue
	}
	return 0
}

func (x *FeeEntry) GetTokenCurrency() string {
	if x != nil {
		return x.TokenCurrency
	}
	return ""
}

var File_meshtrade_reporting_account_report_v1_fee_entry_proto protoreflect.FileDescriptor

const file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDesc = "" +
	"\n" +
	"5meshtrade/reporting/account_report/v1/fee_entry.proto\x12%meshtrade.reporting.account_report.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x91\x02\n" +
	"\bFeeEntry\x12E\n" +
	"\x10transaction_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x0ftransactionDate\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x01R\x06amount\x126\n" +
	"\x17reported_currency_value\x18\x05 \x01(\x01R\x15reportedCurrencyValue\x12%\n" +
	"\x0etoken_currency\x18\x06 \x01(\tR\rtokenCurrencyBJZHgithub.com/meshtrade/api/go/reporting/account_report/v1;account_reportv1b\x06proto3"

var (
	file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDescOnce sync.Once
	file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDescData []byte
)

func file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDescGZIP() []byte {
	file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDescOnce.Do(func() {
		file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDesc), len(file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDesc)))
	})
	return file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDescData
}

var file_meshtrade_reporting_account_report_v1_fee_entry_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meshtrade_reporting_account_report_v1_fee_entry_proto_goTypes = []any{
	(*FeeEntry)(nil),              // 0: meshtrade.reporting.account_report.v1.FeeEntry
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_meshtrade_reporting_account_report_v1_fee_entry_proto_depIdxs = []int32{
	1, // 0: meshtrade.reporting.account_report.v1.FeeEntry.transaction_date:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_meshtrade_reporting_account_report_v1_fee_entry_proto_init() }
func file_meshtrade_reporting_account_report_v1_fee_entry_proto_init() {
	if File_meshtrade_reporting_account_report_v1_fee_entry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDesc), len(file_meshtrade_reporting_account_report_v1_fee_entry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_reporting_account_report_v1_fee_entry_proto_goTypes,
		DependencyIndexes: file_meshtrade_reporting_account_report_v1_fee_entry_proto_depIdxs,
		MessageInfos:      file_meshtrade_reporting_account_report_v1_fee_entry_proto_msgTypes,
	}.Build()
	File_meshtrade_reporting_account_report_v1_fee_entry_proto = out.File
	file_meshtrade_reporting_account_report_v1_fee_entry_proto_goTypes = nil
	file_meshtrade_reporting_account_report_v1_fee_entry_proto_depIdxs = nil
}
