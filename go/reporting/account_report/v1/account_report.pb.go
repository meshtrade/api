// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/reporting/account_report/v1/account_report.proto

package account_reportv1

import (
	v1 "github.com/meshtrade/api/go/type/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AccountReport represents a detailed report of account activity over a specific period.
//
// It contains individual transaction entries for income and fees, a trading statement,
// an aggregated summary, metadata about the reporting period, client information, and any
// relevant disclaimers or copyright notes.
//
// This structure supports both display and export of account reporting data.
type AccountReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of detailed income entries included in this report.
	IncomeEntries []*IncomeEntry `protobuf:"bytes,1,rep,name=income_entries,json=incomeEntries,proto3" json:"income_entries,omitempty"`
	// List of detailed fee entries included in this report.
	FeeEntries []*FeeEntry `protobuf:"bytes,2,rep,name=fee_entries,json=feeEntries,proto3" json:"fee_entries,omitempty"`
	// List of detailed trading statement entries included in this report.
	TradingStatementEntries []*TradingStatementEntry `protobuf:"bytes,3,rep,name=trading_statement_entries,json=tradingStatementEntries,proto3" json:"trading_statement_entries,omitempty"`
	// Token representing the currency in which the report values are denominated.
	ReportingCurrency *v1.Token `protobuf:"bytes,4,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	// The period covered by this report.
	Period *AccountReport_Period `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
	// Timestamp indicating when this report was generated.
	GenerationDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=generation_date,json=generationDate,proto3" json:"generation_date,omitempty"`
	// Account number for which this account report applies.
	AccountNumber string `protobuf:"bytes,7,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	// Optional disclaimers or notices to accompany the report.
	Disclaimers []*Disclaimer `protobuf:"bytes,8,rep,name=disclaimers,proto3" json:"disclaimers,omitempty"`
	// Address details of the client for whom the report is generated.
	ClientAddress *v1.Address `protobuf:"bytes,9,opt,name=client_address,json=clientAddress,proto3" json:"client_address,omitempty"`
	// Name of the client associated with this report.
	ClientName string `protobuf:"bytes,10,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	// Copyright or attribution text related to this account report.
	Copyright     string `protobuf:"bytes,11,opt,name=copyright,proto3" json:"copyright,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountReport) Reset() {
	*x = AccountReport{}
	mi := &file_meshtrade_reporting_account_report_v1_account_report_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountReport) ProtoMessage() {}

func (x *AccountReport) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_account_report_v1_account_report_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountReport.ProtoReflect.Descriptor instead.
func (*AccountReport) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescGZIP(), []int{0}
}

func (x *AccountReport) GetIncomeEntries() []*IncomeEntry {
	if x != nil {
		return x.IncomeEntries
	}
	return nil
}

func (x *AccountReport) GetFeeEntries() []*FeeEntry {
	if x != nil {
		return x.FeeEntries
	}
	return nil
}

func (x *AccountReport) GetTradingStatementEntries() []*TradingStatementEntry {
	if x != nil {
		return x.TradingStatementEntries
	}
	return nil
}

func (x *AccountReport) GetReportingCurrency() *v1.Token {
	if x != nil {
		return x.ReportingCurrency
	}
	return nil
}

func (x *AccountReport) GetPeriod() *AccountReport_Period {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *AccountReport) GetGenerationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.GenerationDate
	}
	return nil
}

func (x *AccountReport) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *AccountReport) GetDisclaimers() []*Disclaimer {
	if x != nil {
		return x.Disclaimers
	}
	return nil
}

func (x *AccountReport) GetClientAddress() *v1.Address {
	if x != nil {
		return x.ClientAddress
	}
	return nil
}

func (x *AccountReport) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *AccountReport) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

// Reporting period for which this account report was generated.
type AccountReport_Period struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start timestamp (inclusive) of the reporting period.
	From *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// End timestamp (inclusive) of the reporting period.
	To            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountReport_Period) Reset() {
	*x = AccountReport_Period{}
	mi := &file_meshtrade_reporting_account_report_v1_account_report_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountReport_Period) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountReport_Period) ProtoMessage() {}

func (x *AccountReport_Period) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_reporting_account_report_v1_account_report_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountReport_Period.ProtoReflect.Descriptor instead.
func (*AccountReport_Period) Descriptor() ([]byte, []int) {
	return file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AccountReport_Period) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *AccountReport_Period) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

var File_meshtrade_reporting_account_report_v1_account_report_proto protoreflect.FileDescriptor

const file_meshtrade_reporting_account_report_v1_account_report_proto_rawDesc = "" +
	"\n" +
	":meshtrade/reporting/account_report/v1/account_report.proto\x12%meshtrade.reporting.account_report.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1dmeshtrade/type/v1/token.proto\x1a\x1fmeshtrade/type/v1/address.proto\x1a5meshtrade/reporting/account_report/v1/fee_entry.proto\x1a8meshtrade/reporting/account_report/v1/income_entry.proto\x1aCmeshtrade/reporting/account_report/v1/trading_statement_entry.proto\x1a6meshtrade/reporting/account_report/v1/disclaimer.proto\"\xfd\x06\n" +
	"\rAccountReport\x12Y\n" +
	"\x0eincome_entries\x18\x01 \x03(\v22.meshtrade.reporting.account_report.v1.IncomeEntryR\rincomeEntries\x12P\n" +
	"\vfee_entries\x18\x02 \x03(\v2/.meshtrade.reporting.account_report.v1.FeeEntryR\n" +
	"feeEntries\x12x\n" +
	"\x19trading_statement_entries\x18\x03 \x03(\v2<.meshtrade.reporting.account_report.v1.TradingStatementEntryR\x17tradingStatementEntries\x12G\n" +
	"\x12reporting_currency\x18\x04 \x01(\v2\x18.meshtrade.type.v1.TokenR\x11reportingCurrency\x12S\n" +
	"\x06period\x18\x05 \x01(\v2;.meshtrade.reporting.account_report.v1.AccountReport.PeriodR\x06period\x12C\n" +
	"\x0fgeneration_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x0egenerationDate\x12%\n" +
	"\x0eaccount_number\x18\a \x01(\tR\raccountNumber\x12S\n" +
	"\vdisclaimers\x18\b \x03(\v21.meshtrade.reporting.account_report.v1.DisclaimerR\vdisclaimers\x12A\n" +
	"\x0eclient_address\x18\t \x01(\v2\x1a.meshtrade.type.v1.AddressR\rclientAddress\x12\x1f\n" +
	"\vclient_name\x18\n" +
	" \x01(\tR\n" +
	"clientName\x12\x1c\n" +
	"\tcopyright\x18\v \x01(\tR\tcopyright\x1ad\n" +
	"\x06Period\x12.\n" +
	"\x04from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x02toBx\n" +
	",co.meshtrade.api.reporting.account_report.v1ZHgithub.com/meshtrade/api/go/reporting/account_report/v1;account_reportv1b\x06proto3"

var (
	file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescOnce sync.Once
	file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescData []byte
)

func file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescGZIP() []byte {
	file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescOnce.Do(func() {
		file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_account_report_v1_account_report_proto_rawDesc), len(file_meshtrade_reporting_account_report_v1_account_report_proto_rawDesc)))
	})
	return file_meshtrade_reporting_account_report_v1_account_report_proto_rawDescData
}

var file_meshtrade_reporting_account_report_v1_account_report_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_meshtrade_reporting_account_report_v1_account_report_proto_goTypes = []any{
	(*AccountReport)(nil),         // 0: meshtrade.reporting.account_report.v1.AccountReport
	(*AccountReport_Period)(nil),  // 1: meshtrade.reporting.account_report.v1.AccountReport.Period
	(*IncomeEntry)(nil),           // 2: meshtrade.reporting.account_report.v1.IncomeEntry
	(*FeeEntry)(nil),              // 3: meshtrade.reporting.account_report.v1.FeeEntry
	(*TradingStatementEntry)(nil), // 4: meshtrade.reporting.account_report.v1.TradingStatementEntry
	(*v1.Token)(nil),              // 5: meshtrade.type.v1.Token
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*Disclaimer)(nil),            // 7: meshtrade.reporting.account_report.v1.Disclaimer
	(*v1.Address)(nil),            // 8: meshtrade.type.v1.Address
}
var file_meshtrade_reporting_account_report_v1_account_report_proto_depIdxs = []int32{
	2,  // 0: meshtrade.reporting.account_report.v1.AccountReport.income_entries:type_name -> meshtrade.reporting.account_report.v1.IncomeEntry
	3,  // 1: meshtrade.reporting.account_report.v1.AccountReport.fee_entries:type_name -> meshtrade.reporting.account_report.v1.FeeEntry
	4,  // 2: meshtrade.reporting.account_report.v1.AccountReport.trading_statement_entries:type_name -> meshtrade.reporting.account_report.v1.TradingStatementEntry
	5,  // 3: meshtrade.reporting.account_report.v1.AccountReport.reporting_currency:type_name -> meshtrade.type.v1.Token
	1,  // 4: meshtrade.reporting.account_report.v1.AccountReport.period:type_name -> meshtrade.reporting.account_report.v1.AccountReport.Period
	6,  // 5: meshtrade.reporting.account_report.v1.AccountReport.generation_date:type_name -> google.protobuf.Timestamp
	7,  // 6: meshtrade.reporting.account_report.v1.AccountReport.disclaimers:type_name -> meshtrade.reporting.account_report.v1.Disclaimer
	8,  // 7: meshtrade.reporting.account_report.v1.AccountReport.client_address:type_name -> meshtrade.type.v1.Address
	6,  // 8: meshtrade.reporting.account_report.v1.AccountReport.Period.from:type_name -> google.protobuf.Timestamp
	6,  // 9: meshtrade.reporting.account_report.v1.AccountReport.Period.to:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_meshtrade_reporting_account_report_v1_account_report_proto_init() }
func file_meshtrade_reporting_account_report_v1_account_report_proto_init() {
	if File_meshtrade_reporting_account_report_v1_account_report_proto != nil {
		return
	}
	file_meshtrade_reporting_account_report_v1_fee_entry_proto_init()
	file_meshtrade_reporting_account_report_v1_income_entry_proto_init()
	file_meshtrade_reporting_account_report_v1_trading_statement_entry_proto_init()
	file_meshtrade_reporting_account_report_v1_disclaimer_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_reporting_account_report_v1_account_report_proto_rawDesc), len(file_meshtrade_reporting_account_report_v1_account_report_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_reporting_account_report_v1_account_report_proto_goTypes,
		DependencyIndexes: file_meshtrade_reporting_account_report_v1_account_report_proto_depIdxs,
		MessageInfos:      file_meshtrade_reporting_account_report_v1_account_report_proto_msgTypes,
	}.Build()
	File_meshtrade_reporting_account_report_v1_account_report_proto = out.File
	file_meshtrade_reporting_account_report_v1_account_report_proto_goTypes = nil
	file_meshtrade_reporting_account_report_v1_account_report_proto_depIdxs = nil
}
