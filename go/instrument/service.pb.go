// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/instrument/service.proto

package instrument

import (
	ledger "github.com/meshtrade/api/go/ledger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MintRequest is Mint method request on the Instrument Service.
type MintRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount is the amount to be minted.
	Amount *ledger.Amount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// FeeAccountNumber refers to the account from which fees are paid.
	FeeAccountNumber string `protobuf:"bytes,2,opt,name=feeAccountNumber,proto3" json:"feeAccountNumber,omitempty"`
	// DestinationAccountNumber refers to the account for which instrument tokens are minted.
	DestinationAccountNumber string `protobuf:"bytes,3,opt,name=destinationAccountNumber,proto3" json:"destinationAccountNumber,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *MintRequest) Reset() {
	*x = MintRequest{}
	mi := &file_api_proto_instrument_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintRequest) ProtoMessage() {}

func (x *MintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintRequest.ProtoReflect.Descriptor instead.
func (*MintRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_service_proto_rawDescGZIP(), []int{0}
}

func (x *MintRequest) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MintRequest) GetFeeAccountNumber() string {
	if x != nil {
		return x.FeeAccountNumber
	}
	return ""
}

func (x *MintRequest) GetDestinationAccountNumber() string {
	if x != nil {
		return x.DestinationAccountNumber
	}
	return ""
}

// MintResponse is Mint method response on the Instrument Service.
type MintResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TransactionID refers to the mint transaction.
	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MintResponse) Reset() {
	*x = MintResponse{}
	mi := &file_api_proto_instrument_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintResponse) ProtoMessage() {}

func (x *MintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintResponse.ProtoReflect.Descriptor instead.
func (*MintResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_service_proto_rawDescGZIP(), []int{1}
}

func (x *MintResponse) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

// BurnRequest is Burn method request on the Instrument Service.
type BurnRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount is the amount to be burned.
	Amount *ledger.Amount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// FeeAccountNumber refers to the account from which fees are paid.
	FeeAccountNumber string `protobuf:"bytes,2,opt,name=feeAccountNumber,proto3" json:"feeAccountNumber,omitempty"`
	// SourceAccountNumber refers to the account from which instrument tokens are burned.
	SourceAccountNumber string `protobuf:"bytes,3,opt,name=sourceAccountNumber,proto3" json:"sourceAccountNumber,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BurnRequest) Reset() {
	*x = BurnRequest{}
	mi := &file_api_proto_instrument_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BurnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnRequest) ProtoMessage() {}

func (x *BurnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnRequest.ProtoReflect.Descriptor instead.
func (*BurnRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_service_proto_rawDescGZIP(), []int{2}
}

func (x *BurnRequest) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *BurnRequest) GetFeeAccountNumber() string {
	if x != nil {
		return x.FeeAccountNumber
	}
	return ""
}

func (x *BurnRequest) GetSourceAccountNumber() string {
	if x != nil {
		return x.SourceAccountNumber
	}
	return ""
}

// BurnResponse is Burn method response on the Instrument Service.
type BurnResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TransactionID refers to the burn transaction.
	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BurnResponse) Reset() {
	*x = BurnResponse{}
	mi := &file_api_proto_instrument_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BurnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnResponse) ProtoMessage() {}

func (x *BurnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnResponse.ProtoReflect.Descriptor instead.
func (*BurnResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_service_proto_rawDescGZIP(), []int{3}
}

func (x *BurnResponse) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

var File_api_proto_instrument_service_proto protoreflect.FileDescriptor

const file_api_proto_instrument_service_proto_rawDesc = "" +
	"\n" +
	"\"api/proto/instrument/service.proto\x12\x0eapi.instrument\x1a\x1dapi/proto/ledger/amount.proto\"\xa1\x01\n" +
	"\vMintRequest\x12*\n" +
	"\x06amount\x18\x01 \x01(\v2\x12.api.ledger.AmountR\x06amount\x12*\n" +
	"\x10feeAccountNumber\x18\x02 \x01(\tR\x10feeAccountNumber\x12:\n" +
	"\x18destinationAccountNumber\x18\x03 \x01(\tR\x18destinationAccountNumber\"4\n" +
	"\fMintResponse\x12$\n" +
	"\rtransactionID\x18\x01 \x01(\tR\rtransactionID\"\x97\x01\n" +
	"\vBurnRequest\x12*\n" +
	"\x06amount\x18\x01 \x01(\v2\x12.api.ledger.AmountR\x06amount\x12*\n" +
	"\x10feeAccountNumber\x18\x02 \x01(\tR\x10feeAccountNumber\x120\n" +
	"\x13sourceAccountNumber\x18\x03 \x01(\tR\x13sourceAccountNumber\"4\n" +
	"\fBurnResponse\x12$\n" +
	"\rtransactionID\x18\x01 \x01(\tR\rtransactionID2\x8f\x01\n" +
	"\aService\x12A\n" +
	"\x04Mint\x12\x1b.api.instrument.MintRequest\x1a\x1c.api.instrument.MintResponse\x12A\n" +
	"\x04Burn\x12\x1b.api.instrument.BurnRequest\x1a\x1c.api.instrument.BurnResponseB(Z&github.com/meshtrade/api/go/instrumentb\x06proto3"

var (
	file_api_proto_instrument_service_proto_rawDescOnce sync.Once
	file_api_proto_instrument_service_proto_rawDescData []byte
)

func file_api_proto_instrument_service_proto_rawDescGZIP() []byte {
	file_api_proto_instrument_service_proto_rawDescOnce.Do(func() {
		file_api_proto_instrument_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_instrument_service_proto_rawDesc), len(file_api_proto_instrument_service_proto_rawDesc)))
	})
	return file_api_proto_instrument_service_proto_rawDescData
}

var file_api_proto_instrument_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_instrument_service_proto_goTypes = []any{
	(*MintRequest)(nil),   // 0: api.instrument.MintRequest
	(*MintResponse)(nil),  // 1: api.instrument.MintResponse
	(*BurnRequest)(nil),   // 2: api.instrument.BurnRequest
	(*BurnResponse)(nil),  // 3: api.instrument.BurnResponse
	(*ledger.Amount)(nil), // 4: api.ledger.Amount
}
var file_api_proto_instrument_service_proto_depIdxs = []int32{
	4, // 0: api.instrument.MintRequest.amount:type_name -> api.ledger.Amount
	4, // 1: api.instrument.BurnRequest.amount:type_name -> api.ledger.Amount
	0, // 2: api.instrument.Service.Mint:input_type -> api.instrument.MintRequest
	2, // 3: api.instrument.Service.Burn:input_type -> api.instrument.BurnRequest
	1, // 4: api.instrument.Service.Mint:output_type -> api.instrument.MintResponse
	3, // 5: api.instrument.Service.Burn:output_type -> api.instrument.BurnResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_instrument_service_proto_init() }
func file_api_proto_instrument_service_proto_init() {
	if File_api_proto_instrument_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_instrument_service_proto_rawDesc), len(file_api_proto_instrument_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_instrument_service_proto_goTypes,
		DependencyIndexes: file_api_proto_instrument_service_proto_depIdxs,
		MessageInfos:      file_api_proto_instrument_service_proto_msgTypes,
	}.Build()
	File_api_proto_instrument_service_proto = out.File
	file_api_proto_instrument_service_proto_goTypes = nil
	file_api_proto_instrument_service_proto_depIdxs = nil
}
