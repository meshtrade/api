// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.0
// source: instrument/service.proto

package instrument

import (
	ledger "github.com/meshtrade/api/go/ledger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MintRequest is Mint method request on the Instrument Service.
type MintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount is the amount to be minted.
	Amount *ledger.Amount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// FeeAccountNumber refers to the account from which fees are paid.
	FeeAccountNumber string `protobuf:"bytes,2,opt,name=feeAccountNumber,proto3" json:"feeAccountNumber,omitempty"`
	// DestinationAccountNumber refers to the account for which instrument tokens are minted.
	DestinationAccountNumber string `protobuf:"bytes,3,opt,name=destinationAccountNumber,proto3" json:"destinationAccountNumber,omitempty"`
}

func (x *MintRequest) Reset() {
	*x = MintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintRequest) ProtoMessage() {}

func (x *MintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintRequest.ProtoReflect.Descriptor instead.
func (*MintRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{0}
}

func (x *MintRequest) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MintRequest) GetFeeAccountNumber() string {
	if x != nil {
		return x.FeeAccountNumber
	}
	return ""
}

func (x *MintRequest) GetDestinationAccountNumber() string {
	if x != nil {
		return x.DestinationAccountNumber
	}
	return ""
}

// MintResponse is Mint method response on the Instrument Service.
type MintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TransactoinID refers to the mint transaction.
	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (x *MintResponse) Reset() {
	*x = MintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintResponse) ProtoMessage() {}

func (x *MintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintResponse.ProtoReflect.Descriptor instead.
func (*MintResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{1}
}

func (x *MintResponse) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

// BurnRequest is Burn method request on the Instrument Service.
type BurnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount is the amount to be burned.
	Amount *ledger.Amount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// FeeAccountNumber refers to the account from which fees are paid.
	FeeAccountNumber string `protobuf:"bytes,2,opt,name=feeAccountNumber,proto3" json:"feeAccountNumber,omitempty"`
	// SourceAccountNumber refers to the account from which instrument tokens are burned.
	SourceAccountNumber string `protobuf:"bytes,3,opt,name=sourceAccountNumber,proto3" json:"sourceAccountNumber,omitempty"`
}

func (x *BurnRequest) Reset() {
	*x = BurnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnRequest) ProtoMessage() {}

func (x *BurnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnRequest.ProtoReflect.Descriptor instead.
func (*BurnRequest) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{2}
}

func (x *BurnRequest) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *BurnRequest) GetFeeAccountNumber() string {
	if x != nil {
		return x.FeeAccountNumber
	}
	return ""
}

func (x *BurnRequest) GetSourceAccountNumber() string {
	if x != nil {
		return x.SourceAccountNumber
	}
	return ""
}

// BurnResponse is Burn method response on the Instrument Service.
type BurnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TransactoinID refers to the burn transaction.
	TransactionID string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
}

func (x *BurnResponse) Reset() {
	*x = BurnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnResponse) ProtoMessage() {}

func (x *BurnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnResponse.ProtoReflect.Descriptor instead.
func (*BurnResponse) Descriptor() ([]byte, []int) {
	return file_instrument_service_proto_rawDescGZIP(), []int{3}
}

func (x *BurnResponse) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

var File_instrument_service_proto protoreflect.FileDescriptor

var file_instrument_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x13, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x0b,
	0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66,
	0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x18, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x0c, 0x4d,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x93, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x65, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x34, 0x0a, 0x0c, 0x42, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x32, 0x7f, 0x0a,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x4d, 0x69, 0x6e, 0x74,
	0x12, 0x17, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x42, 0x75, 0x72, 0x6e, 0x12, 0x17, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x28,
	0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73,
	0x68, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_instrument_service_proto_rawDescOnce sync.Once
	file_instrument_service_proto_rawDescData = file_instrument_service_proto_rawDesc
)

func file_instrument_service_proto_rawDescGZIP() []byte {
	file_instrument_service_proto_rawDescOnce.Do(func() {
		file_instrument_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_instrument_service_proto_rawDescData)
	})
	return file_instrument_service_proto_rawDescData
}

var file_instrument_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_instrument_service_proto_goTypes = []interface{}{
	(*MintRequest)(nil),   // 0: instrument.MintRequest
	(*MintResponse)(nil),  // 1: instrument.MintResponse
	(*BurnRequest)(nil),   // 2: instrument.BurnRequest
	(*BurnResponse)(nil),  // 3: instrument.BurnResponse
	(*ledger.Amount)(nil), // 4: ledger.Amount
}
var file_instrument_service_proto_depIdxs = []int32{
	4, // 0: instrument.MintRequest.amount:type_name -> ledger.Amount
	4, // 1: instrument.BurnRequest.amount:type_name -> ledger.Amount
	0, // 2: instrument.Service.Mint:input_type -> instrument.MintRequest
	2, // 3: instrument.Service.Burn:input_type -> instrument.BurnRequest
	1, // 4: instrument.Service.Mint:output_type -> instrument.MintResponse
	3, // 5: instrument.Service.Burn:output_type -> instrument.BurnResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_instrument_service_proto_init() }
func file_instrument_service_proto_init() {
	if File_instrument_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_instrument_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_instrument_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_instrument_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_instrument_service_proto_goTypes,
		DependencyIndexes: file_instrument_service_proto_depIdxs,
		MessageInfos:      file_instrument_service_proto_msgTypes,
	}.Build()
	File_instrument_service_proto = out.File
	file_instrument_service_proto_rawDesc = nil
	file_instrument_service_proto_goTypes = nil
	file_instrument_service_proto_depIdxs = nil
}
