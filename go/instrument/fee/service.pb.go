// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/instrument/fee/service.proto

package fee

import (
	feeprofile "github.com/meshtrade/api/go/instrument/feeprofile"
	ledger "github.com/meshtrade/api/go/ledger"
	search "github.com/meshtrade/api/go/search"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetRequest is the Get method request on the Fee Service.
type GetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Criteria is the search criteria that specifies which Fee to retrieve.
	Criteria      []*search.Criterion `protobuf:"bytes,1,rep,name=criteria,proto3" json:"criteria,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetCriteria() []*search.Criterion {
	if x != nil {
		return x.Criteria
	}
	return nil
}

// GetResponse is the Get method response on the Fee Service.
type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fee is the Fee that was retrieved.
	Fee           *Fee `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

// ListRequest is the List method request on the Fee Service.
type ListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Criteria is the search criteria that specifies which fees to retrieve.
	Criteria []*search.Criterion `protobuf:"bytes,1,rep,name=criteria,proto3" json:"criteria,omitempty"`
	// Query controls pagination of the fees.
	Query         *search.Query `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListRequest) GetCriteria() []*search.Criterion {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *ListRequest) GetQuery() *search.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

// ListResponse is the List method response on the Fee Service.
type ListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fees are the list of fees that were retrieved.
	Fees []*Fee `protobuf:"bytes,1,rep,name=fees,proto3" json:"fees,omitempty"`
	// Total is the total number of fees that match the given criteria.
	Total         int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListResponse) GetFees() []*Fee {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *ListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CalculateMintingFeesRequest is the CalculateMintingFees method request on the Fee Service.
type CalculateMintingFeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount is the mint Amount for which fees are calculated.
	Amount        *ledger.Amount `protobuf:"bytes,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateMintingFeesRequest) Reset() {
	*x = CalculateMintingFeesRequest{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateMintingFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateMintingFeesRequest) ProtoMessage() {}

func (x *CalculateMintingFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateMintingFeesRequest.ProtoReflect.Descriptor instead.
func (*CalculateMintingFeesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{4}
}

func (x *CalculateMintingFeesRequest) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

// CalculateMintingFeesResponse is the CalculateMintingFees method response on the Fee Service.
type CalculateMintingFeesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fees are the fees calculated for the requested mint amount.
	Fees          []*Fee `protobuf:"bytes,1,rep,name=Fees,proto3" json:"Fees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateMintingFeesResponse) Reset() {
	*x = CalculateMintingFeesResponse{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateMintingFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateMintingFeesResponse) ProtoMessage() {}

func (x *CalculateMintingFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateMintingFeesResponse.ProtoReflect.Descriptor instead.
func (*CalculateMintingFeesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{5}
}

func (x *CalculateMintingFeesResponse) GetFees() []*Fee {
	if x != nil {
		return x.Fees
	}
	return nil
}

// CalculateBurningFeesRequest is the CalculateBurningFees method request on the Fee Service.
type CalculateBurningFeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount is the burn Amount for which fees are calculated.
	Amount        *ledger.Amount `protobuf:"bytes,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateBurningFeesRequest) Reset() {
	*x = CalculateBurningFeesRequest{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateBurningFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateBurningFeesRequest) ProtoMessage() {}

func (x *CalculateBurningFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateBurningFeesRequest.ProtoReflect.Descriptor instead.
func (*CalculateBurningFeesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{6}
}

func (x *CalculateBurningFeesRequest) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

// CalculateBurningFeesResponse is the CalculateBurningFees method response on the Fee Service.
type CalculateBurningFeesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fees are the fees calculated for the requested burn amount.
	Fees          []*Fee `protobuf:"bytes,1,rep,name=Fees,proto3" json:"Fees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateBurningFeesResponse) Reset() {
	*x = CalculateBurningFeesResponse{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateBurningFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateBurningFeesResponse) ProtoMessage() {}

func (x *CalculateBurningFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateBurningFeesResponse.ProtoReflect.Descriptor instead.
func (*CalculateBurningFeesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{7}
}

func (x *CalculateBurningFeesResponse) GetFees() []*Fee {
	if x != nil {
		return x.Fees
	}
	return nil
}

// CalculateLifecycleFeesRequest is the CalculateLifecycleFees method request on the Fee Service.
type CalculateLifecycleFeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// InstrumentID is the id of the instrument for which lifecycle fees are calculated.
	InstrumentID string `protobuf:"bytes,1,opt,name=instrumentID,proto3" json:"instrumentID,omitempty"`
	// LifecycleEventCategory is the category of lifecycle events for which
	// lifecycle fees are calculated
	LifecycleEventCategory feeprofile.LifecycleEventCategory `protobuf:"varint,2,opt,name=lifecycleEventCategory,proto3,enum=api.instrument.feeprofile.LifecycleEventCategory" json:"lifecycleEventCategory,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CalculateLifecycleFeesRequest) Reset() {
	*x = CalculateLifecycleFeesRequest{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateLifecycleFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateLifecycleFeesRequest) ProtoMessage() {}

func (x *CalculateLifecycleFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateLifecycleFeesRequest.ProtoReflect.Descriptor instead.
func (*CalculateLifecycleFeesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{8}
}

func (x *CalculateLifecycleFeesRequest) GetInstrumentID() string {
	if x != nil {
		return x.InstrumentID
	}
	return ""
}

func (x *CalculateLifecycleFeesRequest) GetLifecycleEventCategory() feeprofile.LifecycleEventCategory {
	if x != nil {
		return x.LifecycleEventCategory
	}
	return feeprofile.LifecycleEventCategory(0)
}

// CalculateLifecycleFeesResponse is the CalculateLifecycleFees method response on the Fee Service.
type CalculateLifecycleFeesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fees are the fees calculated for the requested instrument.
	Fees          []*Fee `protobuf:"bytes,1,rep,name=Fees,proto3" json:"Fees,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateLifecycleFeesResponse) Reset() {
	*x = CalculateLifecycleFeesResponse{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateLifecycleFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateLifecycleFeesResponse) ProtoMessage() {}

func (x *CalculateLifecycleFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateLifecycleFeesResponse.ProtoReflect.Descriptor instead.
func (*CalculateLifecycleFeesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{9}
}

func (x *CalculateLifecycleFeesResponse) GetFees() []*Fee {
	if x != nil {
		return x.Fees
	}
	return nil
}

// FullUpdateRequest is the empty FullUpdate method request on the Fee Service.
type FullUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullUpdateRequest) Reset() {
	*x = FullUpdateRequest{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullUpdateRequest) ProtoMessage() {}

func (x *FullUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullUpdateRequest.ProtoReflect.Descriptor instead.
func (*FullUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{10}
}

// FullUpdateResponse is the empty FullUpdate method response on the Fee Service.
type FullUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullUpdateResponse) Reset() {
	*x = FullUpdateResponse{}
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullUpdateResponse) ProtoMessage() {}

func (x *FullUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_instrument_fee_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullUpdateResponse.ProtoReflect.Descriptor instead.
func (*FullUpdateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_instrument_fee_service_proto_rawDescGZIP(), []int{11}
}

var File_api_proto_instrument_fee_service_proto protoreflect.FileDescriptor

const file_api_proto_instrument_fee_service_proto_rawDesc = "" +
	"\n" +
	"&api/proto/instrument/fee/service.proto\x12\x12api.instrument.fee\x1a\"api/proto/instrument/fee/fee.proto\x1a\x1dapi/proto/ledger/amount.proto\x1a api/proto/search/criterion.proto\x1a\x1capi/proto/search/query.proto\x1a<api/proto/instrument/feeprofile/lifecycleEventCategory.proto\"?\n" +
	"\n" +
	"GetRequest\x121\n" +
	"\bcriteria\x18\x01 \x03(\v2\x15.api.search.CriterionR\bcriteria\"8\n" +
	"\vGetResponse\x12)\n" +
	"\x03fee\x18\x01 \x01(\v2\x17.api.instrument.fee.FeeR\x03fee\"i\n" +
	"\vListRequest\x121\n" +
	"\bcriteria\x18\x01 \x03(\v2\x15.api.search.CriterionR\bcriteria\x12'\n" +
	"\x05query\x18\x02 \x01(\v2\x11.api.search.QueryR\x05query\"Q\n" +
	"\fListResponse\x12+\n" +
	"\x04fees\x18\x01 \x03(\v2\x17.api.instrument.fee.FeeR\x04fees\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"I\n" +
	"\x1bCalculateMintingFeesRequest\x12*\n" +
	"\x06Amount\x18\x01 \x01(\v2\x12.api.ledger.AmountR\x06Amount\"K\n" +
	"\x1cCalculateMintingFeesResponse\x12+\n" +
	"\x04Fees\x18\x01 \x03(\v2\x17.api.instrument.fee.FeeR\x04Fees\"I\n" +
	"\x1bCalculateBurningFeesRequest\x12*\n" +
	"\x06Amount\x18\x01 \x01(\v2\x12.api.ledger.AmountR\x06Amount\"K\n" +
	"\x1cCalculateBurningFeesResponse\x12+\n" +
	"\x04Fees\x18\x01 \x03(\v2\x17.api.instrument.fee.FeeR\x04Fees\"\xae\x01\n" +
	"\x1dCalculateLifecycleFeesRequest\x12\"\n" +
	"\finstrumentID\x18\x01 \x01(\tR\finstrumentID\x12i\n" +
	"\x16lifecycleEventCategory\x18\x02 \x01(\x0e21.api.instrument.feeprofile.LifecycleEventCategoryR\x16lifecycleEventCategory\"M\n" +
	"\x1eCalculateLifecycleFeesResponse\x12+\n" +
	"\x04Fees\x18\x01 \x03(\v2\x17.api.instrument.fee.FeeR\x04Fees\"\x13\n" +
	"\x11FullUpdateRequest\"\x14\n" +
	"\x12FullUpdateResponse2\xf0\x04\n" +
	"\aService\x12F\n" +
	"\x03Get\x12\x1e.api.instrument.fee.GetRequest\x1a\x1f.api.instrument.fee.GetResponse\x12I\n" +
	"\x04List\x12\x1f.api.instrument.fee.ListRequest\x1a .api.instrument.fee.ListResponse\x12y\n" +
	"\x14CalculateMintingFees\x12/.api.instrument.fee.CalculateMintingFeesRequest\x1a0.api.instrument.fee.CalculateMintingFeesResponse\x12y\n" +
	"\x14CalculateBurningFees\x12/.api.instrument.fee.CalculateBurningFeesRequest\x1a0.api.instrument.fee.CalculateBurningFeesResponse\x12\x7f\n" +
	"\x16CalculateLifecycleFees\x121.api.instrument.fee.CalculateLifecycleFeesRequest\x1a2.api.instrument.fee.CalculateLifecycleFeesResponse\x12[\n" +
	"\n" +
	"FullUpdate\x12%.api.instrument.fee.FullUpdateRequest\x1a&.api.instrument.fee.FullUpdateResponseB,Z*github.com/meshtrade/api/go/instrument/feeb\x06proto3"

var (
	file_api_proto_instrument_fee_service_proto_rawDescOnce sync.Once
	file_api_proto_instrument_fee_service_proto_rawDescData []byte
)

func file_api_proto_instrument_fee_service_proto_rawDescGZIP() []byte {
	file_api_proto_instrument_fee_service_proto_rawDescOnce.Do(func() {
		file_api_proto_instrument_fee_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_instrument_fee_service_proto_rawDesc), len(file_api_proto_instrument_fee_service_proto_rawDesc)))
	})
	return file_api_proto_instrument_fee_service_proto_rawDescData
}

var file_api_proto_instrument_fee_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_proto_instrument_fee_service_proto_goTypes = []any{
	(*GetRequest)(nil),                     // 0: api.instrument.fee.GetRequest
	(*GetResponse)(nil),                    // 1: api.instrument.fee.GetResponse
	(*ListRequest)(nil),                    // 2: api.instrument.fee.ListRequest
	(*ListResponse)(nil),                   // 3: api.instrument.fee.ListResponse
	(*CalculateMintingFeesRequest)(nil),    // 4: api.instrument.fee.CalculateMintingFeesRequest
	(*CalculateMintingFeesResponse)(nil),   // 5: api.instrument.fee.CalculateMintingFeesResponse
	(*CalculateBurningFeesRequest)(nil),    // 6: api.instrument.fee.CalculateBurningFeesRequest
	(*CalculateBurningFeesResponse)(nil),   // 7: api.instrument.fee.CalculateBurningFeesResponse
	(*CalculateLifecycleFeesRequest)(nil),  // 8: api.instrument.fee.CalculateLifecycleFeesRequest
	(*CalculateLifecycleFeesResponse)(nil), // 9: api.instrument.fee.CalculateLifecycleFeesResponse
	(*FullUpdateRequest)(nil),              // 10: api.instrument.fee.FullUpdateRequest
	(*FullUpdateResponse)(nil),             // 11: api.instrument.fee.FullUpdateResponse
	(*search.Criterion)(nil),               // 12: api.search.Criterion
	(*Fee)(nil),                            // 13: api.instrument.fee.Fee
	(*search.Query)(nil),                   // 14: api.search.Query
	(*ledger.Amount)(nil),                  // 15: api.ledger.Amount
	(feeprofile.LifecycleEventCategory)(0), // 16: api.instrument.feeprofile.LifecycleEventCategory
}
var file_api_proto_instrument_fee_service_proto_depIdxs = []int32{
	12, // 0: api.instrument.fee.GetRequest.criteria:type_name -> api.search.Criterion
	13, // 1: api.instrument.fee.GetResponse.fee:type_name -> api.instrument.fee.Fee
	12, // 2: api.instrument.fee.ListRequest.criteria:type_name -> api.search.Criterion
	14, // 3: api.instrument.fee.ListRequest.query:type_name -> api.search.Query
	13, // 4: api.instrument.fee.ListResponse.fees:type_name -> api.instrument.fee.Fee
	15, // 5: api.instrument.fee.CalculateMintingFeesRequest.Amount:type_name -> api.ledger.Amount
	13, // 6: api.instrument.fee.CalculateMintingFeesResponse.Fees:type_name -> api.instrument.fee.Fee
	15, // 7: api.instrument.fee.CalculateBurningFeesRequest.Amount:type_name -> api.ledger.Amount
	13, // 8: api.instrument.fee.CalculateBurningFeesResponse.Fees:type_name -> api.instrument.fee.Fee
	16, // 9: api.instrument.fee.CalculateLifecycleFeesRequest.lifecycleEventCategory:type_name -> api.instrument.feeprofile.LifecycleEventCategory
	13, // 10: api.instrument.fee.CalculateLifecycleFeesResponse.Fees:type_name -> api.instrument.fee.Fee
	0,  // 11: api.instrument.fee.Service.Get:input_type -> api.instrument.fee.GetRequest
	2,  // 12: api.instrument.fee.Service.List:input_type -> api.instrument.fee.ListRequest
	4,  // 13: api.instrument.fee.Service.CalculateMintingFees:input_type -> api.instrument.fee.CalculateMintingFeesRequest
	6,  // 14: api.instrument.fee.Service.CalculateBurningFees:input_type -> api.instrument.fee.CalculateBurningFeesRequest
	8,  // 15: api.instrument.fee.Service.CalculateLifecycleFees:input_type -> api.instrument.fee.CalculateLifecycleFeesRequest
	10, // 16: api.instrument.fee.Service.FullUpdate:input_type -> api.instrument.fee.FullUpdateRequest
	1,  // 17: api.instrument.fee.Service.Get:output_type -> api.instrument.fee.GetResponse
	3,  // 18: api.instrument.fee.Service.List:output_type -> api.instrument.fee.ListResponse
	5,  // 19: api.instrument.fee.Service.CalculateMintingFees:output_type -> api.instrument.fee.CalculateMintingFeesResponse
	7,  // 20: api.instrument.fee.Service.CalculateBurningFees:output_type -> api.instrument.fee.CalculateBurningFeesResponse
	9,  // 21: api.instrument.fee.Service.CalculateLifecycleFees:output_type -> api.instrument.fee.CalculateLifecycleFeesResponse
	11, // 22: api.instrument.fee.Service.FullUpdate:output_type -> api.instrument.fee.FullUpdateResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_proto_instrument_fee_service_proto_init() }
func file_api_proto_instrument_fee_service_proto_init() {
	if File_api_proto_instrument_fee_service_proto != nil {
		return
	}
	file_api_proto_instrument_fee_fee_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_instrument_fee_service_proto_rawDesc), len(file_api_proto_instrument_fee_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_instrument_fee_service_proto_goTypes,
		DependencyIndexes: file_api_proto_instrument_fee_service_proto_depIdxs,
		MessageInfos:      file_api_proto_instrument_fee_service_proto_msgTypes,
	}.Build()
	File_api_proto_instrument_fee_service_proto = out.File
	file_api_proto_instrument_fee_service_proto_goTypes = nil
	file_api_proto_instrument_fee_service_proto_depIdxs = nil
}
