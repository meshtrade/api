// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: instrument/feeprofile/service.proto

package feeprofile

import (
	search "github.com/meshtrade/api/go/search"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateRequest is the Create method request on the Fee Profile Service.
type CreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeeProfile is the FeeProfile to be created.
	FeeProfile    *FeeProfile `protobuf:"bytes,1,opt,name=feeProfile,proto3" json:"feeProfile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetFeeProfile() *FeeProfile {
	if x != nil {
		return x.FeeProfile
	}
	return nil
}

// CreateResponse is the Create method response on the Fee Profile Service.
type CreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeeProfile is the FeeProfile that was created.
	FeeProfile    *FeeProfile `protobuf:"bytes,1,opt,name=feeProfile,proto3" json:"feeProfile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateResponse) GetFeeProfile() *FeeProfile {
	if x != nil {
		return x.FeeProfile
	}
	return nil
}

// UpdateRequest is the Update method request on the Fee Profile Service.
type UpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeeProfile is the FeeProfile to be updated.
	FeeProfile    *FeeProfile `protobuf:"bytes,1,opt,name=feeProfile,proto3" json:"feeProfile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRequest) GetFeeProfile() *FeeProfile {
	if x != nil {
		return x.FeeProfile
	}
	return nil
}

// UpdateResponse is the Update method response on the Fee Profile Service.
type UpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeeProfile is the FeeProfile that was updated.
	FeeProfile    *FeeProfile `protobuf:"bytes,1,opt,name=feeProfile,proto3" json:"feeProfile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateResponse) GetFeeProfile() *FeeProfile {
	if x != nil {
		return x.FeeProfile
	}
	return nil
}

// ListRequest is the List method request on the Fee Profile Service.
type ListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Criteria is the search criteria that specifies which fee profiles to retrieve.
	Criteria []*search.Criterion `protobuf:"bytes,1,rep,name=criteria,proto3" json:"criteria,omitempty"`
	// Query controls pagination of the fee profile listing.
	Query         *search.Query `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListRequest) GetCriteria() []*search.Criterion {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *ListRequest) GetQuery() *search.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

// ListResponse is the List method response on the Fee Profile Service.
type ListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeeProfiles are the list of fee profiles that were retrieved.
	FeeProfiles []*FeeProfile `protobuf:"bytes,1,rep,name=feeProfiles,proto3" json:"feeProfiles,omitempty"`
	// Total is the total number of fee profiles that match the given criteria.
	Total         int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetFeeProfiles() []*FeeProfile {
	if x != nil {
		return x.FeeProfiles
	}
	return nil
}

func (x *ListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// GetRequest is the Get method request on the Fee Profile Service.
type GetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Criteria is the search criteria that specifies which fee profile to retrieve.
	Criteria      []*search.Criterion `protobuf:"bytes,1,rep,name=criteria,proto3" json:"criteria,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetRequest) GetCriteria() []*search.Criterion {
	if x != nil {
		return x.Criteria
	}
	return nil
}

// GetResponse is the Get method response on the Fee Profile Service.
type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeeProfile are the is the fee profile that was retrieved.
	FeeProfile    *FeeProfile `protobuf:"bytes,1,opt,name=feeProfile,proto3" json:"feeProfile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_instrument_feeprofile_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetResponse) GetFeeProfile() *FeeProfile {
	if x != nil {
		return x.FeeProfile
	}
	return nil
}

var File_instrument_feeprofile_service_proto protoreflect.FileDescriptor

const file_instrument_feeprofile_service_proto_rawDesc = "" +
	"\n" +
	"#instrument/feeprofile/service.proto\x12\x19api.instrument.feeprofile\x1a&instrument/feeprofile/feeProfile.proto\x1a\x16search/criterion.proto\x1a\x12search/query.proto\"V\n" +
	"\rCreateRequest\x12E\n" +
	"\n" +
	"feeProfile\x18\x01 \x01(\v2%.api.instrument.feeprofile.FeeProfileR\n" +
	"feeProfile\"W\n" +
	"\x0eCreateResponse\x12E\n" +
	"\n" +
	"feeProfile\x18\x01 \x01(\v2%.api.instrument.feeprofile.FeeProfileR\n" +
	"feeProfile\"V\n" +
	"\rUpdateRequest\x12E\n" +
	"\n" +
	"feeProfile\x18\x01 \x01(\v2%.api.instrument.feeprofile.FeeProfileR\n" +
	"feeProfile\"W\n" +
	"\x0eUpdateResponse\x12E\n" +
	"\n" +
	"feeProfile\x18\x01 \x01(\v2%.api.instrument.feeprofile.FeeProfileR\n" +
	"feeProfile\"i\n" +
	"\vListRequest\x121\n" +
	"\bcriteria\x18\x01 \x03(\v2\x15.api.search.CriterionR\bcriteria\x12'\n" +
	"\x05query\x18\x02 \x01(\v2\x11.api.search.QueryR\x05query\"m\n" +
	"\fListResponse\x12G\n" +
	"\vfeeProfiles\x18\x01 \x03(\v2%.api.instrument.feeprofile.FeeProfileR\vfeeProfiles\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"?\n" +
	"\n" +
	"GetRequest\x121\n" +
	"\bcriteria\x18\x01 \x03(\v2\x15.api.search.CriterionR\bcriteria\"T\n" +
	"\vGetResponse\x12E\n" +
	"\n" +
	"feeProfile\x18\x01 \x01(\v2%.api.instrument.feeprofile.FeeProfileR\n" +
	"feeProfile2\xf6\x02\n" +
	"\aService\x12]\n" +
	"\x06Create\x12(.api.instrument.feeprofile.CreateRequest\x1a).api.instrument.feeprofile.CreateResponse\x12]\n" +
	"\x06Update\x12(.api.instrument.feeprofile.UpdateRequest\x1a).api.instrument.feeprofile.UpdateResponse\x12W\n" +
	"\x04List\x12&.api.instrument.feeprofile.ListRequest\x1a'.api.instrument.feeprofile.ListResponse\x12T\n" +
	"\x03Get\x12%.api.instrument.feeprofile.GetRequest\x1a&.api.instrument.feeprofile.GetResponseB3Z1github.com/meshtrade/api/go/instrument/feeprofileb\x06proto3"

var (
	file_instrument_feeprofile_service_proto_rawDescOnce sync.Once
	file_instrument_feeprofile_service_proto_rawDescData []byte
)

func file_instrument_feeprofile_service_proto_rawDescGZIP() []byte {
	file_instrument_feeprofile_service_proto_rawDescOnce.Do(func() {
		file_instrument_feeprofile_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_instrument_feeprofile_service_proto_rawDesc), len(file_instrument_feeprofile_service_proto_rawDesc)))
	})
	return file_instrument_feeprofile_service_proto_rawDescData
}

var file_instrument_feeprofile_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_instrument_feeprofile_service_proto_goTypes = []any{
	(*CreateRequest)(nil),    // 0: api.instrument.feeprofile.CreateRequest
	(*CreateResponse)(nil),   // 1: api.instrument.feeprofile.CreateResponse
	(*UpdateRequest)(nil),    // 2: api.instrument.feeprofile.UpdateRequest
	(*UpdateResponse)(nil),   // 3: api.instrument.feeprofile.UpdateResponse
	(*ListRequest)(nil),      // 4: api.instrument.feeprofile.ListRequest
	(*ListResponse)(nil),     // 5: api.instrument.feeprofile.ListResponse
	(*GetRequest)(nil),       // 6: api.instrument.feeprofile.GetRequest
	(*GetResponse)(nil),      // 7: api.instrument.feeprofile.GetResponse
	(*FeeProfile)(nil),       // 8: api.instrument.feeprofile.FeeProfile
	(*search.Criterion)(nil), // 9: api.search.Criterion
	(*search.Query)(nil),     // 10: api.search.Query
}
var file_instrument_feeprofile_service_proto_depIdxs = []int32{
	8,  // 0: api.instrument.feeprofile.CreateRequest.feeProfile:type_name -> api.instrument.feeprofile.FeeProfile
	8,  // 1: api.instrument.feeprofile.CreateResponse.feeProfile:type_name -> api.instrument.feeprofile.FeeProfile
	8,  // 2: api.instrument.feeprofile.UpdateRequest.feeProfile:type_name -> api.instrument.feeprofile.FeeProfile
	8,  // 3: api.instrument.feeprofile.UpdateResponse.feeProfile:type_name -> api.instrument.feeprofile.FeeProfile
	9,  // 4: api.instrument.feeprofile.ListRequest.criteria:type_name -> api.search.Criterion
	10, // 5: api.instrument.feeprofile.ListRequest.query:type_name -> api.search.Query
	8,  // 6: api.instrument.feeprofile.ListResponse.feeProfiles:type_name -> api.instrument.feeprofile.FeeProfile
	9,  // 7: api.instrument.feeprofile.GetRequest.criteria:type_name -> api.search.Criterion
	8,  // 8: api.instrument.feeprofile.GetResponse.feeProfile:type_name -> api.instrument.feeprofile.FeeProfile
	0,  // 9: api.instrument.feeprofile.Service.Create:input_type -> api.instrument.feeprofile.CreateRequest
	2,  // 10: api.instrument.feeprofile.Service.Update:input_type -> api.instrument.feeprofile.UpdateRequest
	4,  // 11: api.instrument.feeprofile.Service.List:input_type -> api.instrument.feeprofile.ListRequest
	6,  // 12: api.instrument.feeprofile.Service.Get:input_type -> api.instrument.feeprofile.GetRequest
	1,  // 13: api.instrument.feeprofile.Service.Create:output_type -> api.instrument.feeprofile.CreateResponse
	3,  // 14: api.instrument.feeprofile.Service.Update:output_type -> api.instrument.feeprofile.UpdateResponse
	5,  // 15: api.instrument.feeprofile.Service.List:output_type -> api.instrument.feeprofile.ListResponse
	7,  // 16: api.instrument.feeprofile.Service.Get:output_type -> api.instrument.feeprofile.GetResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_instrument_feeprofile_service_proto_init() }
func file_instrument_feeprofile_service_proto_init() {
	if File_instrument_feeprofile_service_proto != nil {
		return
	}
	file_instrument_feeprofile_feeProfile_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_instrument_feeprofile_service_proto_rawDesc), len(file_instrument_feeprofile_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_instrument_feeprofile_service_proto_goTypes,
		DependencyIndexes: file_instrument_feeprofile_service_proto_depIdxs,
		MessageInfos:      file_instrument_feeprofile_service_proto_msgTypes,
	}.Build()
	File_instrument_feeprofile_service_proto = out.File
	file_instrument_feeprofile_service_proto_goTypes = nil
	file_instrument_feeprofile_service_proto_depIdxs = nil
}
