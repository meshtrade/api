// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: instrument/feeprofile/lifecycleEventCalculationConfigRate.proto

package feeprofile

import (
	num "github.com/meshtrade/api/go/num"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RateLifecycleEventCalculationConfig is the calculation configuration for a Fee
// calculated using a percentage rate and a variable base
// amount.
// This is used for fees that depend on base amount like the
// primary market settlement amount or subscription order book
// target raise not yet known with certainty at the time of
// setting up the Instrument's FeeProfile.
//
// @bson-marshalled
type RateLifecycleEventCalculationConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Rate is the rate used to calculate Fee amount when mulitplied to
	// a base amount specific to the lifecycle event.
	// The base amount used is typically one of the following:
	// - Subscription order book target raise amount
	// - Primary market settlement amount
	Rate          *num.Decimal `protobuf:"bytes,1,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLifecycleEventCalculationConfig) Reset() {
	*x = RateLifecycleEventCalculationConfig{}
	mi := &file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLifecycleEventCalculationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLifecycleEventCalculationConfig) ProtoMessage() {}

func (x *RateLifecycleEventCalculationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLifecycleEventCalculationConfig.ProtoReflect.Descriptor instead.
func (*RateLifecycleEventCalculationConfig) Descriptor() ([]byte, []int) {
	return file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDescGZIP(), []int{0}
}

func (x *RateLifecycleEventCalculationConfig) GetRate() *num.Decimal {
	if x != nil {
		return x.Rate
	}
	return nil
}

var File_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto protoreflect.FileDescriptor

const file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDesc = "" +
	"\n" +
	"?instrument/feeprofile/lifecycleEventCalculationConfigRate.proto\x12\x19api.instrument.feeprofile\x1a\x11num/decimal.proto\"K\n" +
	"#RateLifecycleEventCalculationConfig\x12$\n" +
	"\x04rate\x18\x01 \x01(\v2\x10.api.num.DecimalR\x04rateB3Z1github.com/meshtrade/api/go/instrument/feeprofileb\x06proto3"

var (
	file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDescOnce sync.Once
	file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDescData []byte
)

func file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDescGZIP() []byte {
	file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDescOnce.Do(func() {
		file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDesc), len(file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDesc)))
	})
	return file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDescData
}

var file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_goTypes = []any{
	(*RateLifecycleEventCalculationConfig)(nil), // 0: api.instrument.feeprofile.RateLifecycleEventCalculationConfig
	(*num.Decimal)(nil),                         // 1: api.num.Decimal
}
var file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_depIdxs = []int32{
	1, // 0: api.instrument.feeprofile.RateLifecycleEventCalculationConfig.rate:type_name -> api.num.Decimal
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_init() }
func file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_init() {
	if File_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDesc), len(file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_goTypes,
		DependencyIndexes: file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_depIdxs,
		MessageInfos:      file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_msgTypes,
	}.Build()
	File_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto = out.File
	file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_goTypes = nil
	file_instrument_feeprofile_lifecycleEventCalculationConfigRate_proto_depIdxs = nil
}
