// Code generated by protoc-gen-meshgo. DO NOT EDIT.
// source: meshtrade/trading/limit_order/v1/service.proto
package limit_order_v1

import (
	context "context"
	sync "sync"
	testing "testing"
)

// Ensure that MockLimitOrderService implements the LimitOrderService interface
var _ LimitOrderService = &MockLimitOrderService{}

// MockLimitOrderService is a mock implementation of the LimitOrderService interface.
type MockLimitOrderService struct {
	mutex                        sync.Mutex
	T                            *testing.T
	GetLimitOrderFunc            func(t *testing.T, m *MockLimitOrderService, ctx context.Context, request *GetLimitOrderRequest) (*LimitOrder, error)
	GetLimitOrderFuncInvocations int
}

func (m *MockLimitOrderService) GetLimitOrder(ctx context.Context, request *GetLimitOrderRequest) (*LimitOrder, error) {
	m.mutex.Lock()
	m.GetLimitOrderFuncInvocations++
	m.mutex.Unlock()
	if m.GetLimitOrderFunc == nil {
		return nil, nil
	}
	return m.GetLimitOrderFunc(m.T, m, ctx, request)
}
