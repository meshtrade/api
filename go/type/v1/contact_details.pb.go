// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/type/v1/contact_details.proto

package typev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A generic set of contact information for an individual or an entity.
type ContactDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Email address validated according to RFC 5322.
	// Example: "user@example.com"
	// Must be valid if provided.
	EmailAddress string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	// Phone number in E.164 international format.
	// This consists of a '+' sign followed by the country code and subscriber number.
	// Example: "+14155552671"
	// Must be valid if provided.
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// Mobile phone number in E.164 international format.
	// This consists of a '+' sign followed by the country code and subscriber number.
	// Example: "+14155552671"
	// Must be valid if provided.
	MobileNumber string `protobuf:"bytes,5,opt,name=mobile_number,json=mobileNumber,proto3" json:"mobile_number,omitempty"`
	// The domain name of the website without the protocol (http or https).
	// Any provided protocol will be stripped by services processing this entity.
	// Example: "www.mesh.trade".
	Website string `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
	// LinkedIn profile ID. This is the unique identifier found in the profile URL.
	// Example for an individual: "in/john-doe-12345678"
	// Example for a company: "company/mesh-trade"
	Linkedin string `protobuf:"bytes,7,opt,name=linkedin,proto3" json:"linkedin,omitempty"`
	// Facebook profile username or ID.
	// Example: "Mesh.trade"
	Facebook string `protobuf:"bytes,8,opt,name=facebook,proto3" json:"facebook,omitempty"`
	// Instagram handle, without the '@' symbol.
	// Example: "mesh.trade"
	Instagram string `protobuf:"bytes,9,opt,name=instagram,proto3" json:"instagram,omitempty"`
	// X (formerly Twitter) handle, without the '@' symbol.
	// Example: "mesh_trade"
	XTwitter string `protobuf:"bytes,10,opt,name=x_twitter,json=xTwitter,proto3" json:"x_twitter,omitempty"`
	// YouTube handle, without the '@' symbol.
	// Example: "Mesh_Trade"
	Youtube       string `protobuf:"bytes,11,opt,name=youtube,proto3" json:"youtube,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContactDetails) Reset() {
	*x = ContactDetails{}
	mi := &file_meshtrade_type_v1_contact_details_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactDetails) ProtoMessage() {}

func (x *ContactDetails) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_type_v1_contact_details_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactDetails.ProtoReflect.Descriptor instead.
func (*ContactDetails) Descriptor() ([]byte, []int) {
	return file_meshtrade_type_v1_contact_details_proto_rawDescGZIP(), []int{0}
}

func (x *ContactDetails) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *ContactDetails) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ContactDetails) GetMobileNumber() string {
	if x != nil {
		return x.MobileNumber
	}
	return ""
}

func (x *ContactDetails) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *ContactDetails) GetLinkedin() string {
	if x != nil {
		return x.Linkedin
	}
	return ""
}

func (x *ContactDetails) GetFacebook() string {
	if x != nil {
		return x.Facebook
	}
	return ""
}

func (x *ContactDetails) GetInstagram() string {
	if x != nil {
		return x.Instagram
	}
	return ""
}

func (x *ContactDetails) GetXTwitter() string {
	if x != nil {
		return x.XTwitter
	}
	return ""
}

func (x *ContactDetails) GetYoutube() string {
	if x != nil {
		return x.Youtube
	}
	return ""
}

var File_meshtrade_type_v1_contact_details_proto protoreflect.FileDescriptor

const file_meshtrade_type_v1_contact_details_proto_rawDesc = "" +
	"\n" +
	"'meshtrade/type/v1/contact_details.proto\x12\x11meshtrade.type.v1\"\xa4\x02\n" +
	"\x0eContactDetails\x12#\n" +
	"\remail_address\x18\x01 \x01(\tR\femailAddress\x12!\n" +
	"\fphone_number\x18\x03 \x01(\tR\vphoneNumber\x12#\n" +
	"\rmobile_number\x18\x05 \x01(\tR\fmobileNumber\x12\x18\n" +
	"\awebsite\x18\x06 \x01(\tR\awebsite\x12\x1a\n" +
	"\blinkedin\x18\a \x01(\tR\blinkedin\x12\x1a\n" +
	"\bfacebook\x18\b \x01(\tR\bfacebook\x12\x1c\n" +
	"\tinstagram\x18\t \x01(\tR\tinstagram\x12\x1b\n" +
	"\tx_twitter\x18\n" +
	" \x01(\tR\bxTwitter\x12\x18\n" +
	"\ayoutube\x18\v \x01(\tR\ayoutubeBF\n" +
	"\x18co.meshtrade.api.type.v1Z*github.com/meshtrade/api/go/type/v1;typev1b\x06proto3"

var (
	file_meshtrade_type_v1_contact_details_proto_rawDescOnce sync.Once
	file_meshtrade_type_v1_contact_details_proto_rawDescData []byte
)

func file_meshtrade_type_v1_contact_details_proto_rawDescGZIP() []byte {
	file_meshtrade_type_v1_contact_details_proto_rawDescOnce.Do(func() {
		file_meshtrade_type_v1_contact_details_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_type_v1_contact_details_proto_rawDesc), len(file_meshtrade_type_v1_contact_details_proto_rawDesc)))
	})
	return file_meshtrade_type_v1_contact_details_proto_rawDescData
}

var file_meshtrade_type_v1_contact_details_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meshtrade_type_v1_contact_details_proto_goTypes = []any{
	(*ContactDetails)(nil), // 0: meshtrade.type.v1.ContactDetails
}
var file_meshtrade_type_v1_contact_details_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshtrade_type_v1_contact_details_proto_init() }
func file_meshtrade_type_v1_contact_details_proto_init() {
	if File_meshtrade_type_v1_contact_details_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_type_v1_contact_details_proto_rawDesc), len(file_meshtrade_type_v1_contact_details_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_type_v1_contact_details_proto_goTypes,
		DependencyIndexes: file_meshtrade_type_v1_contact_details_proto_depIdxs,
		MessageInfos:      file_meshtrade_type_v1_contact_details_proto_msgTypes,
	}.Build()
	File_meshtrade_type_v1_contact_details_proto = out.File
	file_meshtrade_type_v1_contact_details_proto_goTypes = nil
	file_meshtrade_type_v1_contact_details_proto_depIdxs = nil
}
