// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/type/v1/time_of_day.proto

package type_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a time of day in 24-hour format. The date and time zone are either
// not significant or are specified elsewhere. This type does not support leap
// seconds and uses standard 24-hour time representation (00:00:00 to 23:59:59).
//
// Validation Rules:
// * Hours: 0-23 (24-hour format, no support for 24:00:00 end-of-day representation)
// * Minutes: 0-59
// * Seconds: 0-59 (no leap seconds support)
// * Nanos: 0-999,999,999 (nanosecond precision for sub-second timing)
//
// Examples:
// * Midnight: hours=0, minutes=0, seconds=0, nanos=0 → "00:00:00"
// * Noon: hours=12, minutes=0, seconds=0, nanos=0 → "12:00:00"
// * End of day: hours=23, minutes=59, seconds=59, nanos=999999999 → "23:59:59.999999999"
// * High precision: hours=15, minutes=30, seconds=45, nanos=123456789 → "15:30:45.123456789"
//
// Usage Notes:
// * Can be combined with meshtrade.type.v1.Date to represent complete datetime
// * Suitable for scheduling, timestamps, duration calculations
// * Sub-second precision supports high-frequency trading and precise timing requirements
//
// Related types are [meshtrade.type.v1.Date][meshtrade.type.v1.Date] and
// `google.protobuf.Timestamp`.
type TimeOfDay struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Hours of day in 24 hour format. Must be from 0 to 23. Does not support
	// 24:00:00 end-of-day representation; use 23:59:59.999999999 instead.
	Hours int32 `protobuf:"varint,1,opt,name=hours,proto3" json:"hours,omitempty"`
	// Minutes of hour of day. Must be from 0 to 59.
	Minutes int32 `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	// Seconds of minutes of the time. Must be from 0 to 59. Leap seconds are
	// not supported.
	Seconds int32 `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	// Provides nanosecond precision for sub-second timing requirements.
	Nanos         int32 `protobuf:"varint,4,opt,name=nanos,proto3" json:"nanos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeOfDay) Reset() {
	*x = TimeOfDay{}
	mi := &file_meshtrade_type_v1_time_of_day_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeOfDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeOfDay) ProtoMessage() {}

func (x *TimeOfDay) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_type_v1_time_of_day_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeOfDay.ProtoReflect.Descriptor instead.
func (*TimeOfDay) Descriptor() ([]byte, []int) {
	return file_meshtrade_type_v1_time_of_day_proto_rawDescGZIP(), []int{0}
}

func (x *TimeOfDay) GetHours() int32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *TimeOfDay) GetMinutes() int32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *TimeOfDay) GetSeconds() int32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *TimeOfDay) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

var File_meshtrade_type_v1_time_of_day_proto protoreflect.FileDescriptor

const file_meshtrade_type_v1_time_of_day_proto_rawDesc = "" +
	"\n" +
	"#meshtrade/type/v1/time_of_day.proto\x12\x11meshtrade.type.v1\"k\n" +
	"\tTimeOfDay\x12\x14\n" +
	"\x05hours\x18\x01 \x01(\x05R\x05hours\x12\x18\n" +
	"\aminutes\x18\x02 \x01(\x05R\aminutes\x12\x18\n" +
	"\aseconds\x18\x03 \x01(\x05R\aseconds\x12\x14\n" +
	"\x05nanos\x18\x04 \x01(\x05R\x05nanosBG\n" +
	"\x18co.meshtrade.api.type.v1Z+github.com/meshtrade/api/go/type/v1;type_v1b\x06proto3"

var (
	file_meshtrade_type_v1_time_of_day_proto_rawDescOnce sync.Once
	file_meshtrade_type_v1_time_of_day_proto_rawDescData []byte
)

func file_meshtrade_type_v1_time_of_day_proto_rawDescGZIP() []byte {
	file_meshtrade_type_v1_time_of_day_proto_rawDescOnce.Do(func() {
		file_meshtrade_type_v1_time_of_day_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_type_v1_time_of_day_proto_rawDesc), len(file_meshtrade_type_v1_time_of_day_proto_rawDesc)))
	})
	return file_meshtrade_type_v1_time_of_day_proto_rawDescData
}

var file_meshtrade_type_v1_time_of_day_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meshtrade_type_v1_time_of_day_proto_goTypes = []any{
	(*TimeOfDay)(nil), // 0: meshtrade.type.v1.TimeOfDay
}
var file_meshtrade_type_v1_time_of_day_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshtrade_type_v1_time_of_day_proto_init() }
func file_meshtrade_type_v1_time_of_day_proto_init() {
	if File_meshtrade_type_v1_time_of_day_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_type_v1_time_of_day_proto_rawDesc), len(file_meshtrade_type_v1_time_of_day_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_type_v1_time_of_day_proto_goTypes,
		DependencyIndexes: file_meshtrade_type_v1_time_of_day_proto_depIdxs,
		MessageInfos:      file_meshtrade_type_v1_time_of_day_proto_msgTypes,
	}.Build()
	File_meshtrade_type_v1_time_of_day_proto = out.File
	file_meshtrade_type_v1_time_of_day_proto_goTypes = nil
	file_meshtrade_type_v1_time_of_day_proto_depIdxs = nil
}
