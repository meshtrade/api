// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/iam/user/v1/service.proto

package userv1

import (
	v1 "github.com/meshtrade/api/go/option/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignRoleToUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The email address of the user to assign a role to
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The name of the group in which the user is to be assigned the given role
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	// Role is the role to assign to the user
	Role          v1.Role `protobuf:"varint,3,opt,name=role,proto3,enum=meshtrade.option.v1.Role" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignRoleToUserRequest) Reset() {
	*x = AssignRoleToUserRequest{}
	mi := &file_meshtrade_iam_user_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleToUserRequest) ProtoMessage() {}

func (x *AssignRoleToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_iam_user_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleToUserRequest.ProtoReflect.Descriptor instead.
func (*AssignRoleToUserRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_iam_user_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *AssignRoleToUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AssignRoleToUserRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AssignRoleToUserRequest) GetRole() v1.Role {
	if x != nil {
		return x.Role
	}
	return v1.Role(0)
}

var File_meshtrade_iam_user_v1_service_proto protoreflect.FileDescriptor

const file_meshtrade_iam_user_v1_service_proto_rawDesc = "" +
	"\n" +
	"#meshtrade/iam/user/v1/service.proto\x12\x15meshtrade.iam.user.v1\x1a meshtrade/iam/user/v1/user.proto\x1a%meshtrade/option/v1/method_type.proto\x1a\x1emeshtrade/option/v1/role.proto\"t\n" +
	"\x17AssignRoleToUserRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\x12-\n" +
	"\x04role\x18\x03 \x01(\x0e2\x19.meshtrade.option.v1.RoleR\x04role2{\n" +
	"\vUserService\x12l\n" +
	"\x10AssignRoleToUser\x12..meshtrade.iam.user.v1.AssignRoleToUserRequest\x1a\x1b.meshtrade.iam.user.v1.User\"\v\xa0\xb5\x18\x02\xaa\xb5\x18\x03\n" +
	"\x01\x05B0Z.github.com/meshtrade/api/go/iam/user/v1;userv1b\x06proto3"

var (
	file_meshtrade_iam_user_v1_service_proto_rawDescOnce sync.Once
	file_meshtrade_iam_user_v1_service_proto_rawDescData []byte
)

func file_meshtrade_iam_user_v1_service_proto_rawDescGZIP() []byte {
	file_meshtrade_iam_user_v1_service_proto_rawDescOnce.Do(func() {
		file_meshtrade_iam_user_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_iam_user_v1_service_proto_rawDesc), len(file_meshtrade_iam_user_v1_service_proto_rawDesc)))
	})
	return file_meshtrade_iam_user_v1_service_proto_rawDescData
}

var file_meshtrade_iam_user_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meshtrade_iam_user_v1_service_proto_goTypes = []any{
	(*AssignRoleToUserRequest)(nil), // 0: meshtrade.iam.user.v1.AssignRoleToUserRequest
	(v1.Role)(0),                    // 1: meshtrade.option.v1.Role
	(*User)(nil),                    // 2: meshtrade.iam.user.v1.User
}
var file_meshtrade_iam_user_v1_service_proto_depIdxs = []int32{
	1, // 0: meshtrade.iam.user.v1.AssignRoleToUserRequest.role:type_name -> meshtrade.option.v1.Role
	0, // 1: meshtrade.iam.user.v1.UserService.AssignRoleToUser:input_type -> meshtrade.iam.user.v1.AssignRoleToUserRequest
	2, // 2: meshtrade.iam.user.v1.UserService.AssignRoleToUser:output_type -> meshtrade.iam.user.v1.User
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_meshtrade_iam_user_v1_service_proto_init() }
func file_meshtrade_iam_user_v1_service_proto_init() {
	if File_meshtrade_iam_user_v1_service_proto != nil {
		return
	}
	file_meshtrade_iam_user_v1_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_iam_user_v1_service_proto_rawDesc), len(file_meshtrade_iam_user_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meshtrade_iam_user_v1_service_proto_goTypes,
		DependencyIndexes: file_meshtrade_iam_user_v1_service_proto_depIdxs,
		MessageInfos:      file_meshtrade_iam_user_v1_service_proto_msgTypes,
	}.Build()
	File_meshtrade_iam_user_v1_service_proto = out.File
	file_meshtrade_iam_user_v1_service_proto_goTypes = nil
	file_meshtrade_iam_user_v1_service_proto_depIdxs = nil
}
