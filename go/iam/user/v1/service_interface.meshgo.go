// Code generated by protoc-gen-meshgo. DO NOT EDIT.
// source: meshtrade/iam/user/v1/service.proto
package user_v1

import (
	context "context"
)

// UserService manages user lifecycle and identity operations within groups.
//
// Users are individual identity entities that belong to specific groups and have
// assigned roles that determine their permissions within that group context.
// Each user has a unique email address and can be assigned multiple roles
// across the group hierarchy for fine-grained access control.
//
// All operations require appropriate IAM domain permissions and operate within
// the authenticated group context.
type UserService interface {
	// Assign roles to an existing user within the authenticated group context.
	//
	// The role assignment enables the user to perform operations according
	// to the permissions associated with that role within the group hierarchy.
	AssignRolesToUser(ctx context.Context, request *AssignRolesToUserRequest) (*User, error)

	// Revoke roles from an existing user within the authenticated group context.
	//
	// The role revocation removes the permissions associated with that role from
	// the user within the group hierarchy. The user will no longer be able
	// to perform operations that require the revoked role.
	RevokeRolesFromUser(ctx context.Context, request *RevokeRolesFromUserRequest) (*User, error)

	// Retrieves a single user by its unique identifier.
	//
	// Returns user details including name, email, ownership information,
	// and assigned roles within the authenticated group's access scope.
	GetUser(ctx context.Context, request *GetUserRequest) (*User, error)

	// Returns all users accessible within the authenticated group's hierarchy.
	//
	// Results include users directly owned and those accessible through the
	// group's hierarchical permissions, optionally sorted by email address.
	ListUsers(ctx context.Context, request *ListUsersRequest) (*ListUsersResponse, error)

	// Searches for users by email address using substring matching.
	//
	// Returns users whose email addresses contain the provided search term,
	// filtered by the authenticated group's access permissions and optionally
	// sorted by email address.
	SearchUsers(ctx context.Context, request *SearchUsersRequest) (*SearchUsersResponse, error)

	// Creates a new user within the authenticated group context.
	//
	// The user will be created with the provided email and group ownership,
	// with system-generated unique identifier and ownership hierarchy.
	// Additional roles can be assigned after creation.
	CreateUser(ctx context.Context, request *CreateUserRequest) (*User, error)

	// Updates an existing user with modified field values.
	//
	// Only mutable fields can be updated while preserving system-generated
	// identifiers and ownership relationships. Role modifications should
	// use dedicated role management operations.
	UpdateUser(ctx context.Context, request *UpdateUserRequest) (*User, error)
}

const UserServiceServiceProviderName = "meshtrade-iam-user-v1-UserService"
