// Code generated by protoc-gen-meshgo. DO NOT EDIT.
// source: meshtrade/iam/group/v1/service.proto
package group_v1

import (
	context "context"
	sync "sync"
	testing "testing"
)

// Ensure that MockGroupService implements the GroupService interface
var _ GroupService = &MockGroupService{}

// MockGroupService is a mock implementation of the GroupService interface.
type MockGroupService struct {
	mutex                       sync.Mutex
	T                           *testing.T
	CreateGroupFunc             func(t *testing.T, m *MockGroupService, ctx context.Context, request *CreateGroupRequest) (*Group, error)
	CreateGroupFuncInvocations  int
	UpdateGroupFunc             func(t *testing.T, m *MockGroupService, ctx context.Context, request *UpdateGroupRequest) (*Group, error)
	UpdateGroupFuncInvocations  int
	ListGroupsFunc              func(t *testing.T, m *MockGroupService, ctx context.Context, request *ListGroupsRequest) (*ListGroupsResponse, error)
	ListGroupsFuncInvocations   int
	SearchGroupsFunc            func(t *testing.T, m *MockGroupService, ctx context.Context, request *SearchGroupsRequest) (*SearchGroupsResponse, error)
	SearchGroupsFuncInvocations int
	GetGroupFunc                func(t *testing.T, m *MockGroupService, ctx context.Context, request *GetGroupRequest) (*Group, error)
	GetGroupFuncInvocations     int
}

func (m *MockGroupService) CreateGroup(ctx context.Context, request *CreateGroupRequest) (*Group, error) {
	m.mutex.Lock()
	m.CreateGroupFuncInvocations++
	m.mutex.Unlock()
	if m.CreateGroupFunc == nil {
		return nil, nil
	}
	return m.CreateGroupFunc(m.T, m, ctx, request)
}

func (m *MockGroupService) UpdateGroup(ctx context.Context, request *UpdateGroupRequest) (*Group, error) {
	m.mutex.Lock()
	m.UpdateGroupFuncInvocations++
	m.mutex.Unlock()
	if m.UpdateGroupFunc == nil {
		return nil, nil
	}
	return m.UpdateGroupFunc(m.T, m, ctx, request)
}

func (m *MockGroupService) ListGroups(ctx context.Context, request *ListGroupsRequest) (*ListGroupsResponse, error) {
	m.mutex.Lock()
	m.ListGroupsFuncInvocations++
	m.mutex.Unlock()
	if m.ListGroupsFunc == nil {
		return nil, nil
	}
	return m.ListGroupsFunc(m.T, m, ctx, request)
}

func (m *MockGroupService) SearchGroups(ctx context.Context, request *SearchGroupsRequest) (*SearchGroupsResponse, error) {
	m.mutex.Lock()
	m.SearchGroupsFuncInvocations++
	m.mutex.Unlock()
	if m.SearchGroupsFunc == nil {
		return nil, nil
	}
	return m.SearchGroupsFunc(m.T, m, ctx, request)
}

func (m *MockGroupService) GetGroup(ctx context.Context, request *GetGroupRequest) (*Group, error) {
	m.mutex.Lock()
	m.GetGroupFuncInvocations++
	m.mutex.Unlock()
	if m.GetGroupFunc == nil {
		return nil, nil
	}
	return m.GetGroupFunc(m.T, m, ctx, request)
}
