// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/iam/group/v1/group.proto

package groupv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a group in the IAM system.
//
// Groups are fundamental organizational units that own resources and define
// permission boundaries. Each group has a hierarchical ownership structure
// and can contain users, API users, and other resources.
type Group struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique, immutable, and canonical name of the group resource in the format groups/{group_id}.
	// The {group_id} is a system-generated unique identifier (ULID) that will never change.
	// System set on creation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The resource name of the parent group that owns this group in the format groups/{ulid}.
	// This field establishes the ownership hierarchy.
	// Required on creation.
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	// A non-unique, user-provided name for the group, used for display purposes.
	// Required on creation and can be updated.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional description providing additional context about the group's purpose.
	// Can be updated.
	Description   string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_meshtrade_iam_group_v1_group_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_iam_group_v1_group_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_meshtrade_iam_group_v1_group_proto_rawDescGZIP(), []int{0}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Group) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_meshtrade_iam_group_v1_group_proto protoreflect.FileDescriptor

const file_meshtrade_iam_group_v1_group_proto_rawDesc = "" +
	"\n" +
	"\"meshtrade/iam/group/v1/group.proto\x12\x16meshtrade.iam.group.v1\x1a\x1bbuf/validate/validate.proto\"\x86\x05\n" +
	"\x05Group\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\xab\x02\n" +
	"\x05owner\x18\x02 \x01(\tB\x94\x02\xbaH\x90\x02\xba\x01W\n" +
	"\x0eowner.required\x125owner is required and must be in format groups/{ulid}\x1a\x0esize(this) > 0\xba\x01\x97\x01\n" +
	"\fowner.format\x12`owner must be in format groups/{ulid} where ulid is exactly 26 uppercase alphanumeric characters\x1a%this.matches('^groups/[0-9A-Z]{26}$')r\x19\x10\x012\x15^groups/[0-9A-Z]{26}$R\x05owner\x12\xb1\x01\n" +
	"\fdisplay_name\x18\x03 \x01(\tB\x8d\x01\xbaH\x89\x01\xba\x01\x7f\n" +
	"\x15display_name.required\x12Adisplay name is required and must be between 1 and 255 characters\x1a#size(this) > 0 && size(this) <= 255r\x05\x10\x01\x18\xff\x01R\vdisplayName\x12\x86\x01\n" +
	"\vdescription\x18\x04 \x01(\tBd\xbaHa\xba\x01Y\n" +
	"\x16description.max_length\x12+description must not exceed 1000 characters\x1a\x12size(this) <= 1000r\x03\x18\xe8\aR\vdescriptionBQ\n" +
	"\x1dco.meshtrade.api.iam.group.v1Z0github.com/meshtrade/api/go/iam/group/v1;groupv1b\x06proto3"

var (
	file_meshtrade_iam_group_v1_group_proto_rawDescOnce sync.Once
	file_meshtrade_iam_group_v1_group_proto_rawDescData []byte
)

func file_meshtrade_iam_group_v1_group_proto_rawDescGZIP() []byte {
	file_meshtrade_iam_group_v1_group_proto_rawDescOnce.Do(func() {
		file_meshtrade_iam_group_v1_group_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_iam_group_v1_group_proto_rawDesc), len(file_meshtrade_iam_group_v1_group_proto_rawDesc)))
	})
	return file_meshtrade_iam_group_v1_group_proto_rawDescData
}

var file_meshtrade_iam_group_v1_group_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meshtrade_iam_group_v1_group_proto_goTypes = []any{
	(*Group)(nil), // 0: meshtrade.iam.group.v1.Group
}
var file_meshtrade_iam_group_v1_group_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meshtrade_iam_group_v1_group_proto_init() }
func file_meshtrade_iam_group_v1_group_proto_init() {
	if File_meshtrade_iam_group_v1_group_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_iam_group_v1_group_proto_rawDesc), len(file_meshtrade_iam_group_v1_group_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meshtrade_iam_group_v1_group_proto_goTypes,
		DependencyIndexes: file_meshtrade_iam_group_v1_group_proto_depIdxs,
		MessageInfos:      file_meshtrade_iam_group_v1_group_proto_msgTypes,
	}.Build()
	File_meshtrade_iam_group_v1_group_proto = out.File
	file_meshtrade_iam_group_v1_group_proto_goTypes = nil
	file_meshtrade_iam_group_v1_group_proto_depIdxs = nil
}
