// Code generated by protoc-gen-meshgo. DO NOT EDIT.
// source: meshtrade/iam/internal_auth/v1/internal_authorization_service.proto
package v1

import (
	context "context"
	sync "sync"
	testing "testing"
)

// Ensure that MockInternalAuthorizationService implements the InternalAuthorizationService interface
var _ InternalAuthorizationService = &MockInternalAuthorizationService{}

// MockInternalAuthorizationService is a mock implementation of the InternalAuthorizationService interface.
type MockInternalAuthorizationService struct {
	mutex                             sync.Mutex
	T                                 *testing.T
	CheckAuthorizationFunc            func(t *testing.T, m *MockInternalAuthorizationService, ctx context.Context, request *CheckAuthorizationRequest) (*CheckAuthorizationResponse, error)
	CheckAuthorizationFuncInvocations int
	HealthCheckFunc                   func(t *testing.T, m *MockInternalAuthorizationService, ctx context.Context, request *HealthCheckRequest) (*HealthCheckResponse, error)
	HealthCheckFuncInvocations        int
}

func (m *MockInternalAuthorizationService) CheckAuthorization(ctx context.Context, request *CheckAuthorizationRequest) (*CheckAuthorizationResponse, error) {
	m.mutex.Lock()
	m.CheckAuthorizationFuncInvocations++
	m.mutex.Unlock()
	if m.CheckAuthorizationFunc == nil {
		return nil, nil
	}
	return m.CheckAuthorizationFunc(m.T, m, ctx, request)
}

func (m *MockInternalAuthorizationService) HealthCheck(ctx context.Context, request *HealthCheckRequest) (*HealthCheckResponse, error) {
	m.mutex.Lock()
	m.HealthCheckFuncInvocations++
	m.mutex.Unlock()
	if m.HealthCheckFunc == nil {
		return nil, nil
	}
	return m.HealthCheckFunc(m.T, m, ctx, request)
}
