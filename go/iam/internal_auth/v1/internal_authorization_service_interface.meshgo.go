// Code generated by protoc-gen-meshgo. DO NOT EDIT.
// source: meshtrade/iam/internal_auth/v1/internal_authorization_service.proto
package v1

import (
	context "context"
)

// InternalAuthorizationService provides authorization services for internal communication
// between microservices within the mesh. This service receives authorization requests
// from the api-gateway-sidecar and delegates to the main authoriser app's business logic.
//
// This protocol is designed specifically for internal service-to-service communication
// and should not be exposed to external clients.
type InternalAuthorizationService interface {
	// CheckAuthorization performs authorization checks for internal service requests.
	// This method receives authorization requests from the sidecar and returns
	// authorization decisions from the main authoriser application's business logic.
	CheckAuthorization(ctx context.Context, request *CheckAuthorizationRequest) (*CheckAuthorizationResponse, error)

	// HealthCheck provides health checking for the internal authorization service.
	// This allows the sidecar to verify connectivity and readiness of the main
	// authoriser application.
	HealthCheck(ctx context.Context, request *HealthCheckRequest) (*HealthCheckResponse, error)
}

const InternalAuthorizationServiceServiceProviderName = "meshtrade-iam-internal_auth-v1-InternalAuthorizationService"
