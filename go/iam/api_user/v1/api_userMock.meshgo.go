// Code generated by protoc-gen-meshgo. DO NOT EDIT.
// source: meshtrade/iam/api_user/v1/api_user.proto
package api_userv1

import (
	context "context"
	sync "sync"
	testing "testing"
)

// Ensure that MockAPIUserService implements the APIUserService interface
var _ APIUserService = &MockAPIUserService{}

// MockAPIUserService is a mock implementation of the APIUserService interface.
type MockAPIUserService struct {
	mutex                              sync.Mutex
	T                                  *testing.T
	GetAPIUserFunc                     func(t *testing.T, m *MockAPIUserService, ctx context.Context, request *GetAPIUserRequest) (*APIUser, error)
	GetAPIUserFuncInvocations          int
	GetAPIUserByKeyHashFunc            func(t *testing.T, m *MockAPIUserService, ctx context.Context, request *GetAPIUserByKeyHashRequest) (*APIUser, error)
	GetAPIUserByKeyHashFuncInvocations int
}

func (m *MockAPIUserService) GetAPIUser(ctx context.Context, request *GetAPIUserRequest) (*APIUser, error) {
	m.mutex.Lock()
	m.GetAPIUserFuncInvocations++
	m.mutex.Unlock()
	if m.GetAPIUserFunc == nil {
		return nil, nil
	}
	return m.GetAPIUserFunc(m.T, m, ctx, request)
}

func (m *MockAPIUserService) GetAPIUserByKeyHash(ctx context.Context, request *GetAPIUserByKeyHashRequest) (*APIUser, error) {
	m.mutex.Lock()
	m.GetAPIUserByKeyHashFuncInvocations++
	m.mutex.Unlock()
	if m.GetAPIUserByKeyHashFunc == nil {
		return nil, nil
	}
	return m.GetAPIUserByKeyHashFunc(m.T, m, ctx, request)
}
