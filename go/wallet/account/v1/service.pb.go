// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: meshtrade/wallet/account/v1/service.proto

package account_v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/meshtrade/api/go/iam/role/v1"
	_ "github.com/meshtrade/api/go/option/v1"
	v1 "github.com/meshtrade/api/go/type/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to create a new account.
type CreateAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The account configuration for creation.
	// The name, number, ledger_id, and owners fields will be ignored and assigned by the system.
	Account       *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAccountRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

// Request to update an existing account.
type UpdateAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Complete account resource with updated fields.
	// Only display_name can be modified.
	Account       *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccountRequest) Reset() {
	*x = UpdateAccountRequest{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRequest) ProtoMessage() {}

func (x *UpdateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateAccountRequest) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

// Request to open an account on the blockchain.
type OpenAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the account to open.
	// Format: accounts/{ULIDv2}.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenAccountRequest) Reset() {
	*x = OpenAccountRequest{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAccountRequest) ProtoMessage() {}

func (x *OpenAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAccountRequest.ProtoReflect.Descriptor instead.
func (*OpenAccountRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *OpenAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response containing the opened account and transaction details.
type OpenAccountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The account after successful opening on the blockchain.
	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Transaction reference for monitoring the blockchain operation.
	// Format: transactions/{ULIDv2}.
	LedgerTransaction string `protobuf:"bytes,3,opt,name=ledger_transaction,json=ledgerTransaction,proto3" json:"ledger_transaction,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *OpenAccountResponse) Reset() {
	*x = OpenAccountResponse{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAccountResponse) ProtoMessage() {}

func (x *OpenAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAccountResponse.ProtoReflect.Descriptor instead.
func (*OpenAccountResponse) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *OpenAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *OpenAccountResponse) GetLedgerTransaction() string {
	if x != nil {
		return x.LedgerTransaction
	}
	return ""
}

// Request to retrieve a specific account.
type GetAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the account to retrieve.
	// Format: accounts/{ULIDv2}.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// When true, fetches current balances and state from the blockchain.
	// When false, returns only stored metadata without live data.
	PopulateLedgerData bool `protobuf:"varint,2,opt,name=populate_ledger_data,json=populateLedgerData,proto3" json:"populate_ledger_data,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAccountRequest) GetPopulateLedgerData() bool {
	if x != nil {
		return x.PopulateLedgerData
	}
	return false
}

// Request to retrieve an account by its account number.
type GetAccountByNumberRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Account Number.
	// Must be a 7-digit number starting with '1'.
	AccountNumber string `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	// When true, fetches current balances and state from the blockchain.
	// When false, returns only stored metadata without live data.
	PopulateLedgerData bool `protobuf:"varint,2,opt,name=populate_ledger_data,json=populateLedgerData,proto3" json:"populate_ledger_data,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetAccountByNumberRequest) Reset() {
	*x = GetAccountByNumberRequest{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountByNumberRequest) ProtoMessage() {}

func (x *GetAccountByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountByNumberRequest.ProtoReflect.Descriptor instead.
func (*GetAccountByNumberRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountByNumberRequest) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *GetAccountByNumberRequest) GetPopulateLedgerData() bool {
	if x != nil {
		return x.PopulateLedgerData
	}
	return false
}

// Request to list all accounts in the hierarchy.
type ListAccountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional sorting configuration.
	Sorting *ListAccountsRequest_Sorting `protobuf:"bytes,1,opt,name=sorting,proto3" json:"sorting,omitempty"`
	// When true, fetches current balances and state from the blockchain.
	// When false, returns only stored metadata without live data.
	PopulateLedgerData bool `protobuf:"varint,2,opt,name=populate_ledger_data,json=populateLedgerData,proto3" json:"populate_ledger_data,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListAccountsRequest) Reset() {
	*x = ListAccountsRequest{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest) ProtoMessage() {}

func (x *ListAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListAccountsRequest) GetSorting() *ListAccountsRequest_Sorting {
	if x != nil {
		return x.Sorting
	}
	return nil
}

func (x *ListAccountsRequest) GetPopulateLedgerData() bool {
	if x != nil {
		return x.PopulateLedgerData
	}
	return false
}

// Response containing a list of accounts.
type ListAccountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection of accounts in the hierarchy.
	Accounts      []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsResponse) Reset() {
	*x = ListAccountsResponse{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsResponse) ProtoMessage() {}

func (x *ListAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListAccountsResponse) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListAccountsResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// Request to search accounts with filtering criteria.
type SearchAccountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional sorting configuration.
	Sorting *SearchAccountsRequest_Sorting `protobuf:"bytes,1,opt,name=sorting,proto3" json:"sorting,omitempty"`
	// Optional substring to search for in account display names.
	// Case-insensitive partial matching.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// When true, fetches current balances and state from the blockchain.
	// When false, returns only stored metadata without live data.
	PopulateLedgerData bool `protobuf:"varint,3,opt,name=populate_ledger_data,json=populateLedgerData,proto3" json:"populate_ledger_data,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SearchAccountsRequest) Reset() {
	*x = SearchAccountsRequest{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAccountsRequest) ProtoMessage() {}

func (x *SearchAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAccountsRequest.ProtoReflect.Descriptor instead.
func (*SearchAccountsRequest) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *SearchAccountsRequest) GetSorting() *SearchAccountsRequest_Sorting {
	if x != nil {
		return x.Sorting
	}
	return nil
}

func (x *SearchAccountsRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *SearchAccountsRequest) GetPopulateLedgerData() bool {
	if x != nil {
		return x.PopulateLedgerData
	}
	return false
}

// Response containing search results.
type SearchAccountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection of accounts matching the search criteria.
	Accounts      []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchAccountsResponse) Reset() {
	*x = SearchAccountsResponse{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAccountsResponse) ProtoMessage() {}

func (x *SearchAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAccountsResponse.ProtoReflect.Descriptor instead.
func (*SearchAccountsResponse) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *SearchAccountsResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// Sorting configuration for organizing results.
type ListAccountsRequest_Sorting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field to sort by.
	// Supported values: "number" or empty string for default ordering.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Sort order for results.
	Order         v1.SortingOrder `protobuf:"varint,2,opt,name=order,proto3,enum=meshtrade.type.v1.SortingOrder" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsRequest_Sorting) Reset() {
	*x = ListAccountsRequest_Sorting{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsRequest_Sorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest_Sorting) ProtoMessage() {}

func (x *ListAccountsRequest_Sorting) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest_Sorting.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest_Sorting) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListAccountsRequest_Sorting) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ListAccountsRequest_Sorting) GetOrder() v1.SortingOrder {
	if x != nil {
		return x.Order
	}
	return v1.SortingOrder(0)
}

// Sorting configuration for organizing results.
type SearchAccountsRequest_Sorting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field to sort by.
	// Supported values: "number" or empty string for default ordering.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Sort order for results.
	Order         v1.SortingOrder `protobuf:"varint,2,opt,name=order,proto3,enum=meshtrade.type.v1.SortingOrder" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchAccountsRequest_Sorting) Reset() {
	*x = SearchAccountsRequest_Sorting{}
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAccountsRequest_Sorting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAccountsRequest_Sorting) ProtoMessage() {}

func (x *SearchAccountsRequest_Sorting) ProtoReflect() protoreflect.Message {
	mi := &file_meshtrade_wallet_account_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAccountsRequest_Sorting.ProtoReflect.Descriptor instead.
func (*SearchAccountsRequest_Sorting) Descriptor() ([]byte, []int) {
	return file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SearchAccountsRequest_Sorting) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchAccountsRequest_Sorting) GetOrder() v1.SortingOrder {
	if x != nil {
		return x.Order
	}
	return v1.SortingOrder(0)
}

var File_meshtrade_wallet_account_v1_service_proto protoreflect.FileDescriptor

const file_meshtrade_wallet_account_v1_service_proto_rawDesc = "" +
	"\n" +
	")meshtrade/wallet/account/v1/service.proto\x12\x1bmeshtrade.wallet.account.v1\x1a\x1bbuf/validate/validate.proto\x1a meshtrade/iam/role/v1/role.proto\x1a%meshtrade/option/v1/method_type.proto\x1a\x1fmeshtrade/type/v1/sorting.proto\x1a)meshtrade/wallet/account/v1/account.proto\"^\n" +
	"\x14CreateAccountRequest\x12F\n" +
	"\aaccount\x18\x01 \x01(\v2$.meshtrade.wallet.account.v1.AccountB\x06\xbaH\x03\xc8\x01\x01R\aaccount\"^\n" +
	"\x14UpdateAccountRequest\x12F\n" +
	"\aaccount\x18\x01 \x01(\v2$.meshtrade.wallet.account.v1.AccountB\x06\xbaH\x03\xc8\x01\x01R\aaccount\"e\n" +
	"\x12OpenAccountRequest\x12O\n" +
	"\x04name\x18\x01 \x01(\tB;\xbaH8r621^accounts/[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$\x98\x01#R\x04name\"\x84\x01\n" +
	"\x13OpenAccountResponse\x12>\n" +
	"\aaccount\x18\x01 \x01(\v2$.meshtrade.wallet.account.v1.AccountR\aaccount\x12-\n" +
	"\x12ledger_transaction\x18\x03 \x01(\tR\x11ledgerTransaction\"\x96\x01\n" +
	"\x11GetAccountRequest\x12O\n" +
	"\x04name\x18\x01 \x01(\tB;\xbaH8r621^accounts/[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$\x98\x01#R\x04name\x120\n" +
	"\x14populate_ledger_data\x18\x02 \x01(\bR\x12populateLedgerData\"\x88\x01\n" +
	"\x19GetAccountByNumberRequest\x129\n" +
	"\x0eaccount_number\x18\x01 \x01(\tB\x12\xbaH\x0fr\r2\v^1[0-9]{6}$R\raccountNumber\x120\n" +
	"\x14populate_ledger_data\x18\x02 \x01(\bR\x12populateLedgerData\"\xd5\x02\n" +
	"\x13ListAccountsRequest\x12R\n" +
	"\asorting\x18\x01 \x01(\v28.meshtrade.wallet.account.v1.ListAccountsRequest.SortingR\asorting\x120\n" +
	"\x14populate_ledger_data\x18\x02 \x01(\bR\x12populateLedgerData\x1a\xb7\x01\n" +
	"\aSorting\x12u\n" +
	"\x05field\x18\x01 \x01(\tB_\xbaH\\\xba\x01M\n" +
	"\vfield.valid\x12&field must be one of: number, or empty\x1a\x16this in ['', 'number']r\n" +
	"R\x00R\x06numberR\x05field\x125\n" +
	"\x05order\x18\x02 \x01(\x0e2\x1f.meshtrade.type.v1.SortingOrderR\x05order\"X\n" +
	"\x14ListAccountsResponse\x12@\n" +
	"\baccounts\x18\x01 \x03(\v2$.meshtrade.wallet.account.v1.AccountR\baccounts\"\xef\x03\n" +
	"\x15SearchAccountsRequest\x12T\n" +
	"\asorting\x18\x01 \x01(\v2:.meshtrade.wallet.account.v1.SearchAccountsRequest.SortingR\asorting\x12\x93\x01\n" +
	"\fdisplay_name\x18\x02 \x01(\tBp\xbaHm\xba\x01e\n" +
	"\x17display_name.max_length\x127display_name search term must not exceed 255 characters\x1a\x11size(this) <= 255r\x03\x18\xff\x01R\vdisplayName\x120\n" +
	"\x14populate_ledger_data\x18\x03 \x01(\bR\x12populateLedgerData\x1a\xb7\x01\n" +
	"\aSorting\x12u\n" +
	"\x05field\x18\x01 \x01(\tB_\xbaH\\\xba\x01M\n" +
	"\vfield.valid\x12&field must be one of: number, or empty\x1a\x16this in ['', 'number']r\n" +
	"R\x00R\x06numberR\x05field\x125\n" +
	"\x05order\x18\x02 \x01(\x0e2\x1f.meshtrade.type.v1.SortingOrderR\x05order\"Z\n" +
	"\x16SearchAccountsResponse\x12@\n" +
	"\baccounts\x18\x01 \x03(\v2$.meshtrade.wallet.account.v1.AccountR\baccounts2\xb8\a\n" +
	"\x0eAccountService\x12z\n" +
	"\rCreateAccount\x121.meshtrade.wallet.account.v1.CreateAccountRequest\x1a$.meshtrade.wallet.account.v1.Account\"\x10\xa0\xb5\x18\x02\xaa\xb5\x18\b\n" +
	"\x06\xc0\x84=\u0084=\x12z\n" +
	"\rUpdateAccount\x121.meshtrade.wallet.account.v1.UpdateAccountRequest\x1a$.meshtrade.wallet.account.v1.Account\"\x10\xa0\xb5\x18\x02\xaa\xb5\x18\b\n" +
	"\x06\xc0\x84=\u0084=\x12\x82\x01\n" +
	"\vOpenAccount\x12/.meshtrade.wallet.account.v1.OpenAccountRequest\x1a0.meshtrade.wallet.account.v1.OpenAccountResponse\"\x10\xa0\xb5\x18\x02\xaa\xb5\x18\b\n" +
	"\x06\xc0\x84=\u0084=\x12z\n" +
	"\n" +
	"GetAccount\x12..meshtrade.wallet.account.v1.GetAccountRequest\x1a$.meshtrade.wallet.account.v1.Account\"\x16\xa0\xb5\x18\x01\xaa\xb5\x18\x0e\n" +
	"\f\xc0\x84=\xc1\x84=\u0084=Ä=\x12\x8a\x01\n" +
	"\x12GetAccountByNumber\x126.meshtrade.wallet.account.v1.GetAccountByNumberRequest\x1a$.meshtrade.wallet.account.v1.Account\"\x16\xa0\xb5\x18\x01\xaa\xb5\x18\x0e\n" +
	"\f\xc0\x84=\xc1\x84=\u0084=Ä=\x12\x8b\x01\n" +
	"\fListAccounts\x120.meshtrade.wallet.account.v1.ListAccountsRequest\x1a1.meshtrade.wallet.account.v1.ListAccountsResponse\"\x16\xa0\xb5\x18\x01\xaa\xb5\x18\x0e\n" +
	"\f\xc0\x84=\xc1\x84=\u0084=Ä=\x12\x91\x01\n" +
	"\x0eSearchAccounts\x122.meshtrade.wallet.account.v1.SearchAccountsRequest\x1a3.meshtrade.wallet.account.v1.SearchAccountsResponse\"\x16\xa0\xb5\x18\x01\xaa\xb5\x18\x0e\n" +
	"\f\xc0\x84=\xc1\x84=\u0084=Ä=B^\n" +
	"\"co.meshtrade.api.wallet.account.v1Z8github.com/meshtrade/api/go/wallet/account/v1;account_v1b\x06proto3"

var (
	file_meshtrade_wallet_account_v1_service_proto_rawDescOnce sync.Once
	file_meshtrade_wallet_account_v1_service_proto_rawDescData []byte
)

func file_meshtrade_wallet_account_v1_service_proto_rawDescGZIP() []byte {
	file_meshtrade_wallet_account_v1_service_proto_rawDescOnce.Do(func() {
		file_meshtrade_wallet_account_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meshtrade_wallet_account_v1_service_proto_rawDesc), len(file_meshtrade_wallet_account_v1_service_proto_rawDesc)))
	})
	return file_meshtrade_wallet_account_v1_service_proto_rawDescData
}

var file_meshtrade_wallet_account_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_meshtrade_wallet_account_v1_service_proto_goTypes = []any{
	(*CreateAccountRequest)(nil),          // 0: meshtrade.wallet.account.v1.CreateAccountRequest
	(*UpdateAccountRequest)(nil),          // 1: meshtrade.wallet.account.v1.UpdateAccountRequest
	(*OpenAccountRequest)(nil),            // 2: meshtrade.wallet.account.v1.OpenAccountRequest
	(*OpenAccountResponse)(nil),           // 3: meshtrade.wallet.account.v1.OpenAccountResponse
	(*GetAccountRequest)(nil),             // 4: meshtrade.wallet.account.v1.GetAccountRequest
	(*GetAccountByNumberRequest)(nil),     // 5: meshtrade.wallet.account.v1.GetAccountByNumberRequest
	(*ListAccountsRequest)(nil),           // 6: meshtrade.wallet.account.v1.ListAccountsRequest
	(*ListAccountsResponse)(nil),          // 7: meshtrade.wallet.account.v1.ListAccountsResponse
	(*SearchAccountsRequest)(nil),         // 8: meshtrade.wallet.account.v1.SearchAccountsRequest
	(*SearchAccountsResponse)(nil),        // 9: meshtrade.wallet.account.v1.SearchAccountsResponse
	(*ListAccountsRequest_Sorting)(nil),   // 10: meshtrade.wallet.account.v1.ListAccountsRequest.Sorting
	(*SearchAccountsRequest_Sorting)(nil), // 11: meshtrade.wallet.account.v1.SearchAccountsRequest.Sorting
	(*Account)(nil),                       // 12: meshtrade.wallet.account.v1.Account
	(v1.SortingOrder)(0),                  // 13: meshtrade.type.v1.SortingOrder
}
var file_meshtrade_wallet_account_v1_service_proto_depIdxs = []int32{
	12, // 0: meshtrade.wallet.account.v1.CreateAccountRequest.account:type_name -> meshtrade.wallet.account.v1.Account
	12, // 1: meshtrade.wallet.account.v1.UpdateAccountRequest.account:type_name -> meshtrade.wallet.account.v1.Account
	12, // 2: meshtrade.wallet.account.v1.OpenAccountResponse.account:type_name -> meshtrade.wallet.account.v1.Account
	10, // 3: meshtrade.wallet.account.v1.ListAccountsRequest.sorting:type_name -> meshtrade.wallet.account.v1.ListAccountsRequest.Sorting
	12, // 4: meshtrade.wallet.account.v1.ListAccountsResponse.accounts:type_name -> meshtrade.wallet.account.v1.Account
	11, // 5: meshtrade.wallet.account.v1.SearchAccountsRequest.sorting:type_name -> meshtrade.wallet.account.v1.SearchAccountsRequest.Sorting
	12, // 6: meshtrade.wallet.account.v1.SearchAccountsResponse.accounts:type_name -> meshtrade.wallet.account.v1.Account
	13, // 7: meshtrade.wallet.account.v1.ListAccountsRequest.Sorting.order:type_name -> meshtrade.type.v1.SortingOrder
	13, // 8: meshtrade.wallet.account.v1.SearchAccountsRequest.Sorting.order:type_name -> meshtrade.type.v1.SortingOrder
	0,  // 9: meshtrade.wallet.account.v1.AccountService.CreateAccount:input_type -> meshtrade.wallet.account.v1.CreateAccountRequest
	1,  // 10: meshtrade.wallet.account.v1.AccountService.UpdateAccount:input_type -> meshtrade.wallet.account.v1.UpdateAccountRequest
	2,  // 11: meshtrade.wallet.account.v1.AccountService.OpenAccount:input_type -> meshtrade.wallet.account.v1.OpenAccountRequest
	4,  // 12: meshtrade.wallet.account.v1.AccountService.GetAccount:input_type -> meshtrade.wallet.account.v1.GetAccountRequest
	5,  // 13: meshtrade.wallet.account.v1.AccountService.GetAccountByNumber:input_type -> meshtrade.wallet.account.v1.GetAccountByNumberRequest
	6,  // 14: meshtrade.wallet.account.v1.AccountService.ListAccounts:input_type -> meshtrade.wallet.account.v1.ListAccountsRequest
	8,  // 15: meshtrade.wallet.account.v1.AccountService.SearchAccounts:input_type -> meshtrade.wallet.account.v1.SearchAccountsRequest
	12, // 16: meshtrade.wallet.account.v1.AccountService.CreateAccount:output_type -> meshtrade.wallet.account.v1.Account
	12, // 17: meshtrade.wallet.account.v1.AccountService.UpdateAccount:output_type -> meshtrade.wallet.account.v1.Account
	3,  // 18: meshtrade.wallet.account.v1.AccountService.OpenAccount:output_type -> meshtrade.wallet.account.v1.OpenAccountResponse
	12, // 19: meshtrade.wallet.account.v1.AccountService.GetAccount:output_type -> meshtrade.wallet.account.v1.Account
	12, // 20: meshtrade.wallet.account.v1.AccountService.GetAccountByNumber:output_type -> meshtrade.wallet.account.v1.Account
	7,  // 21: meshtrade.wallet.account.v1.AccountService.ListAccounts:output_type -> meshtrade.wallet.account.v1.ListAccountsResponse
	9,  // 22: meshtrade.wallet.account.v1.AccountService.SearchAccounts:output_type -> meshtrade.wallet.account.v1.SearchAccountsResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_meshtrade_wallet_account_v1_service_proto_init() }
func file_meshtrade_wallet_account_v1_service_proto_init() {
	if File_meshtrade_wallet_account_v1_service_proto != nil {
		return
	}
	file_meshtrade_wallet_account_v1_account_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meshtrade_wallet_account_v1_service_proto_rawDesc), len(file_meshtrade_wallet_account_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meshtrade_wallet_account_v1_service_proto_goTypes,
		DependencyIndexes: file_meshtrade_wallet_account_v1_service_proto_depIdxs,
		MessageInfos:      file_meshtrade_wallet_account_v1_service_proto_msgTypes,
	}.Build()
	File_meshtrade_wallet_account_v1_service_proto = out.File
	file_meshtrade_wallet_account_v1_service_proto_goTypes = nil
	file_meshtrade_wallet_account_v1_service_proto_depIdxs = nil
}
