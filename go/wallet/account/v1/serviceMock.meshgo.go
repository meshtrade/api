// Code generated by protoc-gen-meshgo. DO NOT EDIT.
// source: meshtrade/wallet/account/v1/service.proto
package account_v1

import (
	context "context"
	sync "sync"
	testing "testing"
)

// Ensure that MockAccountService implements the AccountService interface
var _ AccountService = &MockAccountService{}

// MockAccountService is a mock implementation of the AccountService interface.
type MockAccountService struct {
	mutex                         sync.Mutex
	T                             *testing.T
	CreateAccountFunc             func(t *testing.T, m *MockAccountService, ctx context.Context, request *CreateAccountRequest) (*Account, error)
	CreateAccountFuncInvocations  int
	GetAccountFunc                func(t *testing.T, m *MockAccountService, ctx context.Context, request *GetAccountRequest) (*Account, error)
	GetAccountFuncInvocations     int
	ListAccountsFunc              func(t *testing.T, m *MockAccountService, ctx context.Context, request *ListAccountsRequest) (*ListAccountsResponse, error)
	ListAccountsFuncInvocations   int
	SearchAccountsFunc            func(t *testing.T, m *MockAccountService, ctx context.Context, request *SearchAccountsRequest) (*SearchAccountsResponse, error)
	SearchAccountsFuncInvocations int
}

func (m *MockAccountService) CreateAccount(ctx context.Context, request *CreateAccountRequest) (*Account, error) {
	m.mutex.Lock()
	m.CreateAccountFuncInvocations++
	m.mutex.Unlock()
	if m.CreateAccountFunc == nil {
		return nil, nil
	}
	return m.CreateAccountFunc(m.T, m, ctx, request)
}

func (m *MockAccountService) GetAccount(ctx context.Context, request *GetAccountRequest) (*Account, error) {
	m.mutex.Lock()
	m.GetAccountFuncInvocations++
	m.mutex.Unlock()
	if m.GetAccountFunc == nil {
		return nil, nil
	}
	return m.GetAccountFunc(m.T, m, ctx, request)
}

func (m *MockAccountService) ListAccounts(ctx context.Context, request *ListAccountsRequest) (*ListAccountsResponse, error) {
	m.mutex.Lock()
	m.ListAccountsFuncInvocations++
	m.mutex.Unlock()
	if m.ListAccountsFunc == nil {
		return nil, nil
	}
	return m.ListAccountsFunc(m.T, m, ctx, request)
}

func (m *MockAccountService) SearchAccounts(ctx context.Context, request *SearchAccountsRequest) (*SearchAccountsResponse, error) {
	m.mutex.Lock()
	m.SearchAccountsFuncInvocations++
	m.mutex.Unlock()
	if m.SearchAccountsFunc == nil {
		return nil, nil
	}
	return m.SearchAccountsFunc(m.T, m, ctx, request)
}
