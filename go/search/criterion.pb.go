// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: search/criterion.proto

package search

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Criterion is a placeholder for generic search criterion
type Criterion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Criterion:
	//
	//	*Criterion_OrCriterion
	//	*Criterion_BoolExactCriterion
	//	*Criterion_TextExactCriterion
	//	*Criterion_TextNEExactCriterion
	//	*Criterion_TextSubstringCriterion
	//	*Criterion_TextListCriterion
	//	*Criterion_TextNINListCriterion
	//	*Criterion_Uint32ExactCriterion
	//	*Criterion_Uint32NEExactCriterion
	//	*Criterion_Uint32ListCriterion
	//	*Criterion_Uint32RangeCriterion
	//	*Criterion_Uint32NINListCriterion
	//	*Criterion_DateRangeCriterion
	//	*Criterion_Int64ExactCriterion
	Criterion     isCriterion_Criterion `protobuf_oneof:"criterion"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Criterion) Reset() {
	*x = Criterion{}
	mi := &file_search_criterion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Criterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Criterion) ProtoMessage() {}

func (x *Criterion) ProtoReflect() protoreflect.Message {
	mi := &file_search_criterion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Criterion.ProtoReflect.Descriptor instead.
func (*Criterion) Descriptor() ([]byte, []int) {
	return file_search_criterion_proto_rawDescGZIP(), []int{0}
}

func (x *Criterion) GetCriterion() isCriterion_Criterion {
	if x != nil {
		return x.Criterion
	}
	return nil
}

func (x *Criterion) GetOrCriterion() *ORCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_OrCriterion); ok {
			return x.OrCriterion
		}
	}
	return nil
}

func (x *Criterion) GetBoolExactCriterion() *BoolExactCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_BoolExactCriterion); ok {
			return x.BoolExactCriterion
		}
	}
	return nil
}

func (x *Criterion) GetTextExactCriterion() *TextExactCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_TextExactCriterion); ok {
			return x.TextExactCriterion
		}
	}
	return nil
}

func (x *Criterion) GetTextNEExactCriterion() *TextNEExactCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_TextNEExactCriterion); ok {
			return x.TextNEExactCriterion
		}
	}
	return nil
}

func (x *Criterion) GetTextSubstringCriterion() *TextSubstringCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_TextSubstringCriterion); ok {
			return x.TextSubstringCriterion
		}
	}
	return nil
}

func (x *Criterion) GetTextListCriterion() *TextListCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_TextListCriterion); ok {
			return x.TextListCriterion
		}
	}
	return nil
}

func (x *Criterion) GetTextNINListCriterion() *TextNINListCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_TextNINListCriterion); ok {
			return x.TextNINListCriterion
		}
	}
	return nil
}

func (x *Criterion) GetUint32ExactCriterion() *Uint32ExactCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_Uint32ExactCriterion); ok {
			return x.Uint32ExactCriterion
		}
	}
	return nil
}

func (x *Criterion) GetUint32NEExactCriterion() *Uint32NEExactCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_Uint32NEExactCriterion); ok {
			return x.Uint32NEExactCriterion
		}
	}
	return nil
}

func (x *Criterion) GetUint32ListCriterion() *Uint32ListCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_Uint32ListCriterion); ok {
			return x.Uint32ListCriterion
		}
	}
	return nil
}

func (x *Criterion) GetUint32RangeCriterion() *Uint32RangeCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_Uint32RangeCriterion); ok {
			return x.Uint32RangeCriterion
		}
	}
	return nil
}

func (x *Criterion) GetUint32NINListCriterion() *Uint32NINListCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_Uint32NINListCriterion); ok {
			return x.Uint32NINListCriterion
		}
	}
	return nil
}

func (x *Criterion) GetDateRangeCriterion() *DateRangeCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_DateRangeCriterion); ok {
			return x.DateRangeCriterion
		}
	}
	return nil
}

func (x *Criterion) GetInt64ExactCriterion() *Int64ExactCriterion {
	if x != nil {
		if x, ok := x.Criterion.(*Criterion_Int64ExactCriterion); ok {
			return x.Int64ExactCriterion
		}
	}
	return nil
}

type isCriterion_Criterion interface {
	isCriterion_Criterion()
}

type Criterion_OrCriterion struct {
	OrCriterion *ORCriterion `protobuf:"bytes,1,opt,name=orCriterion,proto3,oneof"`
}

type Criterion_BoolExactCriterion struct {
	BoolExactCriterion *BoolExactCriterion `protobuf:"bytes,2,opt,name=boolExactCriterion,proto3,oneof"`
}

type Criterion_TextExactCriterion struct {
	TextExactCriterion *TextExactCriterion `protobuf:"bytes,3,opt,name=textExactCriterion,proto3,oneof"`
}

type Criterion_TextNEExactCriterion struct {
	TextNEExactCriterion *TextNEExactCriterion `protobuf:"bytes,4,opt,name=textNEExactCriterion,proto3,oneof"`
}

type Criterion_TextSubstringCriterion struct {
	TextSubstringCriterion *TextSubstringCriterion `protobuf:"bytes,5,opt,name=textSubstringCriterion,proto3,oneof"`
}

type Criterion_TextListCriterion struct {
	TextListCriterion *TextListCriterion `protobuf:"bytes,6,opt,name=textListCriterion,proto3,oneof"`
}

type Criterion_TextNINListCriterion struct {
	TextNINListCriterion *TextNINListCriterion `protobuf:"bytes,7,opt,name=textNINListCriterion,proto3,oneof"`
}

type Criterion_Uint32ExactCriterion struct {
	Uint32ExactCriterion *Uint32ExactCriterion `protobuf:"bytes,8,opt,name=uint32ExactCriterion,proto3,oneof"`
}

type Criterion_Uint32NEExactCriterion struct {
	Uint32NEExactCriterion *Uint32NEExactCriterion `protobuf:"bytes,9,opt,name=uint32NEExactCriterion,proto3,oneof"`
}

type Criterion_Uint32ListCriterion struct {
	Uint32ListCriterion *Uint32ListCriterion `protobuf:"bytes,10,opt,name=uint32ListCriterion,proto3,oneof"`
}

type Criterion_Uint32RangeCriterion struct {
	Uint32RangeCriterion *Uint32RangeCriterion `protobuf:"bytes,11,opt,name=uint32RangeCriterion,proto3,oneof"`
}

type Criterion_Uint32NINListCriterion struct {
	Uint32NINListCriterion *Uint32NINListCriterion `protobuf:"bytes,12,opt,name=uint32NINListCriterion,proto3,oneof"`
}

type Criterion_DateRangeCriterion struct {
	DateRangeCriterion *DateRangeCriterion `protobuf:"bytes,13,opt,name=dateRangeCriterion,proto3,oneof"`
}

type Criterion_Int64ExactCriterion struct {
	Int64ExactCriterion *Int64ExactCriterion `protobuf:"bytes,14,opt,name=int64ExactCriterion,proto3,oneof"`
}

func (*Criterion_OrCriterion) isCriterion_Criterion() {}

func (*Criterion_BoolExactCriterion) isCriterion_Criterion() {}

func (*Criterion_TextExactCriterion) isCriterion_Criterion() {}

func (*Criterion_TextNEExactCriterion) isCriterion_Criterion() {}

func (*Criterion_TextSubstringCriterion) isCriterion_Criterion() {}

func (*Criterion_TextListCriterion) isCriterion_Criterion() {}

func (*Criterion_TextNINListCriterion) isCriterion_Criterion() {}

func (*Criterion_Uint32ExactCriterion) isCriterion_Criterion() {}

func (*Criterion_Uint32NEExactCriterion) isCriterion_Criterion() {}

func (*Criterion_Uint32ListCriterion) isCriterion_Criterion() {}

func (*Criterion_Uint32RangeCriterion) isCriterion_Criterion() {}

func (*Criterion_Uint32NINListCriterion) isCriterion_Criterion() {}

func (*Criterion_DateRangeCriterion) isCriterion_Criterion() {}

func (*Criterion_Int64ExactCriterion) isCriterion_Criterion() {}

// ORCriterion allows the construction of an OR list of criterion.
type ORCriterion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// criteria is a list of search.Criterion that are used to construct an OR
	// list
	Criteria      []*Criterion `protobuf:"bytes,1,rep,name=criteria,proto3" json:"criteria,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ORCriterion) Reset() {
	*x = ORCriterion{}
	mi := &file_search_criterion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ORCriterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORCriterion) ProtoMessage() {}

func (x *ORCriterion) ProtoReflect() protoreflect.Message {
	mi := &file_search_criterion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORCriterion.ProtoReflect.Descriptor instead.
func (*ORCriterion) Descriptor() ([]byte, []int) {
	return file_search_criterion_proto_rawDescGZIP(), []int{1}
}

func (x *ORCriterion) GetCriteria() []*Criterion {
	if x != nil {
		return x.Criteria
	}
	return nil
}

var File_search_criterion_proto protoreflect.FileDescriptor

const file_search_criterion_proto_rawDesc = "" +
	"\n" +
	"\x16search/criterion.proto\x12\n" +
	"api.search\x1a\x1fsearch/boolExactCriterion.proto\x1a\x1fsearch/textExactCriterion.proto\x1a!search/textNEExactCriterion.proto\x1a#search/textSubstringCriterion.proto\x1a\x1esearch/textListCriterion.proto\x1a!search/textNINListCriterion.proto\x1a!search/uint32ExactCriterion.proto\x1a#search/uint32NEExactCriterion.proto\x1a search/uint32ListCriterion.proto\x1a!search/uint32RangeCriterion.proto\x1a#search/uint32NINListCriterion.proto\x1a\x1fsearch/dateRangeCriterion.proto\x1a search/int64ExactCriterion.proto\"\xbe\t\n" +
	"\tCriterion\x12;\n" +
	"\vorCriterion\x18\x01 \x01(\v2\x17.api.search.ORCriterionH\x00R\vorCriterion\x12P\n" +
	"\x12boolExactCriterion\x18\x02 \x01(\v2\x1e.api.search.BoolExactCriterionH\x00R\x12boolExactCriterion\x12P\n" +
	"\x12textExactCriterion\x18\x03 \x01(\v2\x1e.api.search.TextExactCriterionH\x00R\x12textExactCriterion\x12V\n" +
	"\x14textNEExactCriterion\x18\x04 \x01(\v2 .api.search.TextNEExactCriterionH\x00R\x14textNEExactCriterion\x12\\\n" +
	"\x16textSubstringCriterion\x18\x05 \x01(\v2\".api.search.TextSubstringCriterionH\x00R\x16textSubstringCriterion\x12M\n" +
	"\x11textListCriterion\x18\x06 \x01(\v2\x1d.api.search.TextListCriterionH\x00R\x11textListCriterion\x12V\n" +
	"\x14textNINListCriterion\x18\a \x01(\v2 .api.search.TextNINListCriterionH\x00R\x14textNINListCriterion\x12V\n" +
	"\x14uint32ExactCriterion\x18\b \x01(\v2 .api.search.Uint32ExactCriterionH\x00R\x14uint32ExactCriterion\x12\\\n" +
	"\x16uint32NEExactCriterion\x18\t \x01(\v2\".api.search.Uint32NEExactCriterionH\x00R\x16uint32NEExactCriterion\x12S\n" +
	"\x13uint32ListCriterion\x18\n" +
	" \x01(\v2\x1f.api.search.Uint32ListCriterionH\x00R\x13uint32ListCriterion\x12V\n" +
	"\x14uint32RangeCriterion\x18\v \x01(\v2 .api.search.Uint32RangeCriterionH\x00R\x14uint32RangeCriterion\x12\\\n" +
	"\x16uint32NINListCriterion\x18\f \x01(\v2\".api.search.Uint32NINListCriterionH\x00R\x16uint32NINListCriterion\x12P\n" +
	"\x12dateRangeCriterion\x18\r \x01(\v2\x1e.api.search.DateRangeCriterionH\x00R\x12dateRangeCriterion\x12S\n" +
	"\x13int64ExactCriterion\x18\x0e \x01(\v2\x1f.api.search.Int64ExactCriterionH\x00R\x13int64ExactCriterionB\v\n" +
	"\tcriterion\"@\n" +
	"\vORCriterion\x121\n" +
	"\bcriteria\x18\x01 \x03(\v2\x15.api.search.CriterionR\bcriteriaB$Z\"github.com/meshtrade/api/go/searchb\x06proto3"

var (
	file_search_criterion_proto_rawDescOnce sync.Once
	file_search_criterion_proto_rawDescData []byte
)

func file_search_criterion_proto_rawDescGZIP() []byte {
	file_search_criterion_proto_rawDescOnce.Do(func() {
		file_search_criterion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_search_criterion_proto_rawDesc), len(file_search_criterion_proto_rawDesc)))
	})
	return file_search_criterion_proto_rawDescData
}

var file_search_criterion_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_search_criterion_proto_goTypes = []any{
	(*Criterion)(nil),              // 0: api.search.Criterion
	(*ORCriterion)(nil),            // 1: api.search.ORCriterion
	(*BoolExactCriterion)(nil),     // 2: api.search.BoolExactCriterion
	(*TextExactCriterion)(nil),     // 3: api.search.TextExactCriterion
	(*TextNEExactCriterion)(nil),   // 4: api.search.TextNEExactCriterion
	(*TextSubstringCriterion)(nil), // 5: api.search.TextSubstringCriterion
	(*TextListCriterion)(nil),      // 6: api.search.TextListCriterion
	(*TextNINListCriterion)(nil),   // 7: api.search.TextNINListCriterion
	(*Uint32ExactCriterion)(nil),   // 8: api.search.Uint32ExactCriterion
	(*Uint32NEExactCriterion)(nil), // 9: api.search.Uint32NEExactCriterion
	(*Uint32ListCriterion)(nil),    // 10: api.search.Uint32ListCriterion
	(*Uint32RangeCriterion)(nil),   // 11: api.search.Uint32RangeCriterion
	(*Uint32NINListCriterion)(nil), // 12: api.search.Uint32NINListCriterion
	(*DateRangeCriterion)(nil),     // 13: api.search.DateRangeCriterion
	(*Int64ExactCriterion)(nil),    // 14: api.search.Int64ExactCriterion
}
var file_search_criterion_proto_depIdxs = []int32{
	1,  // 0: api.search.Criterion.orCriterion:type_name -> api.search.ORCriterion
	2,  // 1: api.search.Criterion.boolExactCriterion:type_name -> api.search.BoolExactCriterion
	3,  // 2: api.search.Criterion.textExactCriterion:type_name -> api.search.TextExactCriterion
	4,  // 3: api.search.Criterion.textNEExactCriterion:type_name -> api.search.TextNEExactCriterion
	5,  // 4: api.search.Criterion.textSubstringCriterion:type_name -> api.search.TextSubstringCriterion
	6,  // 5: api.search.Criterion.textListCriterion:type_name -> api.search.TextListCriterion
	7,  // 6: api.search.Criterion.textNINListCriterion:type_name -> api.search.TextNINListCriterion
	8,  // 7: api.search.Criterion.uint32ExactCriterion:type_name -> api.search.Uint32ExactCriterion
	9,  // 8: api.search.Criterion.uint32NEExactCriterion:type_name -> api.search.Uint32NEExactCriterion
	10, // 9: api.search.Criterion.uint32ListCriterion:type_name -> api.search.Uint32ListCriterion
	11, // 10: api.search.Criterion.uint32RangeCriterion:type_name -> api.search.Uint32RangeCriterion
	12, // 11: api.search.Criterion.uint32NINListCriterion:type_name -> api.search.Uint32NINListCriterion
	13, // 12: api.search.Criterion.dateRangeCriterion:type_name -> api.search.DateRangeCriterion
	14, // 13: api.search.Criterion.int64ExactCriterion:type_name -> api.search.Int64ExactCriterion
	0,  // 14: api.search.ORCriterion.criteria:type_name -> api.search.Criterion
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_search_criterion_proto_init() }
func file_search_criterion_proto_init() {
	if File_search_criterion_proto != nil {
		return
	}
	file_search_boolExactCriterion_proto_init()
	file_search_textExactCriterion_proto_init()
	file_search_textNEExactCriterion_proto_init()
	file_search_textSubstringCriterion_proto_init()
	file_search_textListCriterion_proto_init()
	file_search_textNINListCriterion_proto_init()
	file_search_uint32ExactCriterion_proto_init()
	file_search_uint32NEExactCriterion_proto_init()
	file_search_uint32ListCriterion_proto_init()
	file_search_uint32RangeCriterion_proto_init()
	file_search_uint32NINListCriterion_proto_init()
	file_search_dateRangeCriterion_proto_init()
	file_search_int64ExactCriterion_proto_init()
	file_search_criterion_proto_msgTypes[0].OneofWrappers = []any{
		(*Criterion_OrCriterion)(nil),
		(*Criterion_BoolExactCriterion)(nil),
		(*Criterion_TextExactCriterion)(nil),
		(*Criterion_TextNEExactCriterion)(nil),
		(*Criterion_TextSubstringCriterion)(nil),
		(*Criterion_TextListCriterion)(nil),
		(*Criterion_TextNINListCriterion)(nil),
		(*Criterion_Uint32ExactCriterion)(nil),
		(*Criterion_Uint32NEExactCriterion)(nil),
		(*Criterion_Uint32ListCriterion)(nil),
		(*Criterion_Uint32RangeCriterion)(nil),
		(*Criterion_Uint32NINListCriterion)(nil),
		(*Criterion_DateRangeCriterion)(nil),
		(*Criterion_Int64ExactCriterion)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_criterion_proto_rawDesc), len(file_search_criterion_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_search_criterion_proto_goTypes,
		DependencyIndexes: file_search_criterion_proto_depIdxs,
		MessageInfos:      file_search_criterion_proto_msgTypes,
	}.Build()
	File_search_criterion_proto = out.File
	file_search_criterion_proto_goTypes = nil
	file_search_criterion_proto_depIdxs = nil
}
