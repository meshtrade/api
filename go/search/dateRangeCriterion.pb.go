// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: search/dateRangeCriterion.proto

package search

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DataRangeCriterion is an exact date range criterion
type DateRangeCriterion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field is the field that the search is performed against.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Start is the lower bound of the date range
	Start *RangeValue `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// End is the upper bound of the date range
	End           *RangeValue `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateRangeCriterion) Reset() {
	*x = DateRangeCriterion{}
	mi := &file_search_dateRangeCriterion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRangeCriterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRangeCriterion) ProtoMessage() {}

func (x *DateRangeCriterion) ProtoReflect() protoreflect.Message {
	mi := &file_search_dateRangeCriterion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRangeCriterion.ProtoReflect.Descriptor instead.
func (*DateRangeCriterion) Descriptor() ([]byte, []int) {
	return file_search_dateRangeCriterion_proto_rawDescGZIP(), []int{0}
}

func (x *DateRangeCriterion) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *DateRangeCriterion) GetStart() *RangeValue {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *DateRangeCriterion) GetEnd() *RangeValue {
	if x != nil {
		return x.End
	}
	return nil
}

type RangeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Date is the value the search is performed against
	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// Inclusive indicates whether the 'date' should be included in the search range.
	Inclusive bool `protobuf:"varint,2,opt,name=inclusive,proto3" json:"inclusive,omitempty"`
	// Ignore specifies whether to ignore this range value in the search.
	Ignore        bool `protobuf:"varint,3,opt,name=ignore,proto3" json:"ignore,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeValue) Reset() {
	*x = RangeValue{}
	mi := &file_search_dateRangeCriterion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeValue) ProtoMessage() {}

func (x *RangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_search_dateRangeCriterion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeValue.ProtoReflect.Descriptor instead.
func (*RangeValue) Descriptor() ([]byte, []int) {
	return file_search_dateRangeCriterion_proto_rawDescGZIP(), []int{1}
}

func (x *RangeValue) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *RangeValue) GetInclusive() bool {
	if x != nil {
		return x.Inclusive
	}
	return false
}

func (x *RangeValue) GetIgnore() bool {
	if x != nil {
		return x.Ignore
	}
	return false
}

var File_search_dateRangeCriterion_proto protoreflect.FileDescriptor

const file_search_dateRangeCriterion_proto_rawDesc = "" +
	"\n" +
	"\x1fsearch/dateRangeCriterion.proto\x12\n" +
	"api.search\x1a\x1fgoogle/protobuf/timestamp.proto\"\x82\x01\n" +
	"\x12DateRangeCriterion\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12,\n" +
	"\x05start\x18\x02 \x01(\v2\x16.api.search.RangeValueR\x05start\x12(\n" +
	"\x03end\x18\x03 \x01(\v2\x16.api.search.RangeValueR\x03end\"r\n" +
	"\n" +
	"RangeValue\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1c\n" +
	"\tinclusive\x18\x02 \x01(\bR\tinclusive\x12\x16\n" +
	"\x06ignore\x18\x03 \x01(\bR\x06ignoreB$Z\"github.com/meshtrade/api/go/searchb\x06proto3"

var (
	file_search_dateRangeCriterion_proto_rawDescOnce sync.Once
	file_search_dateRangeCriterion_proto_rawDescData []byte
)

func file_search_dateRangeCriterion_proto_rawDescGZIP() []byte {
	file_search_dateRangeCriterion_proto_rawDescOnce.Do(func() {
		file_search_dateRangeCriterion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_search_dateRangeCriterion_proto_rawDesc), len(file_search_dateRangeCriterion_proto_rawDesc)))
	})
	return file_search_dateRangeCriterion_proto_rawDescData
}

var file_search_dateRangeCriterion_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_search_dateRangeCriterion_proto_goTypes = []any{
	(*DateRangeCriterion)(nil),    // 0: api.search.DateRangeCriterion
	(*RangeValue)(nil),            // 1: api.search.RangeValue
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_search_dateRangeCriterion_proto_depIdxs = []int32{
	1, // 0: api.search.DateRangeCriterion.start:type_name -> api.search.RangeValue
	1, // 1: api.search.DateRangeCriterion.end:type_name -> api.search.RangeValue
	2, // 2: api.search.RangeValue.date:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_search_dateRangeCriterion_proto_init() }
func file_search_dateRangeCriterion_proto_init() {
	if File_search_dateRangeCriterion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_dateRangeCriterion_proto_rawDesc), len(file_search_dateRangeCriterion_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_search_dateRangeCriterion_proto_goTypes,
		DependencyIndexes: file_search_dateRangeCriterion_proto_depIdxs,
		MessageInfos:      file_search_dateRangeCriterion_proto_msgTypes,
	}.Build()
	File_search_dateRangeCriterion_proto = out.File
	file_search_dateRangeCriterion_proto_goTypes = nil
	file_search_dateRangeCriterion_proto_depIdxs = nil
}
