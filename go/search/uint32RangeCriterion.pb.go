// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/search/uint32RangeCriterion.proto

package search

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Uint32RangeCriterion is an exact uint32 range criterion
type Uint32RangeCriterion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Field is the field that the search is performed against.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Start is the lower bound of the uint32 range
	Start *Uint32RangeValue `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// End is the upper bound of the uint32 range
	End           *Uint32RangeValue `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uint32RangeCriterion) Reset() {
	*x = Uint32RangeCriterion{}
	mi := &file_api_proto_search_uint32RangeCriterion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint32RangeCriterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint32RangeCriterion) ProtoMessage() {}

func (x *Uint32RangeCriterion) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_search_uint32RangeCriterion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint32RangeCriterion.ProtoReflect.Descriptor instead.
func (*Uint32RangeCriterion) Descriptor() ([]byte, []int) {
	return file_api_proto_search_uint32RangeCriterion_proto_rawDescGZIP(), []int{0}
}

func (x *Uint32RangeCriterion) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Uint32RangeCriterion) GetStart() *Uint32RangeValue {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Uint32RangeCriterion) GetEnd() *Uint32RangeValue {
	if x != nil {
		return x.End
	}
	return nil
}

type Uint32RangeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Date is the value the search is performed against
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// Inclusive indicates whether the 'uint32' should be included in the search range.
	Inclusive bool `protobuf:"varint,2,opt,name=inclusive,proto3" json:"inclusive,omitempty"`
	// Ignore specifies whether to ignore this range value in the search.
	Ignore        bool `protobuf:"varint,3,opt,name=ignore,proto3" json:"ignore,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uint32RangeValue) Reset() {
	*x = Uint32RangeValue{}
	mi := &file_api_proto_search_uint32RangeCriterion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uint32RangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uint32RangeValue) ProtoMessage() {}

func (x *Uint32RangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_search_uint32RangeCriterion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uint32RangeValue.ProtoReflect.Descriptor instead.
func (*Uint32RangeValue) Descriptor() ([]byte, []int) {
	return file_api_proto_search_uint32RangeCriterion_proto_rawDescGZIP(), []int{1}
}

func (x *Uint32RangeValue) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Uint32RangeValue) GetInclusive() bool {
	if x != nil {
		return x.Inclusive
	}
	return false
}

func (x *Uint32RangeValue) GetIgnore() bool {
	if x != nil {
		return x.Ignore
	}
	return false
}

var File_api_proto_search_uint32RangeCriterion_proto protoreflect.FileDescriptor

const file_api_proto_search_uint32RangeCriterion_proto_rawDesc = "" +
	"\n" +
	"+api/proto/search/uint32RangeCriterion.proto\x12\n" +
	"api.search\x1a\x1fgoogle/protobuf/timestamp.proto\"\x90\x01\n" +
	"\x14Uint32RangeCriterion\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x122\n" +
	"\x05start\x18\x02 \x01(\v2\x1c.api.search.Uint32RangeValueR\x05start\x12.\n" +
	"\x03end\x18\x03 \x01(\v2\x1c.api.search.Uint32RangeValueR\x03end\"^\n" +
	"\x10Uint32RangeValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\rR\x05value\x12\x1c\n" +
	"\tinclusive\x18\x02 \x01(\bR\tinclusive\x12\x16\n" +
	"\x06ignore\x18\x03 \x01(\bR\x06ignoreB$Z\"github.com/meshtrade/api/go/searchb\x06proto3"

var (
	file_api_proto_search_uint32RangeCriterion_proto_rawDescOnce sync.Once
	file_api_proto_search_uint32RangeCriterion_proto_rawDescData []byte
)

func file_api_proto_search_uint32RangeCriterion_proto_rawDescGZIP() []byte {
	file_api_proto_search_uint32RangeCriterion_proto_rawDescOnce.Do(func() {
		file_api_proto_search_uint32RangeCriterion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_search_uint32RangeCriterion_proto_rawDesc), len(file_api_proto_search_uint32RangeCriterion_proto_rawDesc)))
	})
	return file_api_proto_search_uint32RangeCriterion_proto_rawDescData
}

var file_api_proto_search_uint32RangeCriterion_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_proto_search_uint32RangeCriterion_proto_goTypes = []any{
	(*Uint32RangeCriterion)(nil), // 0: api.search.Uint32RangeCriterion
	(*Uint32RangeValue)(nil),     // 1: api.search.Uint32RangeValue
}
var file_api_proto_search_uint32RangeCriterion_proto_depIdxs = []int32{
	1, // 0: api.search.Uint32RangeCriterion.start:type_name -> api.search.Uint32RangeValue
	1, // 1: api.search.Uint32RangeCriterion.end:type_name -> api.search.Uint32RangeValue
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_search_uint32RangeCriterion_proto_init() }
func file_api_proto_search_uint32RangeCriterion_proto_init() {
	if File_api_proto_search_uint32RangeCriterion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_search_uint32RangeCriterion_proto_rawDesc), len(file_api_proto_search_uint32RangeCriterion_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_search_uint32RangeCriterion_proto_goTypes,
		DependencyIndexes: file_api_proto_search_uint32RangeCriterion_proto_depIdxs,
		MessageInfos:      file_api_proto_search_uint32RangeCriterion_proto_msgTypes,
	}.Build()
	File_api_proto_search_uint32RangeCriterion_proto = out.File
	file_api_proto_search_uint32RangeCriterion_proto_goTypes = nil
	file_api_proto_search_uint32RangeCriterion_proto_depIdxs = nil
}
