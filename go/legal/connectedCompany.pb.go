// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.0
// source: api/proto/legal/connectedCompany.proto

package legal

import (
	location "github.com/meshtrade/api/go/location"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for LegalForm
type LegalForm int32

const (
	// Default unknown legal form
	LegalForm_UNDEFINED_LEGAL_FORM LegalForm = 0 // 0 not used to prevent unexpected default value behaviour.
	// South African Company
	LegalForm_SOUTH_AFRICAN_COMPANY_LEGAL_FORM LegalForm = 1
	// Sole Proprietorship
	LegalForm_SOLE_PROPRIETORSHIP_LEGAL_FORM LegalForm = 2
	// Close Corporation
	LegalForm_CLOSE_CORPORATION_LEGAL_FORM LegalForm = 3
	// Foreign Company
	LegalForm_FOREIGN_COMPANY_LEGAL_FORM LegalForm = 4
	// Listed Company
	LegalForm_LISTED_COMPANY_LEGAL_FORM LegalForm = 5
	// Partnership
	LegalForm_PARTNERSHIP_LEGAL_FORM LegalForm = 6
	// Trust
	LegalForm_TRUST_LEGAL_FORM LegalForm = 7
	// Other legal form
	LegalForm_OTHER_LEGAL_FORM LegalForm = 8
)

// Enum value maps for LegalForm.
var (
	LegalForm_name = map[int32]string{
		0: "UNDEFINED_LEGAL_FORM",
		1: "SOUTH_AFRICAN_COMPANY_LEGAL_FORM",
		2: "SOLE_PROPRIETORSHIP_LEGAL_FORM",
		3: "CLOSE_CORPORATION_LEGAL_FORM",
		4: "FOREIGN_COMPANY_LEGAL_FORM",
		5: "LISTED_COMPANY_LEGAL_FORM",
		6: "PARTNERSHIP_LEGAL_FORM",
		7: "TRUST_LEGAL_FORM",
		8: "OTHER_LEGAL_FORM",
	}
	LegalForm_value = map[string]int32{
		"UNDEFINED_LEGAL_FORM":             0,
		"SOUTH_AFRICAN_COMPANY_LEGAL_FORM": 1,
		"SOLE_PROPRIETORSHIP_LEGAL_FORM":   2,
		"CLOSE_CORPORATION_LEGAL_FORM":     3,
		"FOREIGN_COMPANY_LEGAL_FORM":       4,
		"LISTED_COMPANY_LEGAL_FORM":        5,
		"PARTNERSHIP_LEGAL_FORM":           6,
		"TRUST_LEGAL_FORM":                 7,
		"OTHER_LEGAL_FORM":                 8,
	}
)

func (x LegalForm) Enum() *LegalForm {
	p := new(LegalForm)
	*p = x
	return p
}

func (x LegalForm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LegalForm) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_legal_connectedCompany_proto_enumTypes[0].Descriptor()
}

func (LegalForm) Type() protoreflect.EnumType {
	return &file_api_proto_legal_connectedCompany_proto_enumTypes[0]
}

func (x LegalForm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LegalForm.Descriptor instead.
func (LegalForm) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_legal_connectedCompany_proto_rawDescGZIP(), []int{0}
}

type ConnectedCompany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the connected company
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The business name of the connected company
	BusinessName string `protobuf:"bytes,2,opt,name=businessName,proto3" json:"businessName,omitempty"`
	// Legal form of the connected company (e.g., Corporation, Partnership)
	LegalForm LegalForm `protobuf:"varint,3,opt,name=legalForm,proto3,enum=api.legal.LegalForm" json:"legalForm,omitempty"`
	// Registered name of the connected company
	RegisteredName string `protobuf:"bytes,4,opt,name=registeredName,proto3" json:"registeredName,omitempty"`
	// Registration number of the connected company
	RegistrationNumber string `protobuf:"bytes,5,opt,name=registrationNumber,proto3" json:"registrationNumber,omitempty"`
	// Registered address of the connected company
	RegisteredAddress *location.Address `protobuf:"bytes,6,opt,name=registeredAddress,proto3" json:"registeredAddress,omitempty"`
	// Business address of the connected company
	BusinessAddress *location.Address `protobuf:"bytes,7,opt,name=businessAddress,proto3" json:"businessAddress,omitempty"`
	// Head office address of the connected company
	HeadOfficeAddress *location.Address `protobuf:"bytes,8,opt,name=headOfficeAddress,proto3" json:"headOfficeAddress,omitempty"`
	// Representative information for the connected company
	CompanyRepresentative *CompanyRepresentative `protobuf:"bytes,9,opt,name=companyRepresentative,proto3" json:"companyRepresentative,omitempty"`
}

func (x *ConnectedCompany) Reset() {
	*x = ConnectedCompany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_legal_connectedCompany_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedCompany) ProtoMessage() {}

func (x *ConnectedCompany) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_legal_connectedCompany_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedCompany.ProtoReflect.Descriptor instead.
func (*ConnectedCompany) Descriptor() ([]byte, []int) {
	return file_api_proto_legal_connectedCompany_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectedCompany) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectedCompany) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *ConnectedCompany) GetLegalForm() LegalForm {
	if x != nil {
		return x.LegalForm
	}
	return LegalForm_UNDEFINED_LEGAL_FORM
}

func (x *ConnectedCompany) GetRegisteredName() string {
	if x != nil {
		return x.RegisteredName
	}
	return ""
}

func (x *ConnectedCompany) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *ConnectedCompany) GetRegisteredAddress() *location.Address {
	if x != nil {
		return x.RegisteredAddress
	}
	return nil
}

func (x *ConnectedCompany) GetBusinessAddress() *location.Address {
	if x != nil {
		return x.BusinessAddress
	}
	return nil
}

func (x *ConnectedCompany) GetHeadOfficeAddress() *location.Address {
	if x != nil {
		return x.HeadOfficeAddress
	}
	return nil
}

func (x *ConnectedCompany) GetCompanyRepresentative() *CompanyRepresentative {
	if x != nil {
		return x.CompanyRepresentative
	}
	return nil
}

var File_api_proto_legal_connectedCompany_proto protoreflect.FileDescriptor

var file_api_proto_legal_connectedCompany_proto_rawDesc = []byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x67, 0x61,
	0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65,
	0x67, 0x61, 0x6c, 0x1a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf5, 0x03, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x6c,
	0x46, 0x6f, 0x72, 0x6d, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x0f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x43, 0x0a,
	0x11, 0x68, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x11, 0x68, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x56, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2a, 0x98, 0x02, 0x0a, 0x09, 0x4c,
	0x65, 0x67, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x44, 0x45,
	0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x41, 0x46, 0x52, 0x49,
	0x43, 0x41, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x5f, 0x4c, 0x45, 0x47, 0x41,
	0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x4f, 0x4c, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x50, 0x52, 0x49, 0x45, 0x54, 0x4f, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f,
	0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x50, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x03, 0x12, 0x1e,
	0x0a, 0x1a, 0x46, 0x4f, 0x52, 0x45, 0x49, 0x47, 0x4e, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e,
	0x59, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x04, 0x12, 0x1d,
	0x0a, 0x19, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59,
	0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x05, 0x12, 0x1a, 0x0a,
	0x16, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x4c, 0x45, 0x47,
	0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x52, 0x55,
	0x53, 0x54, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x07, 0x12,
	0x14, 0x0a, 0x10, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x10, 0x08, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_proto_legal_connectedCompany_proto_rawDescOnce sync.Once
	file_api_proto_legal_connectedCompany_proto_rawDescData = file_api_proto_legal_connectedCompany_proto_rawDesc
)

func file_api_proto_legal_connectedCompany_proto_rawDescGZIP() []byte {
	file_api_proto_legal_connectedCompany_proto_rawDescOnce.Do(func() {
		file_api_proto_legal_connectedCompany_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_legal_connectedCompany_proto_rawDescData)
	})
	return file_api_proto_legal_connectedCompany_proto_rawDescData
}

var file_api_proto_legal_connectedCompany_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_legal_connectedCompany_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_proto_legal_connectedCompany_proto_goTypes = []interface{}{
	(LegalForm)(0),                // 0: api.legal.LegalForm
	(*ConnectedCompany)(nil),      // 1: api.legal.ConnectedCompany
	(*location.Address)(nil),      // 2: api.location.Address
	(*CompanyRepresentative)(nil), // 3: api.legal.CompanyRepresentative
}
var file_api_proto_legal_connectedCompany_proto_depIdxs = []int32{
	0, // 0: api.legal.ConnectedCompany.legalForm:type_name -> api.legal.LegalForm
	2, // 1: api.legal.ConnectedCompany.registeredAddress:type_name -> api.location.Address
	2, // 2: api.legal.ConnectedCompany.businessAddress:type_name -> api.location.Address
	2, // 3: api.legal.ConnectedCompany.headOfficeAddress:type_name -> api.location.Address
	3, // 4: api.legal.ConnectedCompany.companyRepresentative:type_name -> api.legal.CompanyRepresentative
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_legal_connectedCompany_proto_init() }
func file_api_proto_legal_connectedCompany_proto_init() {
	if File_api_proto_legal_connectedCompany_proto != nil {
		return
	}
	file_api_proto_legal_companyRepresentative_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_legal_connectedCompany_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedCompany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_legal_connectedCompany_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_legal_connectedCompany_proto_goTypes,
		DependencyIndexes: file_api_proto_legal_connectedCompany_proto_depIdxs,
		EnumInfos:         file_api_proto_legal_connectedCompany_proto_enumTypes,
		MessageInfos:      file_api_proto_legal_connectedCompany_proto_msgTypes,
	}.Build()
	File_api_proto_legal_connectedCompany_proto = out.File
	file_api_proto_legal_connectedCompany_proto_rawDesc = nil
	file_api_proto_legal_connectedCompany_proto_goTypes = nil
	file_api_proto_legal_connectedCompany_proto_depIdxs = nil
}
