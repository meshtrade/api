// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/legal/connectedCompany.proto

package legal

import (
	location "github.com/meshtrade/api/go/location"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectedCompany struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the connected company
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The business name of the connected company
	BusinessName string `protobuf:"bytes,2,opt,name=businessName,proto3" json:"businessName,omitempty"`
	// Legal form of the connected company (e.g., Corporation, Partnership)
	LegalForm LegalForm `protobuf:"varint,3,opt,name=legalForm,proto3,enum=api.legal.LegalForm" json:"legalForm,omitempty"`
	// Registered name of the connected company
	RegisteredName string `protobuf:"bytes,4,opt,name=registeredName,proto3" json:"registeredName,omitempty"`
	// Registration number of the connected company
	RegistrationNumber string `protobuf:"bytes,5,opt,name=registrationNumber,proto3" json:"registrationNumber,omitempty"`
	// Registered address of the connected company
	RegisteredAddress *location.Address `protobuf:"bytes,6,opt,name=registeredAddress,proto3" json:"registeredAddress,omitempty"`
	// Business address of the connected company
	BusinessAddress *location.Address `protobuf:"bytes,7,opt,name=businessAddress,proto3" json:"businessAddress,omitempty"`
	// Head office address of the connected company
	HeadOfficeAddress *location.Address `protobuf:"bytes,8,opt,name=headOfficeAddress,proto3" json:"headOfficeAddress,omitempty"`
	// Representative information for the connected company
	CompanyRepresentative *CompanyRepresentative `protobuf:"bytes,9,opt,name=companyRepresentative,proto3" json:"companyRepresentative,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ConnectedCompany) Reset() {
	*x = ConnectedCompany{}
	mi := &file_api_proto_legal_connectedCompany_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectedCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedCompany) ProtoMessage() {}

func (x *ConnectedCompany) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_legal_connectedCompany_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedCompany.ProtoReflect.Descriptor instead.
func (*ConnectedCompany) Descriptor() ([]byte, []int) {
	return file_api_proto_legal_connectedCompany_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectedCompany) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectedCompany) GetBusinessName() string {
	if x != nil {
		return x.BusinessName
	}
	return ""
}

func (x *ConnectedCompany) GetLegalForm() LegalForm {
	if x != nil {
		return x.LegalForm
	}
	return LegalForm_UNDEFINED_LEGAL_FORM
}

func (x *ConnectedCompany) GetRegisteredName() string {
	if x != nil {
		return x.RegisteredName
	}
	return ""
}

func (x *ConnectedCompany) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *ConnectedCompany) GetRegisteredAddress() *location.Address {
	if x != nil {
		return x.RegisteredAddress
	}
	return nil
}

func (x *ConnectedCompany) GetBusinessAddress() *location.Address {
	if x != nil {
		return x.BusinessAddress
	}
	return nil
}

func (x *ConnectedCompany) GetHeadOfficeAddress() *location.Address {
	if x != nil {
		return x.HeadOfficeAddress
	}
	return nil
}

func (x *ConnectedCompany) GetCompanyRepresentative() *CompanyRepresentative {
	if x != nil {
		return x.CompanyRepresentative
	}
	return nil
}

var File_api_proto_legal_connectedCompany_proto protoreflect.FileDescriptor

const file_api_proto_legal_connectedCompany_proto_rawDesc = "" +
	"\n" +
	"&api/proto/legal/connectedCompany.proto\x12\tapi.legal\x1a api/proto/location/address.proto\x1a+api/proto/legal/companyRepresentative.proto\x1a\x1fapi/proto/legal/legalform.proto\"\xf5\x03\n" +
	"\x10ConnectedCompany\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\fbusinessName\x18\x02 \x01(\tR\fbusinessName\x122\n" +
	"\tlegalForm\x18\x03 \x01(\x0e2\x14.api.legal.LegalFormR\tlegalForm\x12&\n" +
	"\x0eregisteredName\x18\x04 \x01(\tR\x0eregisteredName\x12.\n" +
	"\x12registrationNumber\x18\x05 \x01(\tR\x12registrationNumber\x12C\n" +
	"\x11registeredAddress\x18\x06 \x01(\v2\x15.api.location.AddressR\x11registeredAddress\x12?\n" +
	"\x0fbusinessAddress\x18\a \x01(\v2\x15.api.location.AddressR\x0fbusinessAddress\x12C\n" +
	"\x11headOfficeAddress\x18\b \x01(\v2\x15.api.location.AddressR\x11headOfficeAddress\x12V\n" +
	"\x15companyRepresentative\x18\t \x01(\v2 .api.legal.CompanyRepresentativeR\x15companyRepresentativeB#Z!github.com/meshtrade/api/go/legalb\x06proto3"

var (
	file_api_proto_legal_connectedCompany_proto_rawDescOnce sync.Once
	file_api_proto_legal_connectedCompany_proto_rawDescData []byte
)

func file_api_proto_legal_connectedCompany_proto_rawDescGZIP() []byte {
	file_api_proto_legal_connectedCompany_proto_rawDescOnce.Do(func() {
		file_api_proto_legal_connectedCompany_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_legal_connectedCompany_proto_rawDesc), len(file_api_proto_legal_connectedCompany_proto_rawDesc)))
	})
	return file_api_proto_legal_connectedCompany_proto_rawDescData
}

var file_api_proto_legal_connectedCompany_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_proto_legal_connectedCompany_proto_goTypes = []any{
	(*ConnectedCompany)(nil),      // 0: api.legal.ConnectedCompany
	(LegalForm)(0),                // 1: api.legal.LegalForm
	(*location.Address)(nil),      // 2: api.location.Address
	(*CompanyRepresentative)(nil), // 3: api.legal.CompanyRepresentative
}
var file_api_proto_legal_connectedCompany_proto_depIdxs = []int32{
	1, // 0: api.legal.ConnectedCompany.legalForm:type_name -> api.legal.LegalForm
	2, // 1: api.legal.ConnectedCompany.registeredAddress:type_name -> api.location.Address
	2, // 2: api.legal.ConnectedCompany.businessAddress:type_name -> api.location.Address
	2, // 3: api.legal.ConnectedCompany.headOfficeAddress:type_name -> api.location.Address
	3, // 4: api.legal.ConnectedCompany.companyRepresentative:type_name -> api.legal.CompanyRepresentative
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_legal_connectedCompany_proto_init() }
func file_api_proto_legal_connectedCompany_proto_init() {
	if File_api_proto_legal_connectedCompany_proto != nil {
		return
	}
	file_api_proto_legal_companyRepresentative_proto_init()
	file_api_proto_legal_legalform_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_legal_connectedCompany_proto_rawDesc), len(file_api_proto_legal_connectedCompany_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_legal_connectedCompany_proto_goTypes,
		DependencyIndexes: file_api_proto_legal_connectedCompany_proto_depIdxs,
		MessageInfos:      file_api_proto_legal_connectedCompany_proto_msgTypes,
	}.Build()
	File_api_proto_legal_connectedCompany_proto = out.File
	file_api_proto_legal_connectedCompany_proto_goTypes = nil
	file_api_proto_legal_connectedCompany_proto_depIdxs = nil
}
