// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/legal/company/industryClassification.proto

package company

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndustryClassification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Industry code using the GICS standard (Global Industry Classification Standard)
	IndustryCode int32 `protobuf:"varint,1,opt,name=industryCode,proto3" json:"industryCode,omitempty"`
	// Name/description of the industry based on the GICS code
	IndustryName string `protobuf:"bytes,2,opt,name=industryName,proto3" json:"industryName,omitempty"`
	// Sub-industry code under the main industry using GICS classification
	SubIndustryCode int32 `protobuf:"varint,3,opt,name=subIndustryCode,proto3" json:"subIndustryCode,omitempty"`
	// Name/description of the sub-industry based on the GICS sub-industry code
	SubIndustryName string `protobuf:"bytes,4,opt,name=subIndustryName,proto3" json:"subIndustryName,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IndustryClassification) Reset() {
	*x = IndustryClassification{}
	mi := &file_api_proto_legal_company_industryClassification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndustryClassification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustryClassification) ProtoMessage() {}

func (x *IndustryClassification) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_legal_company_industryClassification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustryClassification.ProtoReflect.Descriptor instead.
func (*IndustryClassification) Descriptor() ([]byte, []int) {
	return file_api_proto_legal_company_industryClassification_proto_rawDescGZIP(), []int{0}
}

func (x *IndustryClassification) GetIndustryCode() int32 {
	if x != nil {
		return x.IndustryCode
	}
	return 0
}

func (x *IndustryClassification) GetIndustryName() string {
	if x != nil {
		return x.IndustryName
	}
	return ""
}

func (x *IndustryClassification) GetSubIndustryCode() int32 {
	if x != nil {
		return x.SubIndustryCode
	}
	return 0
}

func (x *IndustryClassification) GetSubIndustryName() string {
	if x != nil {
		return x.SubIndustryName
	}
	return ""
}

var File_api_proto_legal_company_industryClassification_proto protoreflect.FileDescriptor

const file_api_proto_legal_company_industryClassification_proto_rawDesc = "" +
	"\n" +
	"4api/proto/legal/company/industryClassification.proto\x12\x11api.legal.company\"\xb4\x01\n" +
	"\x16IndustryClassification\x12\"\n" +
	"\findustryCode\x18\x01 \x01(\x05R\findustryCode\x12\"\n" +
	"\findustryName\x18\x02 \x01(\tR\findustryName\x12(\n" +
	"\x0fsubIndustryCode\x18\x03 \x01(\x05R\x0fsubIndustryCode\x12(\n" +
	"\x0fsubIndustryName\x18\x04 \x01(\tR\x0fsubIndustryNameB+Z)github.com/meshtrade/api/go/legal/companyb\x06proto3"

var (
	file_api_proto_legal_company_industryClassification_proto_rawDescOnce sync.Once
	file_api_proto_legal_company_industryClassification_proto_rawDescData []byte
)

func file_api_proto_legal_company_industryClassification_proto_rawDescGZIP() []byte {
	file_api_proto_legal_company_industryClassification_proto_rawDescOnce.Do(func() {
		file_api_proto_legal_company_industryClassification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_legal_company_industryClassification_proto_rawDesc), len(file_api_proto_legal_company_industryClassification_proto_rawDesc)))
	})
	return file_api_proto_legal_company_industryClassification_proto_rawDescData
}

var file_api_proto_legal_company_industryClassification_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_proto_legal_company_industryClassification_proto_goTypes = []any{
	(*IndustryClassification)(nil), // 0: api.legal.company.IndustryClassification
}
var file_api_proto_legal_company_industryClassification_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_legal_company_industryClassification_proto_init() }
func file_api_proto_legal_company_industryClassification_proto_init() {
	if File_api_proto_legal_company_industryClassification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_legal_company_industryClassification_proto_rawDesc), len(file_api_proto_legal_company_industryClassification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_legal_company_industryClassification_proto_goTypes,
		DependencyIndexes: file_api_proto_legal_company_industryClassification_proto_depIdxs,
		MessageInfos:      file_api_proto_legal_company_industryClassification_proto_msgTypes,
	}.Build()
	File_api_proto_legal_company_industryClassification_proto = out.File
	file_api_proto_legal_company_industryClassification_proto_goTypes = nil
	file_api_proto_legal_company_industryClassification_proto_depIdxs = nil
}
