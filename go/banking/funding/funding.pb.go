// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.0
// source: api/proto/banking/funding/funding.proto

package funding

import (
	ledger "github.com/meshtrade/api/go/ledger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FundingState int32

const (
	FundingState_UNDEFINED_FUNDING_ORDER_STATE              FundingState = 0
	FundingState_PENDING_CONFIRMATION_FUNDING_ORDER_STATE   FundingState = 1
	FundingState_AWAITING_APPROVAL_FUNDING_ORDER_STATE      FundingState = 2
	FundingState_SETTLEMENT_IN_PROGRESS_FUNDING_ORDER_STATE FundingState = 3
	FundingState_CANCELLED_FUNDING_ORDER_STATE              FundingState = 4
	FundingState_FAILED_FUNDING_ORDER_STATE                 FundingState = 5
	FundingState_SETTLED_FUNDING_ORDER_STATE                FundingState = 6
	FundingState_UNDER_INVESTIGATION_FUNDING_ORDER_STATE    FundingState = 7
)

// Enum value maps for FundingState.
var (
	FundingState_name = map[int32]string{
		0: "UNDEFINED_FUNDING_ORDER_STATE",
		1: "PENDING_CONFIRMATION_FUNDING_ORDER_STATE",
		2: "AWAITING_APPROVAL_FUNDING_ORDER_STATE",
		3: "SETTLEMENT_IN_PROGRESS_FUNDING_ORDER_STATE",
		4: "CANCELLED_FUNDING_ORDER_STATE",
		5: "FAILED_FUNDING_ORDER_STATE",
		6: "SETTLED_FUNDING_ORDER_STATE",
		7: "UNDER_INVESTIGATION_FUNDING_ORDER_STATE",
	}
	FundingState_value = map[string]int32{
		"UNDEFINED_FUNDING_ORDER_STATE":              0,
		"PENDING_CONFIRMATION_FUNDING_ORDER_STATE":   1,
		"AWAITING_APPROVAL_FUNDING_ORDER_STATE":      2,
		"SETTLEMENT_IN_PROGRESS_FUNDING_ORDER_STATE": 3,
		"CANCELLED_FUNDING_ORDER_STATE":              4,
		"FAILED_FUNDING_ORDER_STATE":                 5,
		"SETTLED_FUNDING_ORDER_STATE":                6,
		"UNDER_INVESTIGATION_FUNDING_ORDER_STATE":    7,
	}
)

func (x FundingState) Enum() *FundingState {
	p := new(FundingState)
	*p = x
	return p
}

func (x FundingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FundingState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_banking_funding_funding_proto_enumTypes[0].Descriptor()
}

func (FundingState) Type() protoreflect.EnumType {
	return &file_api_proto_banking_funding_funding_proto_enumTypes[0]
}

func (x FundingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FundingState.Descriptor instead.
func (FundingState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{0}
}

type FundingOrigin int32

const (
	FundingOrigin_UNDEFINED_FUNDING_ORIGIN FundingOrigin = 0
	FundingOrigin_INVESTEC_DIRECT_EFT      FundingOrigin = 1
	FundingOrigin_PEACH_SETTLEMENT         FundingOrigin = 2
	FundingOrigin_PEACH_PAYMENT            FundingOrigin = 3
)

// Enum value maps for FundingOrigin.
var (
	FundingOrigin_name = map[int32]string{
		0: "UNDEFINED_FUNDING_ORIGIN",
		1: "INVESTEC_DIRECT_EFT",
		2: "PEACH_SETTLEMENT",
		3: "PEACH_PAYMENT",
	}
	FundingOrigin_value = map[string]int32{
		"UNDEFINED_FUNDING_ORIGIN": 0,
		"INVESTEC_DIRECT_EFT":      1,
		"PEACH_SETTLEMENT":         2,
		"PEACH_PAYMENT":            3,
	}
)

func (x FundingOrigin) Enum() *FundingOrigin {
	p := new(FundingOrigin)
	*p = x
	return p
}

func (x FundingOrigin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FundingOrigin) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_banking_funding_funding_proto_enumTypes[1].Descriptor()
}

func (FundingOrigin) Type() protoreflect.EnumType {
	return &file_api_proto_banking_funding_funding_proto_enumTypes[1]
}

func (x FundingOrigin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FundingOrigin.Descriptor instead.
func (FundingOrigin) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{1}
}

type PeachPaymentMethod int32

const (
	PeachPaymentMethod_UNDEFINED_PEACH_FUNDING_CATEGORY PeachPaymentMethod = 0
	PeachPaymentMethod_PEACH_PAY_BY_BANK                PeachPaymentMethod = 1
	PeachPaymentMethod_PEACH_PAY_BY_CARD                PeachPaymentMethod = 2
)

// Enum value maps for PeachPaymentMethod.
var (
	PeachPaymentMethod_name = map[int32]string{
		0: "UNDEFINED_PEACH_FUNDING_CATEGORY",
		1: "PEACH_PAY_BY_BANK",
		2: "PEACH_PAY_BY_CARD",
	}
	PeachPaymentMethod_value = map[string]int32{
		"UNDEFINED_PEACH_FUNDING_CATEGORY": 0,
		"PEACH_PAY_BY_BANK":                1,
		"PEACH_PAY_BY_CARD":                2,
	}
)

func (x PeachPaymentMethod) Enum() *PeachPaymentMethod {
	p := new(PeachPaymentMethod)
	*p = x
	return p
}

func (x PeachPaymentMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeachPaymentMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_banking_funding_funding_proto_enumTypes[2].Descriptor()
}

func (PeachPaymentMethod) Type() protoreflect.EnumType {
	return &file_api_proto_banking_funding_funding_proto_enumTypes[2]
}

func (x PeachPaymentMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeachPaymentMethod.Descriptor instead.
func (PeachPaymentMethod) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{2}
}

// TODO
type Funding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of the funding order
	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	// Amount to be funded
	Amount *ledger.Amount `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Funding origin (Peach, Investec etc.)
	FundingOrigin FundingOrigin `protobuf:"varint,3,opt,name=fundingOrigin,proto3,enum=api.banking.funding.FundingOrigin" json:"fundingOrigin,omitempty"`
	// Funding origin specific metaData
	MetaData *FundingOrderMetaData `protobuf:"bytes,4,opt,name=metaData,proto3" json:"metaData,omitempty"`
	// The account number to be funded.
	AccountNumber string `protobuf:"bytes,5,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	// The state of the funding order.
	State FundingState `protobuf:"varint,6,opt,name=state,proto3,enum=api.banking.funding.FundingState" json:"state,omitempty"`
	// The stateReason for the funding order.
	StateReason string `protobuf:"bytes,7,opt,name=stateReason,proto3" json:"stateReason,omitempty"`
	// The date the funding amount was available to Mesh
	ValueDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
}

func (x *Funding) Reset() {
	*x = Funding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Funding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Funding) ProtoMessage() {}

func (x *Funding) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Funding.ProtoReflect.Descriptor instead.
func (*Funding) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{0}
}

func (x *Funding) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Funding) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Funding) GetFundingOrigin() FundingOrigin {
	if x != nil {
		return x.FundingOrigin
	}
	return FundingOrigin_UNDEFINED_FUNDING_ORIGIN
}

func (x *Funding) GetMetaData() *FundingOrderMetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *Funding) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *Funding) GetState() FundingState {
	if x != nil {
		return x.State
	}
	return FundingState_UNDEFINED_FUNDING_ORDER_STATE
}

func (x *Funding) GetStateReason() string {
	if x != nil {
		return x.StateReason
	}
	return ""
}

func (x *Funding) GetValueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ValueDate
	}
	return nil
}

type FundingOrderMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MetaData:
	//
	//	*FundingOrderMetaData_PeachPayment
	//	*FundingOrderMetaData_PeachSettlement
	//	*FundingOrderMetaData_InvestecDirectEFT
	MetaData isFundingOrderMetaData_MetaData `protobuf_oneof:"metaData"`
}

func (x *FundingOrderMetaData) Reset() {
	*x = FundingOrderMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundingOrderMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundingOrderMetaData) ProtoMessage() {}

func (x *FundingOrderMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundingOrderMetaData.ProtoReflect.Descriptor instead.
func (*FundingOrderMetaData) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{1}
}

func (m *FundingOrderMetaData) GetMetaData() isFundingOrderMetaData_MetaData {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (x *FundingOrderMetaData) GetPeachPayment() *PeachPaymentMetaData {
	if x, ok := x.GetMetaData().(*FundingOrderMetaData_PeachPayment); ok {
		return x.PeachPayment
	}
	return nil
}

func (x *FundingOrderMetaData) GetPeachSettlement() *PeachSettlementMetaData {
	if x, ok := x.GetMetaData().(*FundingOrderMetaData_PeachSettlement); ok {
		return x.PeachSettlement
	}
	return nil
}

func (x *FundingOrderMetaData) GetInvestecDirectEFT() *InvestecDirectEFTMetaData {
	if x, ok := x.GetMetaData().(*FundingOrderMetaData_InvestecDirectEFT); ok {
		return x.InvestecDirectEFT
	}
	return nil
}

type isFundingOrderMetaData_MetaData interface {
	isFundingOrderMetaData_MetaData()
}

type FundingOrderMetaData_PeachPayment struct {
	PeachPayment *PeachPaymentMetaData `protobuf:"bytes,1,opt,name=PeachPayment,proto3,oneof"`
}

type FundingOrderMetaData_PeachSettlement struct {
	PeachSettlement *PeachSettlementMetaData `protobuf:"bytes,2,opt,name=PeachSettlement,proto3,oneof"`
}

type FundingOrderMetaData_InvestecDirectEFT struct {
	InvestecDirectEFT *InvestecDirectEFTMetaData `protobuf:"bytes,3,opt,name=InvestecDirectEFT,proto3,oneof"`
}

func (*FundingOrderMetaData_PeachPayment) isFundingOrderMetaData_MetaData() {}

func (*FundingOrderMetaData_PeachSettlement) isFundingOrderMetaData_MetaData() {}

func (*FundingOrderMetaData_InvestecDirectEFT) isFundingOrderMetaData_MetaData() {}

type InvestecDirectEFTMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID         string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	ExternalTransactionID string `protobuf:"bytes,2,opt,name=externalTransactionID,proto3" json:"externalTransactionID,omitempty"`
	ExternalReference     string `protobuf:"bytes,3,opt,name=externalReference,proto3" json:"externalReference,omitempty"` // bankReference
	Reference             string `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`                 // The reference used  to identify the account to be funded.
	BankName              string `protobuf:"bytes,5,opt,name=bankName,proto3" json:"bankName,omitempty"`
}

func (x *InvestecDirectEFTMetaData) Reset() {
	*x = InvestecDirectEFTMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvestecDirectEFTMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvestecDirectEFTMetaData) ProtoMessage() {}

func (x *InvestecDirectEFTMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvestecDirectEFTMetaData.ProtoReflect.Descriptor instead.
func (*InvestecDirectEFTMetaData) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{2}
}

func (x *InvestecDirectEFTMetaData) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *InvestecDirectEFTMetaData) GetExternalTransactionID() string {
	if x != nil {
		return x.ExternalTransactionID
	}
	return ""
}

func (x *InvestecDirectEFTMetaData) GetExternalReference() string {
	if x != nil {
		return x.ExternalReference
	}
	return ""
}

func (x *InvestecDirectEFTMetaData) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *InvestecDirectEFTMetaData) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

type PeachSettlementMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID         string `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	ExternalTransactionID string `protobuf:"bytes,2,opt,name=externalTransactionID,proto3" json:"externalTransactionID,omitempty"`
	ExternalReference     string `protobuf:"bytes,3,opt,name=externalReference,proto3" json:"externalReference,omitempty"`
	BankName              string `protobuf:"bytes,4,opt,name=bankName,proto3" json:"bankName,omitempty"`
}

func (x *PeachSettlementMetaData) Reset() {
	*x = PeachSettlementMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachSettlementMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachSettlementMetaData) ProtoMessage() {}

func (x *PeachSettlementMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachSettlementMetaData.ProtoReflect.Descriptor instead.
func (*PeachSettlementMetaData) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{3}
}

func (x *PeachSettlementMetaData) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *PeachSettlementMetaData) GetExternalTransactionID() string {
	if x != nil {
		return x.ExternalTransactionID
	}
	return ""
}

func (x *PeachSettlementMetaData) GetExternalReference() string {
	if x != nil {
		return x.ExternalReference
	}
	return ""
}

func (x *PeachSettlementMetaData) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

type PeachPaymentMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionID         string              `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	ExternalTransactionID string              `protobuf:"bytes,2,opt,name=externalTransactionID,proto3" json:"externalTransactionID,omitempty"`
	ExternalReference     string              `protobuf:"bytes,3,opt,name=externalReference,proto3" json:"externalReference,omitempty"`
	PeachPaymentMethod    PeachPaymentMethod  `protobuf:"varint,4,opt,name=peachPaymentMethod,proto3,enum=api.banking.funding.PeachPaymentMethod" json:"peachPaymentMethod,omitempty"`
	CheckoutId            string              `protobuf:"bytes,5,opt,name=checkoutId,proto3" json:"checkoutId,omitempty"`
	Fee                   *PeachFee           `protobuf:"bytes,6,opt,name=fee,proto3" json:"fee,omitempty"`
	ClientDetails         *PeachClientDetails `protobuf:"bytes,7,opt,name=clientDetails,proto3" json:"clientDetails,omitempty"`
	UserSpecifiedAccount  string              `protobuf:"bytes,8,opt,name=userSpecifiedAccount,proto3" json:"userSpecifiedAccount,omitempty"`
	BankName              string              `protobuf:"bytes,9,opt,name=bankName,proto3" json:"bankName,omitempty"`
}

func (x *PeachPaymentMetaData) Reset() {
	*x = PeachPaymentMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachPaymentMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachPaymentMetaData) ProtoMessage() {}

func (x *PeachPaymentMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachPaymentMetaData.ProtoReflect.Descriptor instead.
func (*PeachPaymentMetaData) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{4}
}

func (x *PeachPaymentMetaData) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *PeachPaymentMetaData) GetExternalTransactionID() string {
	if x != nil {
		return x.ExternalTransactionID
	}
	return ""
}

func (x *PeachPaymentMetaData) GetExternalReference() string {
	if x != nil {
		return x.ExternalReference
	}
	return ""
}

func (x *PeachPaymentMetaData) GetPeachPaymentMethod() PeachPaymentMethod {
	if x != nil {
		return x.PeachPaymentMethod
	}
	return PeachPaymentMethod_UNDEFINED_PEACH_FUNDING_CATEGORY
}

func (x *PeachPaymentMetaData) GetCheckoutId() string {
	if x != nil {
		return x.CheckoutId
	}
	return ""
}

func (x *PeachPaymentMetaData) GetFee() *PeachFee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *PeachPaymentMetaData) GetClientDetails() *PeachClientDetails {
	if x != nil {
		return x.ClientDetails
	}
	return nil
}

func (x *PeachPaymentMetaData) GetUserSpecifiedAccount() string {
	if x != nil {
		return x.UserSpecifiedAccount
	}
	return ""
}

func (x *PeachPaymentMetaData) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

type PeachClientDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Surname string `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
}

func (x *PeachClientDetails) Reset() {
	*x = PeachClientDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachClientDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachClientDetails) ProtoMessage() {}

func (x *PeachClientDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachClientDetails.ProtoReflect.Descriptor instead.
func (*PeachClientDetails) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{5}
}

func (x *PeachClientDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PeachClientDetails) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

type PeachFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeIncVat *ledger.Amount `protobuf:"bytes,1,opt,name=FeeIncVat,proto3" json:"FeeIncVat,omitempty"`
	FeeExlVat *ledger.Amount `protobuf:"bytes,2,opt,name=FeeExlVat,proto3" json:"FeeExlVat,omitempty"`
	VatAmount *ledger.Amount `protobuf:"bytes,3,opt,name=VatAmount,proto3" json:"VatAmount,omitempty"`
}

func (x *PeachFee) Reset() {
	*x = PeachFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeachFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeachFee) ProtoMessage() {}

func (x *PeachFee) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeachFee.ProtoReflect.Descriptor instead.
func (*PeachFee) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{6}
}

func (x *PeachFee) GetFeeIncVat() *ledger.Amount {
	if x != nil {
		return x.FeeIncVat
	}
	return nil
}

func (x *PeachFee) GetFeeExlVat() *ledger.Amount {
	if x != nil {
		return x.FeeExlVat
	}
	return nil
}

func (x *PeachFee) GetVatAmount() *ledger.Amount {
	if x != nil {
		return x.VatAmount
	}
	return nil
}

var File_api_proto_banking_funding_funding_proto protoreflect.FileDescriptor

var file_api_proto_banking_funding_funding_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x1d,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99,
	0x03, 0x0a, 0x07, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48,
	0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x14, 0x46,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x0c, 0x50, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x50, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x0f, 0x50, 0x65, 0x61, 0x63, 0x68, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x61, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x50,
	0x65, 0x61, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5e,
	0x0a, 0x11, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x65, 0x63, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x45, 0x46, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x65, 0x63, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x46,
	0x54, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x11, 0x49, 0x6e, 0x76,
	0x65, 0x73, 0x74, 0x65, 0x63, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x46, 0x54, 0x42, 0x0a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0xdf, 0x01, 0x0a, 0x19, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x65, 0x63, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x46, 0x54,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x34,
	0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbf, 0x01, 0x0a,
	0x17, 0x50, 0x65, 0x61, 0x63, 0x68, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x34,
	0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe9,
	0x03, 0x0a, 0x14, 0x50, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x34, 0x0a,
	0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x57, 0x0a, 0x12, 0x70, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x12, 0x70, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65,
	0x61, 0x63, 0x68, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x65, 0x61, 0x63, 0x68, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x50, 0x65,
	0x61, 0x63, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa0,
	0x01, 0x0a, 0x08, 0x50, 0x65, 0x61, 0x63, 0x68, 0x46, 0x65, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x46,
	0x65, 0x65, 0x49, 0x6e, 0x63, 0x56, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x09, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x63, 0x56, 0x61, 0x74, 0x12, 0x30, 0x0a,
	0x09, 0x46, 0x65, 0x65, 0x45, 0x78, 0x6c, 0x56, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x46, 0x65, 0x65, 0x45, 0x78, 0x6c, 0x56, 0x61, 0x74, 0x12,
	0x30, 0x0a, 0x09, 0x56, 0x61, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x56, 0x61, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x2a, 0xcb, 0x02, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f,
	0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x55,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41, 0x4c, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x2e,
	0x0a, 0x2a, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x5f,
	0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x21,
	0x0a, 0x1d, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x55, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x55, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x55, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x10, 0x06, 0x12, 0x2b, 0x0a, 0x27, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x45,
	0x53, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x07, 0x2a,
	0x6f, 0x0a, 0x0d, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x46, 0x55,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x45, 0x43, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43,
	0x54, 0x5f, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x45, 0x41, 0x43, 0x48,
	0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x50, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x2a, 0x68, 0x0a, 0x12, 0x50, 0x65, 0x61, 0x63, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x50, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x59, 0x5f, 0x42, 0x59, 0x5f, 0x42, 0x41, 0x4e,
	0x4b, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x59,
	0x5f, 0x42, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_proto_banking_funding_funding_proto_rawDescOnce sync.Once
	file_api_proto_banking_funding_funding_proto_rawDescData = file_api_proto_banking_funding_funding_proto_rawDesc
)

func file_api_proto_banking_funding_funding_proto_rawDescGZIP() []byte {
	file_api_proto_banking_funding_funding_proto_rawDescOnce.Do(func() {
		file_api_proto_banking_funding_funding_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_banking_funding_funding_proto_rawDescData)
	})
	return file_api_proto_banking_funding_funding_proto_rawDescData
}

var file_api_proto_banking_funding_funding_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_proto_banking_funding_funding_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_proto_banking_funding_funding_proto_goTypes = []interface{}{
	(FundingState)(0),                 // 0: api.banking.funding.FundingState
	(FundingOrigin)(0),                // 1: api.banking.funding.FundingOrigin
	(PeachPaymentMethod)(0),           // 2: api.banking.funding.PeachPaymentMethod
	(*Funding)(nil),                   // 3: api.banking.funding.Funding
	(*FundingOrderMetaData)(nil),      // 4: api.banking.funding.FundingOrderMetaData
	(*InvestecDirectEFTMetaData)(nil), // 5: api.banking.funding.InvestecDirectEFTMetaData
	(*PeachSettlementMetaData)(nil),   // 6: api.banking.funding.PeachSettlementMetaData
	(*PeachPaymentMetaData)(nil),      // 7: api.banking.funding.PeachPaymentMetaData
	(*PeachClientDetails)(nil),        // 8: api.banking.funding.PeachClientDetails
	(*PeachFee)(nil),                  // 9: api.banking.funding.PeachFee
	(*ledger.Amount)(nil),             // 10: api.ledger.Amount
	(*timestamppb.Timestamp)(nil),     // 11: google.protobuf.Timestamp
}
var file_api_proto_banking_funding_funding_proto_depIdxs = []int32{
	10, // 0: api.banking.funding.Funding.amount:type_name -> api.ledger.Amount
	1,  // 1: api.banking.funding.Funding.fundingOrigin:type_name -> api.banking.funding.FundingOrigin
	4,  // 2: api.banking.funding.Funding.metaData:type_name -> api.banking.funding.FundingOrderMetaData
	0,  // 3: api.banking.funding.Funding.state:type_name -> api.banking.funding.FundingState
	11, // 4: api.banking.funding.Funding.valueDate:type_name -> google.protobuf.Timestamp
	7,  // 5: api.banking.funding.FundingOrderMetaData.PeachPayment:type_name -> api.banking.funding.PeachPaymentMetaData
	6,  // 6: api.banking.funding.FundingOrderMetaData.PeachSettlement:type_name -> api.banking.funding.PeachSettlementMetaData
	5,  // 7: api.banking.funding.FundingOrderMetaData.InvestecDirectEFT:type_name -> api.banking.funding.InvestecDirectEFTMetaData
	2,  // 8: api.banking.funding.PeachPaymentMetaData.peachPaymentMethod:type_name -> api.banking.funding.PeachPaymentMethod
	9,  // 9: api.banking.funding.PeachPaymentMetaData.fee:type_name -> api.banking.funding.PeachFee
	8,  // 10: api.banking.funding.PeachPaymentMetaData.clientDetails:type_name -> api.banking.funding.PeachClientDetails
	10, // 11: api.banking.funding.PeachFee.FeeIncVat:type_name -> api.ledger.Amount
	10, // 12: api.banking.funding.PeachFee.FeeExlVat:type_name -> api.ledger.Amount
	10, // 13: api.banking.funding.PeachFee.VatAmount:type_name -> api.ledger.Amount
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_proto_banking_funding_funding_proto_init() }
func file_api_proto_banking_funding_funding_proto_init() {
	if File_api_proto_banking_funding_funding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_banking_funding_funding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Funding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_banking_funding_funding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundingOrderMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_banking_funding_funding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvestecDirectEFTMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_banking_funding_funding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeachSettlementMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_banking_funding_funding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeachPaymentMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_banking_funding_funding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeachClientDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_banking_funding_funding_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeachFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_banking_funding_funding_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*FundingOrderMetaData_PeachPayment)(nil),
		(*FundingOrderMetaData_PeachSettlement)(nil),
		(*FundingOrderMetaData_InvestecDirectEFT)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_banking_funding_funding_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_banking_funding_funding_proto_goTypes,
		DependencyIndexes: file_api_proto_banking_funding_funding_proto_depIdxs,
		EnumInfos:         file_api_proto_banking_funding_funding_proto_enumTypes,
		MessageInfos:      file_api_proto_banking_funding_funding_proto_msgTypes,
	}.Build()
	File_api_proto_banking_funding_funding_proto = out.File
	file_api_proto_banking_funding_funding_proto_rawDesc = nil
	file_api_proto_banking_funding_funding_proto_goTypes = nil
	file_api_proto_banking_funding_funding_proto_depIdxs = nil
}
