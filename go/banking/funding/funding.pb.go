// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.0
// source: api/proto/banking/funding/funding.proto

package funding

import (
	ledger "github.com/meshtrade/api/go/ledger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FundingState int32

const (
	FundingState_UNDEFINED_FUNDING_ORDER_STATE              FundingState = 0
	FundingState_PENDING_CONFIRMATION_FUNDING_ORDER_STATE   FundingState = 1
	FundingState_AWAITING_APPROVAL_FUNDING_ORDER_STATE      FundingState = 2
	FundingState_SETTLEMENT_IN_PROGRESS_FUNDING_ORDER_STATE FundingState = 3
	FundingState_CANCELLED_FUNDING_ORDER_STATE              FundingState = 4
	FundingState_FAILED_FUNDING_ORDER_STATE                 FundingState = 5
	FundingState_SETTLED_FUNDING_ORDER_STATE                FundingState = 6
	FundingState_UNDER_INVESTIGATION_FUNDING_ORDER_STATE    FundingState = 7
)

// Enum value maps for FundingState.
var (
	FundingState_name = map[int32]string{
		0: "UNDEFINED_FUNDING_ORDER_STATE",
		1: "PENDING_CONFIRMATION_FUNDING_ORDER_STATE",
		2: "AWAITING_APPROVAL_FUNDING_ORDER_STATE",
		3: "SETTLEMENT_IN_PROGRESS_FUNDING_ORDER_STATE",
		4: "CANCELLED_FUNDING_ORDER_STATE",
		5: "FAILED_FUNDING_ORDER_STATE",
		6: "SETTLED_FUNDING_ORDER_STATE",
		7: "UNDER_INVESTIGATION_FUNDING_ORDER_STATE",
	}
	FundingState_value = map[string]int32{
		"UNDEFINED_FUNDING_ORDER_STATE":              0,
		"PENDING_CONFIRMATION_FUNDING_ORDER_STATE":   1,
		"AWAITING_APPROVAL_FUNDING_ORDER_STATE":      2,
		"SETTLEMENT_IN_PROGRESS_FUNDING_ORDER_STATE": 3,
		"CANCELLED_FUNDING_ORDER_STATE":              4,
		"FAILED_FUNDING_ORDER_STATE":                 5,
		"SETTLED_FUNDING_ORDER_STATE":                6,
		"UNDER_INVESTIGATION_FUNDING_ORDER_STATE":    7,
	}
)

func (x FundingState) Enum() *FundingState {
	p := new(FundingState)
	*p = x
	return p
}

func (x FundingState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FundingState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_banking_funding_funding_proto_enumTypes[0].Descriptor()
}

func (FundingState) Type() protoreflect.EnumType {
	return &file_api_proto_banking_funding_funding_proto_enumTypes[0]
}

func (x FundingState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FundingState.Descriptor instead.
func (FundingState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{0}
}

type FundingOrigin int32

const (
	FundingOrigin_UNDEFINED_FUNDING_ORIGIN FundingOrigin = 0
	FundingOrigin_INVESTEC_DIRECT_EFT      FundingOrigin = 1
	FundingOrigin_PEACH_SETTLEMENT         FundingOrigin = 2
	FundingOrigin_PEACH_PAYMENT            FundingOrigin = 3
	FundingOrigin_DIRECT_EFT               FundingOrigin = 4
)

// Enum value maps for FundingOrigin.
var (
	FundingOrigin_name = map[int32]string{
		0: "UNDEFINED_FUNDING_ORIGIN",
		1: "INVESTEC_DIRECT_EFT",
		2: "PEACH_SETTLEMENT",
		3: "PEACH_PAYMENT",
		4: "DIRECT_EFT",
	}
	FundingOrigin_value = map[string]int32{
		"UNDEFINED_FUNDING_ORIGIN": 0,
		"INVESTEC_DIRECT_EFT":      1,
		"PEACH_SETTLEMENT":         2,
		"PEACH_PAYMENT":            3,
		"DIRECT_EFT":               4,
	}
)

func (x FundingOrigin) Enum() *FundingOrigin {
	p := new(FundingOrigin)
	*p = x
	return p
}

func (x FundingOrigin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FundingOrigin) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_banking_funding_funding_proto_enumTypes[1].Descriptor()
}

func (FundingOrigin) Type() protoreflect.EnumType {
	return &file_api_proto_banking_funding_funding_proto_enumTypes[1]
}

func (x FundingOrigin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FundingOrigin.Descriptor instead.
func (FundingOrigin) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{1}
}

// Api Funding
//
// @bson-marshalled
type Funding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of the funding order
	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	// Amount to be funded
	Amount *ledger.Amount `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Funding origin (Peach, Investec etc.)
	FundingOrigin FundingOrigin `protobuf:"varint,3,opt,name=fundingOrigin,proto3,enum=api.banking.funding.FundingOrigin" json:"fundingOrigin,omitempty"`
	// Funding origin specific metaData
	MetaData *MetaData `protobuf:"bytes,4,opt,name=metaData,proto3" json:"metaData,omitempty"`
	// The account number to be funded.
	AccountNumber string `protobuf:"bytes,5,opt,name=accountNumber,proto3" json:"accountNumber,omitempty"`
	// The state of the funding order.
	State FundingState `protobuf:"varint,6,opt,name=state,proto3,enum=api.banking.funding.FundingState" json:"state,omitempty"`
	// The stateReason for the funding order.
	StateReason string `protobuf:"bytes,7,opt,name=stateReason,proto3" json:"stateReason,omitempty"`
	// The date the funding amount was available to Mesh
	ValueDate *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
}

func (x *Funding) Reset() {
	*x = Funding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_banking_funding_funding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Funding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Funding) ProtoMessage() {}

func (x *Funding) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_banking_funding_funding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Funding.ProtoReflect.Descriptor instead.
func (*Funding) Descriptor() ([]byte, []int) {
	return file_api_proto_banking_funding_funding_proto_rawDescGZIP(), []int{0}
}

func (x *Funding) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Funding) GetAmount() *ledger.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Funding) GetFundingOrigin() FundingOrigin {
	if x != nil {
		return x.FundingOrigin
	}
	return FundingOrigin_UNDEFINED_FUNDING_ORIGIN
}

func (x *Funding) GetMetaData() *MetaData {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *Funding) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *Funding) GetState() FundingState {
	if x != nil {
		return x.State
	}
	return FundingState_UNDEFINED_FUNDING_ORDER_STATE
}

func (x *Funding) GetStateReason() string {
	if x != nil {
		return x.StateReason
	}
	return ""
}

func (x *Funding) GetValueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ValueDate
	}
	return nil
}

var File_api_proto_banking_funding_funding_proto protoreflect.FileDescriptor

var file_api_proto_banking_funding_funding_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x1d,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x03, 0x0a, 0x07, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52,
	0x0d, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x39,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x66, 0x75, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x2a, 0xcb, 0x02, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x45, 0x44, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x57, 0x41, 0x49, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41, 0x4c, 0x5f, 0x46, 0x55, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x02, 0x12, 0x2e, 0x0a, 0x2a, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x55, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x03, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x46,
	0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x46,
	0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x44, 0x5f,
	0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x2b, 0x0a, 0x27, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x49,
	0x4e, 0x56, 0x45, 0x53, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x55, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x10, 0x07, 0x2a, 0x7f, 0x0a, 0x0d, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x5f, 0x46, 0x55, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54, 0x45, 0x43, 0x5f, 0x44, 0x49,
	0x52, 0x45, 0x43, 0x54, 0x5f, 0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x45,
	0x41, 0x43, 0x48, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x45, 0x41, 0x43, 0x48, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x45, 0x46,
	0x54, 0x10, 0x04, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x6f, 0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_banking_funding_funding_proto_rawDescOnce sync.Once
	file_api_proto_banking_funding_funding_proto_rawDescData = file_api_proto_banking_funding_funding_proto_rawDesc
)

func file_api_proto_banking_funding_funding_proto_rawDescGZIP() []byte {
	file_api_proto_banking_funding_funding_proto_rawDescOnce.Do(func() {
		file_api_proto_banking_funding_funding_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_banking_funding_funding_proto_rawDescData)
	})
	return file_api_proto_banking_funding_funding_proto_rawDescData
}

var file_api_proto_banking_funding_funding_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_banking_funding_funding_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_proto_banking_funding_funding_proto_goTypes = []interface{}{
	(FundingState)(0),             // 0: api.banking.funding.FundingState
	(FundingOrigin)(0),            // 1: api.banking.funding.FundingOrigin
	(*Funding)(nil),               // 2: api.banking.funding.Funding
	(*ledger.Amount)(nil),         // 3: api.ledger.Amount
	(*MetaData)(nil),              // 4: api.banking.funding.MetaData
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_api_proto_banking_funding_funding_proto_depIdxs = []int32{
	3, // 0: api.banking.funding.Funding.amount:type_name -> api.ledger.Amount
	1, // 1: api.banking.funding.Funding.fundingOrigin:type_name -> api.banking.funding.FundingOrigin
	4, // 2: api.banking.funding.Funding.metaData:type_name -> api.banking.funding.MetaData
	0, // 3: api.banking.funding.Funding.state:type_name -> api.banking.funding.FundingState
	5, // 4: api.banking.funding.Funding.valueDate:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_banking_funding_funding_proto_init() }
func file_api_proto_banking_funding_funding_proto_init() {
	if File_api_proto_banking_funding_funding_proto != nil {
		return
	}
	file_api_proto_banking_funding_fundingOrderMetadata_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_banking_funding_funding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Funding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_banking_funding_funding_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_banking_funding_funding_proto_goTypes,
		DependencyIndexes: file_api_proto_banking_funding_funding_proto_depIdxs,
		EnumInfos:         file_api_proto_banking_funding_funding_proto_enumTypes,
		MessageInfos:      file_api_proto_banking_funding_funding_proto_msgTypes,
	}.Build()
	File_api_proto_banking_funding_funding_proto = out.File
	file_api_proto_banking_funding_funding_proto_rawDesc = nil
	file_api_proto_banking_funding_funding_proto_goTypes = nil
	file_api_proto_banking_funding_funding_proto_depIdxs = nil
}
