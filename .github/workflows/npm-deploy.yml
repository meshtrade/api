name: Deploy TypeScript SDK to npm via Trusted Publisher

# Triggers on tags like ts/v1.0.0, ts/v2.1.3, etc.
# Uses npm Trusted Publishing (OIDC) - no tokens required!
on:
  push:
    tags:
      - 'ts/v*.*.*'

  # Allows manual workflow dispatch
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.2.3)'
        required: true
        type: string

permissions:
  contents: write  # Need write permission to commit version changes back
  id-token: write  # Required for npm trusted publishing with OIDC
  pull-requests: write  # Required for creating PR after successful deployment

jobs:
  npm-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # No registry-url specified - let OIDC trusted publishing handle authentication

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
            ts/node_modules
          key: ${{ runner.os }}-ts-deps-${{ hashFiles('yarn.lock', 'ts/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-ts-deps-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup buf CLI (required for protobuf generation)
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ github.token }}

      - name: Generate TypeScript code from protobuf
        run: ./dev/tool.sh generate --targets=typescript

      - name: Run TypeScript tests (early validation)
        working-directory: ./ts
        run: |
          echo "üß™ Running TypeScript tests..."
          yarn test

      - name: Run TypeScript linting (early validation)
        working-directory: ./ts
        run: |
          echo "üöÄ Linting TypeScript code..."
          yarn lint

      - name: Extract version from tag or input
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # Extract version from ts/v*.*.* tag (e.g., ts/v1.2.3 -> 1.2.3)
            VERSION=$(echo "${{ github.ref_name }}" | sed 's/^ts\/v//')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Extracted version from tag: $VERSION"
          else
            # Use version from manual workflow dispatch input
            VERSION="${{ inputs.version }}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Using manual version input: $VERSION"
          fi

      - name: Update package.json version
        working-directory: ./ts
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          echo "Setting TypeScript package version to: $VERSION"
          # Use yarn version - the native and safe way to update package.json
          yarn version --new-version "$VERSION" --no-git-tag-version
          echo "Updated package.json version:"
          grep '"version":' package.json

      - name: Build TypeScript SDK
        working-directory: ./ts
        run: |
          echo "üöÄ Building TypeScript SDK..."
          yarn build

      - name: Verify build artifacts
        working-directory: ./ts
        run: |
          echo "‚úÖ Verifying build artifacts..."
          ls -la dist/ | head -10

      - name: Publish to npm via Trusted Publisher (OIDC)
        working-directory: ./ts
        env:
          NODE_AUTH_TOKEN: ""  # Clear any auth token to force OIDC
        run: |
          echo "üöÄ Publishing to npm via Trusted Publisher..."
          # Clear npm config to ensure clean OIDC authentication
          npm config delete //registry.npmjs.org/:_authToken 2>/dev/null || true
          echo "Using npm for trusted publishing (OIDC)..."
          # Use npm directly for better OIDC support with first-time package publishing
          npm publish --access public

      - name: Success notification
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          echo ""
          echo "############################################################"
          echo "#                                                          #"
          echo "#  üéâ TypeScript SDK v$VERSION published via Trusted Publisher! üì¶ #"
          echo "#                                                          #"
          echo "#  Package: @meshtrade/api@$VERSION                       #"
          echo "#  Registry: https://www.npmjs.com/package/@meshtrade/api #"
          echo "#                                                          #"
          echo "############################################################"

      - name: Create PR with version update
        if: success()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          BRANCH_NAME="chore/npm-version-update-$VERSION"
          
          echo "üìù Creating PR to commit version $VERSION back to repository..."
          
          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create and checkout new branch
          git checkout -b "$BRANCH_NAME"
          
          # Add only the version change
          git add ts/package.json
          
          # Commit the version change
          COMMIT_MSG="chore: update TypeScript SDK version to $VERSION
          
          After successful deployment to npm registry.
          Tag: ts/v$VERSION
          
          ü§ñ Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
          git commit -m "$COMMIT_MSG"
          
          # Push the branch
          git push origin "$BRANCH_NAME"
          
          # Create PR using GitHub CLI
          PR_BODY="## Summary
          Updates TypeScript SDK version to $VERSION after successful npm deployment.
          
          ## Details
          - Package successfully published to npm registry
          - Version updated in \`ts/package.json\`
          - Triggered by tag: \`ts/v$VERSION\`
          
          ## Checklist
          - [x] Version updated to match published package
          - [x] Package successfully deployed to npm
          - [ ] Merged to main branch
          
          ü§ñ Generated with [Claude Code](https://claude.ai/code)"
          
          gh pr create \
            --title "chore: update TypeScript SDK version to $VERSION" \
            --body "$PR_BODY" \
            --base master \
            --head "$BRANCH_NAME"
          
          echo "‚úÖ PR created successfully!"