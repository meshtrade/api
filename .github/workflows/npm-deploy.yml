name: Deploy TypeScript SDK to npm via Trusted Publisher

# Triggers on tags like ts/v1.0.0, ts/v2.1.3, etc.
# Uses npm Trusted Publishing (OIDC) - no tokens required!
on:
  push:
    tags:
      - 'ts/v*.*.*'

  # Allows manual workflow dispatch
  workflow_dispatch:

permissions:
  contents: write  # Need write permission to commit version changes back
  id-token: write  # Required for npm trusted publishing with OIDC

jobs:
  npm-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
            ts/node_modules
          key: ${{ runner.os }}-ts-deps-${{ hashFiles('yarn.lock', 'ts/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-ts-deps-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install buf CLI (required for protobuf generation)
        run: |
          curl -sSL "https://github.com/bufbuild/buf/releases/latest/download/buf-$(uname -s)-$(uname -m)" -o "/tmp/buf"
          sudo mv "/tmp/buf" "/usr/local/bin/buf"
          sudo chmod +x "/usr/local/bin/buf"

      - name: Generate TypeScript code from protobuf
        run: ./dev/tool.sh generate --targets=typescript

      - name: Run TypeScript tests (early validation)
        run: |
          echo "ðŸ§ª Running TypeScript tests..."
          cd ts
          yarn test

      - name: Run TypeScript linting (early validation)
        run: |
          echo "ðŸš€ Linting TypeScript code..."
          cd ts
          yarn lint

      - name: Extract version from tag
        id: version
        run: |
          # Extract version from ts/v*.*.* tag (e.g., ts/v1.2.3 -> 1.2.3)
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION=$(echo "${{ github.ref_name }}" | sed 's/^ts\/v//')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Extracted version: $VERSION"
          else
            echo "Manual workflow dispatch - version must be set manually"
            exit 1
          fi

      - name: Update package.json version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          echo "Setting TypeScript package version to: $VERSION"
          cd ts
          # Update package.json with the extracted version
          if [[ "$OSTYPE" == "darwin"* ]]; then
            sed -i '' "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json
          else
            sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json
          fi
          echo "Updated package.json version:"
          grep '"version":' package.json

      # TEMPORARILY SKIP commit-back to test npm publishing
      # - name: Commit version changes
      #   run: |
      #     # Will re-enable after confirming npm publishing works

      - name: Build TypeScript SDK
        run: |
          echo "ðŸš€ Building TypeScript SDK..."
          cd ts
          yarn build

      - name: Verify build artifacts
        run: |
          echo "âœ… Verifying build artifacts..."
          cd ts
          ls -la dist/ | head -10

      - name: Publish to npm via Trusted Publisher (OIDC)
        run: |
          echo "ðŸš€ Publishing to npm via Trusted Publisher..."
          cd ts
          # With trusted publishing configured, no token needed - uses OIDC automatically
          yarn publish --access public --non-interactive

      - name: Success notification
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          echo ""
          echo "############################################################"
          echo "#                                                          #"
          echo "#  ðŸŽ‰ TypeScript SDK v$VERSION published via Trusted Publisher! ðŸ“¦ #"
          echo "#                                                          #"
          echo "#  Package: @meshtrade/api@$VERSION                       #"
          echo "#  Registry: https://www.npmjs.com/package/@meshtrade/api #"
          echo "#                                                          #"
          echo "############################################################"