// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: meshtrade/reporting/account_report/v1/trading_statement_entry.proto
// Protobuf Java Version: 4.31.1

package meshtrade.reporting.account_report.v1;

@com.google.protobuf.Generated
public final class TradingStatementEntryOuterClass {
  private TradingStatementEntryOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 31,
      /* patch= */ 1,
      /* suffix= */ "",
      TradingStatementEntryOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TradingStatementEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:meshtrade.reporting.account_report.v1.TradingStatementEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *
     * The exact date and time when the transaction was processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
     * @return Whether the transactionDate field is set.
     */
    boolean hasTransactionDate();
    /**
     * <pre>
     *
     * The exact date and time when the transaction was processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
     * @return The transactionDate.
     */
    com.google.protobuf.Timestamp getTransactionDate();
    /**
     * <pre>
     *
     * The exact date and time when the transaction was processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
     */
    com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder();

    /**
     * <pre>
     *
     * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
     * </pre>
     *
     * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @return The transactionId.
     */
    java.lang.String getTransactionId();
    /**
     * <pre>
     *
     * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
     * </pre>
     *
     * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @return The bytes for transactionId.
     */
    com.google.protobuf.ByteString
        getTransactionIdBytes();

    /**
     * <pre>
     *
     * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
     * </pre>
     *
     * <code>string token_code = 3 [json_name = "tokenCode"];</code>
     * @return The tokenCode.
     */
    java.lang.String getTokenCode();
    /**
     * <pre>
     *
     * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
     * </pre>
     *
     * <code>string token_code = 3 [json_name = "tokenCode"];</code>
     * @return The bytes for tokenCode.
     */
    com.google.protobuf.ByteString
        getTokenCodeBytes();

    /**
     * <pre>
     *
     * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     *
     * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     *
     * The quantity of the token transacted. A positive value indicates an increase in the asset,
     * while a negative value indicates a decrease.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
     * @return Whether the amount field is set.
     */
    boolean hasAmount();
    /**
     * <pre>
     *
     * The quantity of the token transacted. A positive value indicates an increase in the asset,
     * while a negative value indicates a decrease.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
     * @return The amount.
     */
    co.meshtrade.api.type.v1.AmountOuterClass.Amount getAmount();
    /**
     * <pre>
     *
     * The quantity of the token transacted. A positive value indicates an increase in the asset,
     * while a negative value indicates a decrease.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
     */
    co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getAmountOrBuilder();

    /**
     * <pre>
     *
     * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
     * @return Whether the price field is set.
     */
    boolean hasPrice();
    /**
     * <pre>
     *
     * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
     * @return The price.
     */
    co.meshtrade.api.type.v1.AmountOuterClass.Amount getPrice();
    /**
     * <pre>
     *
     * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
     */
    co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getPriceOrBuilder();

    /**
     * <pre>
     *
     * The total value of the transaction, calculated as amount * price.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
     * @return Whether the cost field is set.
     */
    boolean hasCost();
    /**
     * <pre>
     *
     * The total value of the transaction, calculated as amount * price.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
     * @return The cost.
     */
    co.meshtrade.api.type.v1.AmountOuterClass.Amount getCost();
    /**
     * <pre>
     *
     * The total value of the transaction, calculated as amount * price.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
     */
    co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getCostOrBuilder();

    /**
     * <pre>
     *
     * The remaining balance of the token in the account after the transaction was completed.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
     * @return Whether the balance field is set.
     */
    boolean hasBalance();
    /**
     * <pre>
     *
     * The remaining balance of the token in the account after the transaction was completed.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
     * @return The balance.
     */
    co.meshtrade.api.type.v1.AmountOuterClass.Amount getBalance();
    /**
     * <pre>
     *
     * The remaining balance of the token in the account after the transaction was completed.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
     */
    co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getBalanceOrBuilder();
  }
  /**
   * <pre>
   *
   * TradingStatementEntry represents a single, immutable transaction record in a user's account statement.
   * It provides a detailed breakdown of each transaction, including the asset involved, transaction type,
   * amount, price, and resulting balance.
   * </pre>
   *
   * Protobuf type {@code meshtrade.reporting.account_report.v1.TradingStatementEntry}
   */
  public static final class TradingStatementEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:meshtrade.reporting.account_report.v1.TradingStatementEntry)
      TradingStatementEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 31,
        /* patch= */ 1,
        /* suffix= */ "",
        TradingStatementEntry.class.getName());
    }
    // Use TradingStatementEntry.newBuilder() to construct.
    private TradingStatementEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TradingStatementEntry() {
      transactionId_ = "";
      tokenCode_ = "";
      description_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry.class, meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry.Builder.class);
    }

    private int bitField0_;
    public static final int TRANSACTION_DATE_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp transactionDate_;
    /**
     * <pre>
     *
     * The exact date and time when the transaction was processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
     * @return Whether the transactionDate field is set.
     */
    @java.lang.Override
    public boolean hasTransactionDate() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *
     * The exact date and time when the transaction was processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
     * @return The transactionDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTransactionDate() {
      return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
    }
    /**
     * <pre>
     *
     * The exact date and time when the transaction was processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
      return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
    }

    public static final int TRANSACTION_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object transactionId_ = "";
    /**
     * <pre>
     *
     * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
     * </pre>
     *
     * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @return The transactionId.
     */
    @java.lang.Override
    public java.lang.String getTransactionId() {
      java.lang.Object ref = transactionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transactionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *
     * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
     * </pre>
     *
     * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @return The bytes for transactionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTransactionIdBytes() {
      java.lang.Object ref = transactionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transactionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_CODE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object tokenCode_ = "";
    /**
     * <pre>
     *
     * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
     * </pre>
     *
     * <code>string token_code = 3 [json_name = "tokenCode"];</code>
     * @return The tokenCode.
     */
    @java.lang.Override
    public java.lang.String getTokenCode() {
      java.lang.Object ref = tokenCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tokenCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *
     * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
     * </pre>
     *
     * <code>string token_code = 3 [json_name = "tokenCode"];</code>
     * @return The bytes for tokenCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenCodeBytes() {
      java.lang.Object ref = tokenCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tokenCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";
    /**
     * <pre>
     *
     * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *
     * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
     * </pre>
     *
     * <code>string description = 4 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMOUNT_FIELD_NUMBER = 5;
    private co.meshtrade.api.type.v1.AmountOuterClass.Amount amount_;
    /**
     * <pre>
     *
     * The quantity of the token transacted. A positive value indicates an increase in the asset,
     * while a negative value indicates a decrease.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
     * @return Whether the amount field is set.
     */
    @java.lang.Override
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *
     * The quantity of the token transacted. A positive value indicates an increase in the asset,
     * while a negative value indicates a decrease.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
     * @return The amount.
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.Amount getAmount() {
      return amount_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : amount_;
    }
    /**
     * <pre>
     *
     * The quantity of the token transacted. A positive value indicates an increase in the asset,
     * while a negative value indicates a decrease.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getAmountOrBuilder() {
      return amount_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : amount_;
    }

    public static final int PRICE_FIELD_NUMBER = 6;
    private co.meshtrade.api.type.v1.AmountOuterClass.Amount price_;
    /**
     * <pre>
     *
     * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
     * @return Whether the price field is set.
     */
    @java.lang.Override
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *
     * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
     * @return The price.
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.Amount getPrice() {
      return price_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : price_;
    }
    /**
     * <pre>
     *
     * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getPriceOrBuilder() {
      return price_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : price_;
    }

    public static final int COST_FIELD_NUMBER = 7;
    private co.meshtrade.api.type.v1.AmountOuterClass.Amount cost_;
    /**
     * <pre>
     *
     * The total value of the transaction, calculated as amount * price.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
     * @return Whether the cost field is set.
     */
    @java.lang.Override
    public boolean hasCost() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *
     * The total value of the transaction, calculated as amount * price.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
     * @return The cost.
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.Amount getCost() {
      return cost_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : cost_;
    }
    /**
     * <pre>
     *
     * The total value of the transaction, calculated as amount * price.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getCostOrBuilder() {
      return cost_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : cost_;
    }

    public static final int BALANCE_FIELD_NUMBER = 8;
    private co.meshtrade.api.type.v1.AmountOuterClass.Amount balance_;
    /**
     * <pre>
     *
     * The remaining balance of the token in the account after the transaction was completed.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
     * @return Whether the balance field is set.
     */
    @java.lang.Override
    public boolean hasBalance() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *
     * The remaining balance of the token in the account after the transaction was completed.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
     * @return The balance.
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.Amount getBalance() {
      return balance_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : balance_;
    }
    /**
     * <pre>
     *
     * The remaining balance of the token in the account after the transaction was completed.
     * </pre>
     *
     * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
     */
    @java.lang.Override
    public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getBalanceOrBuilder() {
      return balance_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : balance_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTransactionDate());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(transactionId_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, transactionId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(tokenCode_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, tokenCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, description_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(5, getAmount());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(6, getPrice());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(7, getCost());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(8, getBalance());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTransactionDate());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(transactionId_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, transactionId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(tokenCode_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, tokenCode_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, description_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAmount());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPrice());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCost());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getBalance());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry)) {
        return super.equals(obj);
      }
      meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry other = (meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry) obj;

      if (hasTransactionDate() != other.hasTransactionDate()) return false;
      if (hasTransactionDate()) {
        if (!getTransactionDate()
            .equals(other.getTransactionDate())) return false;
      }
      if (!getTransactionId()
          .equals(other.getTransactionId())) return false;
      if (!getTokenCode()
          .equals(other.getTokenCode())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (hasAmount() != other.hasAmount()) return false;
      if (hasAmount()) {
        if (!getAmount()
            .equals(other.getAmount())) return false;
      }
      if (hasPrice() != other.hasPrice()) return false;
      if (hasPrice()) {
        if (!getPrice()
            .equals(other.getPrice())) return false;
      }
      if (hasCost() != other.hasCost()) return false;
      if (hasCost()) {
        if (!getCost()
            .equals(other.getCost())) return false;
      }
      if (hasBalance() != other.hasBalance()) return false;
      if (hasBalance()) {
        if (!getBalance()
            .equals(other.getBalance())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTransactionDate()) {
        hash = (37 * hash) + TRANSACTION_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getTransactionDate().hashCode();
      }
      hash = (37 * hash) + TRANSACTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTransactionId().hashCode();
      hash = (37 * hash) + TOKEN_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getTokenCode().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (hasAmount()) {
        hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getAmount().hashCode();
      }
      if (hasPrice()) {
        hash = (37 * hash) + PRICE_FIELD_NUMBER;
        hash = (53 * hash) + getPrice().hashCode();
      }
      if (hasCost()) {
        hash = (37 * hash) + COST_FIELD_NUMBER;
        hash = (53 * hash) + getCost().hashCode();
      }
      if (hasBalance()) {
        hash = (37 * hash) + BALANCE_FIELD_NUMBER;
        hash = (53 * hash) + getBalance().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *
     * TradingStatementEntry represents a single, immutable transaction record in a user's account statement.
     * It provides a detailed breakdown of each transaction, including the asset involved, transaction type,
     * amount, price, and resulting balance.
     * </pre>
     *
     * Protobuf type {@code meshtrade.reporting.account_report.v1.TradingStatementEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:meshtrade.reporting.account_report.v1.TradingStatementEntry)
        meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry.class, meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry.Builder.class);
      }

      // Construct using meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          internalGetTransactionDateFieldBuilder();
          internalGetAmountFieldBuilder();
          internalGetPriceFieldBuilder();
          internalGetCostFieldBuilder();
          internalGetBalanceFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        transactionDate_ = null;
        if (transactionDateBuilder_ != null) {
          transactionDateBuilder_.dispose();
          transactionDateBuilder_ = null;
        }
        transactionId_ = "";
        tokenCode_ = "";
        description_ = "";
        amount_ = null;
        if (amountBuilder_ != null) {
          amountBuilder_.dispose();
          amountBuilder_ = null;
        }
        price_ = null;
        if (priceBuilder_ != null) {
          priceBuilder_.dispose();
          priceBuilder_ = null;
        }
        cost_ = null;
        if (costBuilder_ != null) {
          costBuilder_.dispose();
          costBuilder_ = null;
        }
        balance_ = null;
        if (balanceBuilder_ != null) {
          balanceBuilder_.dispose();
          balanceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_descriptor;
      }

      @java.lang.Override
      public meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry getDefaultInstanceForType() {
        return meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry.getDefaultInstance();
      }

      @java.lang.Override
      public meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry build() {
        meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry buildPartial() {
        meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry result = new meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.transactionDate_ = transactionDateBuilder_ == null
              ? transactionDate_
              : transactionDateBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.transactionId_ = transactionId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tokenCode_ = tokenCode_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.description_ = description_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.amount_ = amountBuilder_ == null
              ? amount_
              : amountBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.price_ = priceBuilder_ == null
              ? price_
              : priceBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.cost_ = costBuilder_ == null
              ? cost_
              : costBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.balance_ = balanceBuilder_ == null
              ? balance_
              : balanceBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry) {
          return mergeFrom((meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry other) {
        if (other == meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry.getDefaultInstance()) return this;
        if (other.hasTransactionDate()) {
          mergeTransactionDate(other.getTransactionDate());
        }
        if (!other.getTransactionId().isEmpty()) {
          transactionId_ = other.transactionId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getTokenCode().isEmpty()) {
          tokenCode_ = other.tokenCode_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasAmount()) {
          mergeAmount(other.getAmount());
        }
        if (other.hasPrice()) {
          mergePrice(other.getPrice());
        }
        if (other.hasCost()) {
          mergeCost(other.getCost());
        }
        if (other.hasBalance()) {
          mergeBalance(other.getBalance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    internalGetTransactionDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                transactionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                tokenCode_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    internalGetAmountFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    internalGetPriceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    internalGetCostFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    internalGetBalanceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Timestamp transactionDate_;
      private com.google.protobuf.SingleFieldBuilder<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> transactionDateBuilder_;
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       * @return Whether the transactionDate field is set.
       */
      public boolean hasTransactionDate() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       * @return The transactionDate.
       */
      public com.google.protobuf.Timestamp getTransactionDate() {
        if (transactionDateBuilder_ == null) {
          return transactionDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        } else {
          return transactionDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       */
      public Builder setTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transactionDate_ = value;
        } else {
          transactionDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       */
      public Builder setTransactionDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (transactionDateBuilder_ == null) {
          transactionDate_ = builderForValue.build();
        } else {
          transactionDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       */
      public Builder mergeTransactionDate(com.google.protobuf.Timestamp value) {
        if (transactionDateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            transactionDate_ != null &&
            transactionDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getTransactionDateBuilder().mergeFrom(value);
          } else {
            transactionDate_ = value;
          }
        } else {
          transactionDateBuilder_.mergeFrom(value);
        }
        if (transactionDate_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       */
      public Builder clearTransactionDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        transactionDate_ = null;
        if (transactionDateBuilder_ != null) {
          transactionDateBuilder_.dispose();
          transactionDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       */
      public com.google.protobuf.Timestamp.Builder getTransactionDateBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return internalGetTransactionDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTransactionDateOrBuilder() {
        if (transactionDateBuilder_ != null) {
          return transactionDateBuilder_.getMessageOrBuilder();
        } else {
          return transactionDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : transactionDate_;
        }
      }
      /**
       * <pre>
       *
       * The exact date and time when the transaction was processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp transaction_date = 1 [json_name = "transactionDate"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          internalGetTransactionDateFieldBuilder() {
        if (transactionDateBuilder_ == null) {
          transactionDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTransactionDate(),
                  getParentForChildren(),
                  isClean());
          transactionDate_ = null;
        }
        return transactionDateBuilder_;
      }

      private java.lang.Object transactionId_ = "";
      /**
       * <pre>
       *
       * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
       * </pre>
       *
       * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
       * @return The transactionId.
       */
      public java.lang.String getTransactionId() {
        java.lang.Object ref = transactionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transactionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *
       * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
       * </pre>
       *
       * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
       * @return The bytes for transactionId.
       */
      public com.google.protobuf.ByteString
          getTransactionIdBytes() {
        java.lang.Object ref = transactionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transactionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *
       * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
       * </pre>
       *
       * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
       * @param value The transactionId to set.
       * @return This builder for chaining.
       */
      public Builder setTransactionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        transactionId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
       * </pre>
       *
       * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTransactionId() {
        transactionId_ = getDefaultInstance().getTransactionId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * A unique identifier for the transaction, ensuring each entry is distinct and traceable.
       * </pre>
       *
       * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
       * @param value The bytes for transactionId to set.
       * @return This builder for chaining.
       */
      public Builder setTransactionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        transactionId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object tokenCode_ = "";
      /**
       * <pre>
       *
       * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
       * </pre>
       *
       * <code>string token_code = 3 [json_name = "tokenCode"];</code>
       * @return The tokenCode.
       */
      public java.lang.String getTokenCode() {
        java.lang.Object ref = tokenCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tokenCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *
       * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
       * </pre>
       *
       * <code>string token_code = 3 [json_name = "tokenCode"];</code>
       * @return The bytes for tokenCode.
       */
      public com.google.protobuf.ByteString
          getTokenCodeBytes() {
        java.lang.Object ref = tokenCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tokenCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *
       * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
       * </pre>
       *
       * <code>string token_code = 3 [json_name = "tokenCode"];</code>
       * @param value The tokenCode to set.
       * @return This builder for chaining.
       */
      public Builder setTokenCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        tokenCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
       * </pre>
       *
       * <code>string token_code = 3 [json_name = "tokenCode"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTokenCode() {
        tokenCode_ = getDefaultInstance().getTokenCode();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The specific token involved in the transaction (e.g., "mZAR", "yXLM").
       * </pre>
       *
       * <code>string token_code = 3 [json_name = "tokenCode"];</code>
       * @param value The bytes for tokenCode to set.
       * @return This builder for chaining.
       */
      public Builder setTokenCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        tokenCode_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       *
       * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
       * </pre>
       *
       * <code>string description = 4 [json_name = "description"];</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *
       * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
       * </pre>
       *
       * <code>string description = 4 [json_name = "description"];</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *
       * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
       * </pre>
       *
       * <code>string description = 4 [json_name = "description"];</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        description_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
       * </pre>
       *
       * <code>string description = 4 [json_name = "description"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * A human-readable description of the transaction type, such as "Deposit," "Withdrawal," or "Trade."
       * </pre>
       *
       * <code>string description = 4 [json_name = "description"];</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private co.meshtrade.api.type.v1.AmountOuterClass.Amount amount_;
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> amountBuilder_;
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       * @return Whether the amount field is set.
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       * @return The amount.
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount getAmount() {
        if (amountBuilder_ == null) {
          return amount_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : amount_;
        } else {
          return amountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       */
      public Builder setAmount(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (amountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          amount_ = value;
        } else {
          amountBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       */
      public Builder setAmount(
          co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder builderForValue) {
        if (amountBuilder_ == null) {
          amount_ = builderForValue.build();
        } else {
          amountBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       */
      public Builder mergeAmount(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (amountBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            amount_ != null &&
            amount_ != co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance()) {
            getAmountBuilder().mergeFrom(value);
          } else {
            amount_ = value;
          }
        } else {
          amountBuilder_.mergeFrom(value);
        }
        if (amount_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        amount_ = null;
        if (amountBuilder_ != null) {
          amountBuilder_.dispose();
          amountBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder getAmountBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return internalGetAmountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getAmountOrBuilder() {
        if (amountBuilder_ != null) {
          return amountBuilder_.getMessageOrBuilder();
        } else {
          return amount_ == null ?
              co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : amount_;
        }
      }
      /**
       * <pre>
       *
       * The quantity of the token transacted. A positive value indicates an increase in the asset,
       * while a negative value indicates a decrease.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount amount = 5 [json_name = "amount"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> 
          internalGetAmountFieldBuilder() {
        if (amountBuilder_ == null) {
          amountBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder>(
                  getAmount(),
                  getParentForChildren(),
                  isClean());
          amount_ = null;
        }
        return amountBuilder_;
      }

      private co.meshtrade.api.type.v1.AmountOuterClass.Amount price_;
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> priceBuilder_;
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       * @return Whether the price field is set.
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       * @return The price.
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount getPrice() {
        if (priceBuilder_ == null) {
          return price_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : price_;
        } else {
          return priceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       */
      public Builder setPrice(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (priceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          price_ = value;
        } else {
          priceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       */
      public Builder setPrice(
          co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder builderForValue) {
        if (priceBuilder_ == null) {
          price_ = builderForValue.build();
        } else {
          priceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       */
      public Builder mergePrice(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (priceBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            price_ != null &&
            price_ != co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance()) {
            getPriceBuilder().mergeFrom(value);
          } else {
            price_ = value;
          }
        } else {
          priceBuilder_.mergeFrom(value);
        }
        if (price_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        price_ = null;
        if (priceBuilder_ != null) {
          priceBuilder_.dispose();
          priceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder getPriceBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return internalGetPriceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getPriceOrBuilder() {
        if (priceBuilder_ != null) {
          return priceBuilder_.getMessageOrBuilder();
        } else {
          return price_ == null ?
              co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : price_;
        }
      }
      /**
       * <pre>
       *
       * The price per unit of the token at the time of the transaction. This is used to calculate the total cost.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount price = 6 [json_name = "price"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> 
          internalGetPriceFieldBuilder() {
        if (priceBuilder_ == null) {
          priceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder>(
                  getPrice(),
                  getParentForChildren(),
                  isClean());
          price_ = null;
        }
        return priceBuilder_;
      }

      private co.meshtrade.api.type.v1.AmountOuterClass.Amount cost_;
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> costBuilder_;
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       * @return Whether the cost field is set.
       */
      public boolean hasCost() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       * @return The cost.
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount getCost() {
        if (costBuilder_ == null) {
          return cost_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : cost_;
        } else {
          return costBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       */
      public Builder setCost(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (costBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cost_ = value;
        } else {
          costBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       */
      public Builder setCost(
          co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder builderForValue) {
        if (costBuilder_ == null) {
          cost_ = builderForValue.build();
        } else {
          costBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       */
      public Builder mergeCost(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (costBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            cost_ != null &&
            cost_ != co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance()) {
            getCostBuilder().mergeFrom(value);
          } else {
            cost_ = value;
          }
        } else {
          costBuilder_.mergeFrom(value);
        }
        if (cost_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       */
      public Builder clearCost() {
        bitField0_ = (bitField0_ & ~0x00000040);
        cost_ = null;
        if (costBuilder_ != null) {
          costBuilder_.dispose();
          costBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder getCostBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return internalGetCostFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getCostOrBuilder() {
        if (costBuilder_ != null) {
          return costBuilder_.getMessageOrBuilder();
        } else {
          return cost_ == null ?
              co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : cost_;
        }
      }
      /**
       * <pre>
       *
       * The total value of the transaction, calculated as amount * price.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount cost = 7 [json_name = "cost"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> 
          internalGetCostFieldBuilder() {
        if (costBuilder_ == null) {
          costBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder>(
                  getCost(),
                  getParentForChildren(),
                  isClean());
          cost_ = null;
        }
        return costBuilder_;
      }

      private co.meshtrade.api.type.v1.AmountOuterClass.Amount balance_;
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> balanceBuilder_;
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       * @return Whether the balance field is set.
       */
      public boolean hasBalance() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       * @return The balance.
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount getBalance() {
        if (balanceBuilder_ == null) {
          return balance_ == null ? co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : balance_;
        } else {
          return balanceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       */
      public Builder setBalance(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (balanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          balance_ = value;
        } else {
          balanceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       */
      public Builder setBalance(
          co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder builderForValue) {
        if (balanceBuilder_ == null) {
          balance_ = builderForValue.build();
        } else {
          balanceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       */
      public Builder mergeBalance(co.meshtrade.api.type.v1.AmountOuterClass.Amount value) {
        if (balanceBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            balance_ != null &&
            balance_ != co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance()) {
            getBalanceBuilder().mergeFrom(value);
          } else {
            balance_ = value;
          }
        } else {
          balanceBuilder_.mergeFrom(value);
        }
        if (balance_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       */
      public Builder clearBalance() {
        bitField0_ = (bitField0_ & ~0x00000080);
        balance_ = null;
        if (balanceBuilder_ != null) {
          balanceBuilder_.dispose();
          balanceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder getBalanceBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return internalGetBalanceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       */
      public co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder getBalanceOrBuilder() {
        if (balanceBuilder_ != null) {
          return balanceBuilder_.getMessageOrBuilder();
        } else {
          return balance_ == null ?
              co.meshtrade.api.type.v1.AmountOuterClass.Amount.getDefaultInstance() : balance_;
        }
      }
      /**
       * <pre>
       *
       * The remaining balance of the token in the account after the transaction was completed.
       * </pre>
       *
       * <code>.meshtrade.type.v1.Amount balance = 8 [json_name = "balance"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder> 
          internalGetBalanceFieldBuilder() {
        if (balanceBuilder_ == null) {
          balanceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              co.meshtrade.api.type.v1.AmountOuterClass.Amount, co.meshtrade.api.type.v1.AmountOuterClass.Amount.Builder, co.meshtrade.api.type.v1.AmountOuterClass.AmountOrBuilder>(
                  getBalance(),
                  getParentForChildren(),
                  isClean());
          balance_ = null;
        }
        return balanceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:meshtrade.reporting.account_report.v1.TradingStatementEntry)
    }

    // @@protoc_insertion_point(class_scope:meshtrade.reporting.account_report.v1.TradingStatementEntry)
    private static final meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry();
    }

    public static meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TradingStatementEntry>
        PARSER = new com.google.protobuf.AbstractParser<TradingStatementEntry>() {
      @java.lang.Override
      public TradingStatementEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TradingStatementEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TradingStatementEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public meshtrade.reporting.account_report.v1.TradingStatementEntryOuterClass.TradingStatementEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nCmeshtrade/reporting/account_report/v1/" +
      "trading_statement_entry.proto\022%meshtrade" +
      ".reporting.account_report.v1\032\037google/pro" +
      "tobuf/timestamp.proto\032\036meshtrade/type/v1" +
      "/amount.proto\"\216\003\n\025TradingStatementEntry\022" +
      "E\n\020transaction_date\030\001 \001(\0132\032.google.proto" +
      "buf.TimestampR\017transactionDate\022%\n\016transa" +
      "ction_id\030\002 \001(\tR\rtransactionId\022\035\n\ntoken_c" +
      "ode\030\003 \001(\tR\ttokenCode\022 \n\013description\030\004 \001(" +
      "\tR\013description\0221\n\006amount\030\005 \001(\0132\031.meshtra" +
      "de.type.v1.AmountR\006amount\022/\n\005price\030\006 \001(\013" +
      "2\031.meshtrade.type.v1.AmountR\005price\022-\n\004co" +
      "st\030\007 \001(\0132\031.meshtrade.type.v1.AmountR\004cos" +
      "t\0223\n\007balance\030\010 \001(\0132\031.meshtrade.type.v1.A" +
      "mountR\007balanceBJZHgithub.com/meshtrade/a" +
      "pi/go/reporting/account_report/v1;accoun" +
      "t_reportv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
          co.meshtrade.api.type.v1.AmountOuterClass.getDescriptor(),
        });
    internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_meshtrade_reporting_account_report_v1_TradingStatementEntry_descriptor,
        new java.lang.String[] { "TransactionDate", "TransactionId", "TokenCode", "Description", "Amount", "Price", "Cost", "Balance", });
    descriptor.resolveAllFeaturesImmutable();
    com.google.protobuf.TimestampProto.getDescriptor();
    co.meshtrade.api.type.v1.AmountOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
